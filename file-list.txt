| .env.botazon-local
DBHOST=[PLACEHOLDER]
DBUSER=[PLACEHOLDER]
DBPASSWORD=[PLACEHOLDER]
DBDATABASE=[PLACEHOLDER]
SPORT=[PLACEHOLDER]
SELLING_PARTNER_APP_CLIENT_ID=[PLACEHOLDER]
SELLING_PARTNER_APP_CLIENT_SECRET=[PLACEHOLDER]
AWS_ACCESS_KEY_ID=[PLACEHOLDER]
AWS_SECRET_ACCESS_KEY=[PLACEHOLDER]
AWS_SELLING_PARTNER_ROLE=[PLACEHOLDER]
sellerId=[PLACEHOLDER]
AmzToken=[PLACEHOLDER]
market_id=[PLACEHOLDER]
teleToken=[PLACEHOLDER]
| .env.botazon-server
DBHOST=[PLACEHOLDER]
DBUSER=[PLACEHOLDER]
DBPASSWORD=[PLACEHOLDER]
DBDATABASE=[PLACEHOLDER]
SPORT=[PLACEHOLDER]
SELLING_PARTNER_APP_CLIENT_ID=[PLACEHOLDER]
SELLING_PARTNER_APP_CLIENT_SECRET=[PLACEHOLDER]
AWS_ACCESS_KEY_ID=[PLACEHOLDER]
AWS_SECRET_ACCESS_KEY=[PLACEHOLDER]
AWS_SELLING_PARTNER_ROLE=[PLACEHOLDER]
sellerId=[PLACEHOLDER]
AmzToken=[PLACEHOLDER]
market_id=[PLACEHOLDER]
teleToken=[PLACEHOLDER]
| .env.fireball
DBHOST=[PLACEHOLDER]
DBUSER=[PLACEHOLDER]
DBPASSWORD=[PLACEHOLDER]
DBDATABASE=[PLACEHOLDER]
SPORT=[PLACEHOLDER]
SELLING_PARTNER_APP_CLIENT_ID=[PLACEHOLDER]
SELLING_PARTNER_APP_CLIENT_SECRET=[PLACEHOLDER]
AWS_ACCESS_KEY_ID=[PLACEHOLDER]
AWS_SECRET_ACCESS_KEY=[PLACEHOLDER]
AWS_SELLING_PARTNER_ROLE=[PLACEHOLDER]
sellerId=[PLACEHOLDER]
AmzToken=[PLACEHOLDER]
market_id=[PLACEHOLDER]
teleToken=[PLACEHOLDER]
| .env.fourseasons
DBHOST=[PLACEHOLDER]
DBUSER=[PLACEHOLDER]
DBPASSWORD=[PLACEHOLDER]
DBDATABASE=[PLACEHOLDER]
SPORT=[PLACEHOLDER]
SELLING_PARTNER_APP_CLIENT_ID=[PLACEHOLDER]
SELLING_PARTNER_APP_CLIENT_SECRET=[PLACEHOLDER]
AWS_ACCESS_KEY_ID=[PLACEHOLDER]
AWS_SECRET_ACCESS_KEY=[PLACEHOLDER]
AWS_SELLING_PARTNER_ROLE=[PLACEHOLDER]
sellerId=[PLACEHOLDER]
AmzToken=[PLACEHOLDER]
market_id=[PLACEHOLDER]
teleToken=[PLACEHOLDER]
| .env.fourseasons2
DBHOST=[PLACEHOLDER]
DBUSER=[PLACEHOLDER]
DBPASSWORD=[PLACEHOLDER]
DBDATABASE=[PLACEHOLDER]
SPORT=[PLACEHOLDER]
SELLING_PARTNER_APP_CLIENT_ID=[PLACEHOLDER]
SELLING_PARTNER_APP_CLIENT_SECRET=[PLACEHOLDER]
AWS_ACCESS_KEY_ID=[PLACEHOLDER]
AWS_SECRET_ACCESS_KEY=[PLACEHOLDER]
AWS_SELLING_PARTNER_ROLE=[PLACEHOLDER]
sellerId=[PLACEHOLDER]
AmzToken=[PLACEHOLDER]
market_id=[PLACEHOLDER]
| .env.rakoon

---
| .env.winter
DBHOST=[PLACEHOLDER]
DBUSER=[PLACEHOLDER]
DBPASSWORD=[PLACEHOLDER]
DBDATABASE=[PLACEHOLDER]
SPORT=[PLACEHOLDER]
SELLING_PARTNER_APP_CLIENT_ID=[PLACEHOLDER]
SELLING_PARTNER_APP_CLIENT_SECRET=[PLACEHOLDER]
AWS_ACCESS_KEY_ID=[PLACEHOLDER]
AWS_SECRET_ACCESS_KEY=[PLACEHOLDER]
AWS_SELLING_PARTNER_ROLE=[PLACEHOLDER]
sellerId=[PLACEHOLDER]
AmzToken=[PLACEHOLDER]
market_id=[PLACEHOLDER]
teleToken=[PLACEHOLDER]
| .env.winter2
DBHOST=[PLACEHOLDER]
DBUSER=[PLACEHOLDER]
DBPASSWORD=[PLACEHOLDER]
DBDATABASE=[PLACEHOLDER]
SPORT=[PLACEHOLDER]
SELLING_PARTNER_APP_CLIENT_ID=[PLACEHOLDER]
SELLING_PARTNER_APP_CLIENT_SECRET=[PLACEHOLDER]
AWS_ACCESS_KEY_ID=[PLACEHOLDER]
AWS_SECRET_ACCESS_KEY=[PLACEHOLDER]
AWS_SELLING_PARTNER_ROLE=[PLACEHOLDER]
sellerId=[PLACEHOLDER]
AmzToken=[PLACEHOLDER]
market_id=[PLACEHOLDER]
| .gitattributes
# Auto detect text files and perform LF normalization
* text=auto

---
| .gitignore
*.env*
*.log
endpoints*
*.json
---
| app.js
const express = require('express');
const app = express();
const routes = require('./routes/routes.js');
const logRoutes = require('./routes/log');
require('dotenv').config({path: `.env.${process.env.NODE_ENV}`})
port = process.env.SPORT;
require ('./src/cronjobs');

app.use(express.json());


app.use('/',routes);
app.use('/logs',logRoutes);

app.listen(port,()=> {
    console.log(`Listening on port ${port}`);
});

---
| endpoints.json
{
  "aplusContent": {
    "__versions": ["2020-11-01"],
    "__operations": [
      "searchContentDocuments",
      "createContentDocument",
      "getContentDocument",
      "updateContentDocument",
      "listContentDocumentAsinRelations",
      "postContentDocumentAsinRelations",
      "validateContentDocumentAsinRelations",
      "searchContentPublishRecords",
      "postContentDocumentApprovalSubmission",
      "postContentDocumentSuspendSubmission"
    ],
    "2020-11-01": {}
  },
  "authorization": {
    "__versions": ["v1"],
    "__operations": ["getAuthorizationCode"],
    "v1": {}
  },
  "catalogItems": {
    "__versions": ["v0", "2020-12-01", "2022-04-01"],
    "__operations": [
      "getCatalogItem",
      "listCatalogCategories",
      "searchCatalogItems"
    ],
    "v0": {},
    "2020-12-01": {},
    "2022-04-01": {}
  },
  "easyShip": {
    "__versions": ["2022-03-23"],
    "__operations": [
      "listHandoverSlots",
      "getScheduledPackage",
      "createScheduledPackage",
      "updateScheduledPackages"
    ],
    "2022-03-23": {}
  },
  "fbaInboundEligibility": {
    "__versions": ["v1"],
    "__operations": ["getItemEligibilityPreview"],
    "v1": {}
  },
  "fbaInventory": {
    "__versions": ["v1"],
    "__operations": ["getInventorySummaries"],
    "v1": {}
  },
  "fbaSmallAndLight": {
    "__versions": ["v1"],
    "__operations": [
      "getSmallAndLightEnrollmentBySellerSKU",
      "putSmallAndLightEnrollmentBySellerSKU",
      "deleteSmallAndLightEnrollmentBySellerSKU",
      "getSmallAndLightEligibilityBySellerSKU",
      "getSmallAndLightFeePreview"
    ],
    "v1": {}
  },
  "feeds": {
    "__versions": ["2020-09-04", "2021-06-30"],
    "__operations": [
      "getFeeds",
      "createFeed",
      "getFeed",
      "cancelFeed",
      "createFeedDocument",
      "getFeedDocument"
    ],
    "2020-09-04": {},
    "2021-06-30": {}
  },
  "finances": {
    "__versions": ["v0"],
    "__operations": [
      "listFinancialEventGroups",
      "listFinancialEventsByGroupId",
      "listFinancialEventsByOrderId",
      "listFinancialEvents"
    ],
    "v0": {}
  },
  "fulfillmentInbound": {
    "__versions": ["v0"],
    "__operations": [
      "getInboundGuidance",
      "createInboundShipmentPlan",
      "updateInboundShipment",
      "createInboundShipment",
      "getPreorderInfo",
      "confirmPreorder",
      "getPrepInstructions",
      "getTransportDetails",
      "putTransportDetails",
      "voidTransport",
      "estimateTransport",
      "confirmTransport",
      "getLabels",
      "getBillOfLading",
      "getShipments",
      "getShipmentItemsByShipmentId",
      "getShipmentItems"
    ],
    "v0": {}
  },
  "fulfillmentOutbound": {
    "__versions": ["2020-07-01"],
    "__operations": [
      "getFulfillmentPreview",
      "listAllFulfillmentOrders",
      "createFulfillmentOrder",
      "getPackageTrackingDetails",
      "listReturnReasonCodes",
      "createFulfillmentReturn",
      "getFulfillmentOrder",
      "updateFulfillmentOrder",
      "cancelFulfillmentOrder",
      "getFeatures",
      "getFeatureInventory",
      "getFeatureSKU"
    ],
    "2020-07-01": {}
  },
  "listingsItems": {
    "__versions": ["2020-09-01", "2021-08-01"],
    "__operations": [
      "getListingsItem",
      "putListingsItem",
      "deleteListingsItem",
      "patchListingsItem"
    ],
    "2020-09-01": {},
    "2021-08-01": {}
  },
  "listingsRestrictions": {
    "__versions": ["2021-08-01"],
    "__operations": ["getListingsRestrictions"],
    "2021-08-01": {}
  },
  "merchantFulfillment": {
    "__versions": ["v0"],
    "__operations": [
      "getEligibleShipmentServicesOld",
      "getEligibleShipmentServices",
      "getShipment",
      "cancelShipment",
      "cancelShipmentOld",
      "createShipment",
      "getAdditionalSellerInputsOld",
      "getAdditionalSellerInputs"
    ],
    "v0": {}
  },
  "messaging": {
    "__versions": ["v1"],
    "__operations": [
      "getMessagingActionsForOrder",
      "confirmCustomizationDetails",
      "createConfirmDeliveryDetails",
      "createLegalDisclosure",
      "createNegativeFeedbackRemoval",
      "createConfirmOrderDetails",
      "createConfirmServiceDetails",
      "CreateAmazonMotors",
      "CreateWarranty",
      "GetAttributes",
      "createDigitalAccessKey",
      "createUnexpectedProblem"
    ],
    "v1": {}
  },
  "notifications": {
    "__versions": ["v1"],
    "__operations": [
      "getSubscription",
      "createSubscription",
      "getSubscriptionById",
      "deleteSubscriptionById",
      "getDestinations",
      "createDestination",
      "getDestination",
      "deleteDestination"
    ],
    "v1": {}
  },
  "orders": {
    "__versions": ["v0"],
    "__operations": [
      "getOrders",
      "getOrder",
      "getOrderBuyerInfo",
      "getOrderAddress",
      "getOrderItems",
      "getOrderItemsBuyerInfo",
      "updateShipmentStatus"
    ],
    "v0": {}
  },
  "productFees": {
    "__versions": ["v0"],
    "__operations": [
      "getMyFeesEstimateForSKU",
      "getMyFeesEstimateForASIN",
      "getMyFeesEstimates"
    ],
    "v0": {}
  },
  "productPricing": {
    "__versions": ["v0"],
    "__operations": [
      "getPricing",
      "getCompetitivePricing",
      "getListingOffers",
      "getItemOffers",
      "getItemOffersBatch",
      "getListingOffersBatch"
    ],
    "v0": {}
  },
  "productTypeDefinitions": {
    "__versions": ["2020-09-01"],
    "__operations": [
      "searchDefinitionsProductTypes",
      "getDefinitionsProductType"
    ],
    "2020-09-01": {}
  },
  "reports": {
    "__versions": ["2020-09-04", "2021-06-30"],
    "__operations": [
      "getReports",
      "createReport",
      "getReport",
      "cancelReport",
      "getReportSchedules",
      "createReportSchedule",
      "getReportSchedule",
      "cancelReportSchedule",
      "getReportDocument"
    ],
    "2020-09-04": {},
    "2021-06-30": {}
  },
  "sales": {
    "__versions": ["v1"],
    "__operations": ["getOrderMetrics"],
    "v1": {}
  },
  "sellers": {
    "__versions": ["v1"],
    "__operations": ["getMarketplaceParticipations"],
    "v1": {}
  },
  "services": {
    "__versions": ["v1"],
    "__operations": [
      "getServiceJobByServiceJobId",
      "cancelServiceJobByServiceJobId",
      "completeServiceJobByServiceJobId",
      "getServiceJobs",
      "addAppointmentForServiceJobByServiceJobId",
      "rescheduleAppointmentForServiceJobByServiceJobId",
      "assignAppointmentResources",
      "setAppointmentFulfillmentData",
      "getRangeSlotCapacity",
      "getFixedSlotCapacity",
      "updateSchedule",
      "createReservation",
      "updateReservation",
      "cancelReservation",
      "getAppointmentSlotsByJobId",
      "getAppointmentSlots",
      "createServiceDocumentUploadDestination"
    ],
    "v1": {}
  },
  "shipmentInvoicing": {
    "__versions": ["v0"],
    "__operations": ["getShipmentDetails", "submitInvoice", "getInvoiceStatus"],
    "v0": {}
  },
  "shipping": {
    "__versions": ["v1"],
    "__operations": [
      "createShipment",
      "getShipment",
      "cancelShipment",
      "purchaseLabels",
      "retrieveShippingLabel",
      "purchaseShipment",
      "getRates",
      "getAccount",
      "getTrackingInformation"
    ],
    "v1": {}
  },
  "solicitations": {
    "__versions": ["v1"],
    "__operations": [
      "getSolicitationActionsForOrder",
      "createProductReviewAndSellerFeedbackSolicitation"
    ],
    "v1": {}
  },
  "tokens": {
    "__versions": ["2021-03-01"],
    "__operations": ["createRestrictedDataToken"],
    "2021-03-01": {}
  },
  "uploads": {
    "__versions": ["2020-11-01"],
    "__operations": ["createUploadDestinationForResource"],
    "2020-11-01": {}
  },
  "vendorDirectFulfillmentInventory": {
    "__versions": ["v1"],
    "__operations": ["submitInventoryUpdate"],
    "v1": {}
  },
  "vendorDirectFulfillmentOrders": {
    "__versions": ["v1", "2021-12-28"],
    "__operations": ["getOrders", "getOrder", "submitAcknowledgement"],
    "v1": {},
    "2021-12-28": {}
  },
  "vendorDirectFulfillmentPayments": {
    "__versions": ["v1"],
    "__operations": ["submitInvoice"],
    "v1": {}
  },
  "vendorDirectFulfillmentSandboxTestData": {
    "__versions": ["2021-10-28"],
    "__operations": ["generateOrderScenarios", "getOrderScenarios"],
    "2021-10-28": {}
  },
  "vendorDirectFulfillmentShipping": {
    "__versions": ["v1", "2021-12-28"],
    "__operations": [
      "getShippingLabels",
      "submitShippingLabelRequest",
      "getShippingLabel",
      "createShippingLabels",
      "submitShipmentConfirmations",
      "submitShipmentStatusUpdates",
      "getCustomerInvoices",
      "getCustomerInvoice",
      "getPackingSlips",
      "getPackingSlip"
    ],
    "v1": {},
    "2021-12-28": {}
  },
  "vendorDirectFulfillmentTransactions": {
    "__versions": ["v1", "2021-12-28"],
    "__operations": ["getTransactionStatus"],
    "v1": {},
    "2021-12-28": {}
  },
  "vendorInvoices": {
    "__versions": ["v1"],
    "__operations": ["submitInvoices"],
    "v1": {}
  },
  "vendorOrders": {
    "__versions": ["v1"],
    "__operations": [
      "getPurchaseOrders",
      "getPurchaseOrder",
      "submitAcknowledgement",
      "getPurchaseOrdersStatus"
    ],
    "v1": {}
  },
  "vendorShipments": {
    "__versions": ["v1"],
    "__operations": ["SubmitShipmentConfirmations"],
    "v1": {}
  },
  "vendorTransactionStatus": {
    "__versions": ["v1"],
    "__operations": ["getTransaction"],
    "v1": {}
  }
}

---
| envSample
#SET UP BY FILLING UP YOUR INFORMATION. Save it as .env.environmentName

# Database Credentials - MYSQL
DBHOST = "localhost"
DBUSER = "user"
DBPASSWORD = "password"
DBDATABASE = "database"
SPORT = "1234"

# Seller Partner Keys

SELLING_PARTNER_APP_CLIENT_ID='EXAMPLE'
SELLING_PARTNER_APP_CLIENT_SECRET='EXAMPLE'
AWS_ACCESS_KEY_ID='EXAMPLE'
AWS_SECRET_ACCESS_KEY='EXAMPLE'
AWS_SELLING_PARTNER_ROLE='EXAMPLE'
sellerId = 'EXAMPLE'
AmzToken= 'EXAMPLE'

# TOKEN!
market_id='EXAMPLE'

#Telegram bot
teleToken = 'EXAMPLE'


---
logs/
| package-lock.json
{
  "name": "anmasoftv3",
  "version": "3.0.0",
  "lockfileVersion": 2,
  "requires": true,
  "packages": {
    "": {
      "name": "anmasoftv3",
      "version": "3.0.0",
      "license": "ISC",
      "dependencies": {
        "amazon-sp-api": "^0.8.0",
        "cron": "^2.1.0",
        "dotenv": "^16.0.3",
        "express": "^4.18.2",
        "md5": "^2.3.0",
        "mysql2": "^2.3.3",
        "node-telegram-bot-api": "^0.60.0",
        "puppeteer": "^19.4.0",
        "util": "^0.12.5"
      }
    },
    "node_modules/@babel/code-frame": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.18.6.tgz",
      "integrity": "sha512-TDCmlK5eOvH+eH7cdAFlNXeVJqWIQ7gW9tY1GJIpUtFb6CmjVyq2VM3u71bOyR8CRihcCgMUYoDNyLXao3+70Q==",
      "dependencies": {
        "@babel/highlight": "^7.18.6"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-validator-identifier": {
      "version": "7.19.1",
      "resolved": "https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.19.1.tgz",
      "integrity": "sha512-awrNfaMtnHUr653GgGEs++LlAvW6w+DcPrOliSMXWCKo597CwL5Acf/wWdNkf/tfEQE3mjkeD1YOVZOUV/od1w==",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/highlight": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/highlight/-/highlight-7.18.6.tgz",
      "integrity": "sha512-u7stbOuYjaPezCuLj29hNW1v64M2Md2qupEKP1fHc7WdOA3DgLh37suiSrZYY7haUB7iBeQZ9P1uiRF359do3g==",
      "dependencies": {
        "@babel/helper-validator-identifier": "^7.18.6",
        "chalk": "^2.0.0",
        "js-tokens": "^4.0.0"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@types/node": {
      "version": "18.11.14",
      "resolved": "https://registry.npmjs.org/@types/node/-/node-18.11.14.tgz",
      "integrity": "sha512-0KXV57tENYmmJMl+FekeW9V3O/rlcqGQQJ/hNh9r8pKIj304pskWuEd8fCyNT86g/TpO0gcOTiLzsHLEURFMIQ==",
      "optional": true
    },
    "node_modules/@types/yauzl": {
      "version": "2.10.0",
      "resolved": "https://registry.npmjs.org/@types/yauzl/-/yauzl-2.10.0.tgz",
      "integrity": "sha512-Cn6WYCm0tXv8p6k+A8PvbDG763EDpBoTzHdA+Q/MF6H3sapGjCm9NzoaJncJS9tUKSuCoDs9XHxYYsQDgxR6kw==",
      "optional": true,
      "dependencies": {
        "@types/node": "*"
      }
    },
    "node_modules/accepts": {
      "version": "1.3.8",
      "resolved": "https://registry.npmjs.org/accepts/-/accepts-1.3.8.tgz",
      "integrity": "sha512-PYAthTa2m2VKxuvSD3DPC/Gy+U+sOA1LAuT8mkmRuvw+NACSaeXEQ+NHcVF7rONl6qcaxV3Uuemwawk+7+SJLw==",
      "dependencies": {
        "mime-types": "~2.1.34",
        "negotiator": "0.6.3"
      },
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/agent-base": {
      "version": "6.0.2",
      "resolved": "https://registry.npmjs.org/agent-base/-/agent-base-6.0.2.tgz",
      "integrity": "sha512-RZNwNclF7+MS/8bDg70amg32dyeZGZxiDuQmZxKLAlQjr3jGyLx+4Kkk58UO7D2QdgFIQCovuSuZESne6RG6XQ==",
      "dependencies": {
        "debug": "4"
      },
      "engines": {
        "node": ">= 6.0.0"
      }
    },
    "node_modules/agent-base/node_modules/debug": {
      "version": "4.3.4",
      "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.4.tgz",
      "integrity": "sha512-PRWFHuSU3eDtQJPvnNY7Jcket1j0t5OuOsFzPPzsekD52Zl8qUfFIPEiswXqIvHWGVHOgX+7G/vCNNhehwxfkQ==",
      "dependencies": {
        "ms": "2.1.2"
      },
      "engines": {
        "node": ">=6.0"
      },
      "peerDependenciesMeta": {
        "supports-color": {
          "optional": true
        }
      }
    },
    "node_modules/agent-base/node_modules/ms": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
      "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w=="
    },
    "node_modules/ajv": {
      "version": "6.12.6",
      "resolved": "https://registry.npmjs.org/ajv/-/ajv-6.12.6.tgz",
      "integrity": "sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==",
      "dependencies": {
        "fast-deep-equal": "^3.1.1",
        "fast-json-stable-stringify": "^2.0.0",
        "json-schema-traverse": "^0.4.1",
        "uri-js": "^4.2.2"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/epoberezkin"
      }
    },
    "node_modules/amazon-sp-api": {
      "version": "0.8.0",
      "resolved": "https://registry.npmjs.org/amazon-sp-api/-/amazon-sp-api-0.8.0.tgz",
      "integrity": "sha512-MbnVsBf8CGzunAkzW3ofuozA+0NqbJEjJvXIdtUXddaCdTf90xkVWja6qtnIhtfl+8mq3AMkXg24wgab5/CoTw==",
      "dependencies": {
        "crypto-js": "^4.1.1",
        "csvtojson": "^2.0.10",
        "fast-xml-parser": "^4.0.9",
        "iconv-lite": "^0.6.3",
        "qs": "^6.11.0"
      }
    },
    "node_modules/amazon-sp-api/node_modules/iconv-lite": {
      "version": "0.6.3",
      "resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.6.3.tgz",
      "integrity": "sha512-4fCk79wshMdzMp2rH06qWrJE4iolqLhCUH+OiuIgU++RB0+94NlDL81atO7GX55uUKueo0txHNtvEyI6D7WdMw==",
      "dependencies": {
        "safer-buffer": ">= 2.1.2 < 3.0.0"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/ansi-styles": {
      "version": "3.2.1",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
      "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
      "dependencies": {
        "color-convert": "^1.9.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/argparse": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/argparse/-/argparse-2.0.1.tgz",
      "integrity": "sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q=="
    },
    "node_modules/array-flatten": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/array-flatten/-/array-flatten-1.1.1.tgz",
      "integrity": "sha512-PCVAQswWemu6UdxsDFFX/+gVeYqKAod3D3UVm91jHwynguOwAvYPhx8nNlM++NqRcK6CxxpUafjmhIdKiHibqg=="
    },
    "node_modules/array.prototype.findindex": {
      "version": "2.2.1",
      "resolved": "https://registry.npmjs.org/array.prototype.findindex/-/array.prototype.findindex-2.2.1.tgz",
      "integrity": "sha512-tMj4uTmGpaGUh4XFMUh3H7KYAIqlygrlXchOEVTiICbTwRwMhDqtzsOwvtI+WAf1GdjJBeIP3Bu92Qg0SnXdtA==",
      "dependencies": {
        "call-bind": "^1.0.2",
        "define-properties": "^1.1.4",
        "es-abstract": "^1.20.4",
        "es-shim-unscopables": "^1.0.0"
      }
    },
    "node_modules/asn1": {
      "version": "0.2.6",
      "resolved": "https://registry.npmjs.org/asn1/-/asn1-0.2.6.tgz",
      "integrity": "sha512-ix/FxPn0MDjeyJ7i/yoHGFt/EX6LyNbxSEhPPXODPL+KB0VPk86UYfL0lMdy+KCnv+fmvIzySwaK5COwqVbWTQ==",
      "dependencies": {
        "safer-buffer": "~2.1.0"
      }
    },
    "node_modules/assert-plus": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/assert-plus/-/assert-plus-1.0.0.tgz",
      "integrity": "sha512-NfJ4UzBCcQGLDlQq7nHxH+tv3kyZ0hHQqF5BO6J7tNJeP5do1llPr8dZ8zHonfhAu0PHAdMkSo+8o0wxg9lZWw==",
      "engines": {
        "node": ">=0.8"
      }
    },
    "node_modules/asynckit": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/asynckit/-/asynckit-0.4.0.tgz",
      "integrity": "sha512-Oei9OH4tRh0YqU3GxhX79dM/mwVgvbZJaSNaRk+bshkj0S5cfHcgYakreBjrHwatXKbz+IoIdYLxrKim2MjW0Q=="
    },
    "node_modules/available-typed-arrays": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/available-typed-arrays/-/available-typed-arrays-1.0.5.tgz",
      "integrity": "sha512-DMD0KiN46eipeziST1LPP/STfDU0sufISXmjSgvVsoU2tqxctQeASejWcfNtxYKqETM1UxQ8sp2OrSBWpHY6sw==",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/aws-sign2": {
      "version": "0.7.0",
      "resolved": "https://registry.npmjs.org/aws-sign2/-/aws-sign2-0.7.0.tgz",
      "integrity": "sha512-08kcGqnYf/YmjoRhfxyu+CLxBjUtHLXLXX/vUfx9l2LYzG3c1m61nrpyFUZI6zeS+Li/wWMMidD9KgrqtGq3mA==",
      "engines": {
        "node": "*"
      }
    },
    "node_modules/aws4": {
      "version": "1.11.0",
      "resolved": "https://registry.npmjs.org/aws4/-/aws4-1.11.0.tgz",
      "integrity": "sha512-xh1Rl34h6Fi1DC2WWKfxUTVqRsNnr6LsKz2+hfwDxQJWmrx8+c7ylaqBMcHfl1U1r2dsifOvKX3LQuLNZ+XSvA=="
    },
    "node_modules/balanced-match": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz",
      "integrity": "sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw=="
    },
    "node_modules/base64-js": {
      "version": "1.5.1",
      "resolved": "https://registry.npmjs.org/base64-js/-/base64-js-1.5.1.tgz",
      "integrity": "sha512-AKpaYlHn8t4SVbOHCy+b5+KKgvR4vrsD8vbvrbiQJps7fKDTkjkDry6ji0rUJjC0kzbNePLwzxq8iypo41qeWA==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ]
    },
    "node_modules/bcrypt-pbkdf": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/bcrypt-pbkdf/-/bcrypt-pbkdf-1.0.2.tgz",
      "integrity": "sha512-qeFIXtP4MSoi6NLqO12WfqARWWuCKi2Rn/9hJLEmtB5yTNr9DqFWkJRCf2qShWzPeAMRnOgCrq0sg/KLv5ES9w==",
      "dependencies": {
        "tweetnacl": "^0.14.3"
      }
    },
    "node_modules/bl": {
      "version": "1.2.3",
      "resolved": "https://registry.npmjs.org/bl/-/bl-1.2.3.tgz",
      "integrity": "sha512-pvcNpa0UU69UT341rO6AYy4FVAIkUHuZXRIWbq+zHnsVcRzDDjIAhGuuYoi0d//cwIwtt4pkpKycWEfjdV+vww==",
      "dependencies": {
        "readable-stream": "^2.3.5",
        "safe-buffer": "^5.1.1"
      }
    },
    "node_modules/bluebird": {
      "version": "3.7.2",
      "resolved": "https://registry.npmjs.org/bluebird/-/bluebird-3.7.2.tgz",
      "integrity": "sha512-XpNj6GDQzdfW+r2Wnn7xiSAd7TM3jzkxGXBGTtWKuSXv1xUV+azxAm8jdWZN06QTQk+2N2XB9jRDkvbmQmcRtg=="
    },
    "node_modules/body-parser": {
      "version": "1.20.1",
      "resolved": "https://registry.npmjs.org/body-parser/-/body-parser-1.20.1.tgz",
      "integrity": "sha512-jWi7abTbYwajOytWCQc37VulmWiRae5RyTpaCyDcS5/lMdtwSz5lOpDE67srw/HYe35f1z3fDQw+3txg7gNtWw==",
      "dependencies": {
        "bytes": "3.1.2",
        "content-type": "~1.0.4",
        "debug": "2.6.9",
        "depd": "2.0.0",
        "destroy": "1.2.0",
        "http-errors": "2.0.0",
        "iconv-lite": "0.4.24",
        "on-finished": "2.4.1",
        "qs": "6.11.0",
        "raw-body": "2.5.1",
        "type-is": "~1.6.18",
        "unpipe": "1.0.0"
      },
      "engines": {
        "node": ">= 0.8",
        "npm": "1.2.8000 || >= 1.4.16"
      }
    },
    "node_modules/brace-expansion": {
      "version": "1.1.11",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz",
      "integrity": "sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==",
      "dependencies": {
        "balanced-match": "^1.0.0",
        "concat-map": "0.0.1"
      }
    },
    "node_modules/buffer": {
      "version": "5.7.1",
      "resolved": "https://registry.npmjs.org/buffer/-/buffer-5.7.1.tgz",
      "integrity": "sha512-EHcyIPBQ4BSGlvjB16k5KgAJ27CIsHY/2JBmCRReo48y9rQ3MaUzWX3KVlBa4U7MyX02HdVj0K7C3WaB3ju7FQ==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "dependencies": {
        "base64-js": "^1.3.1",
        "ieee754": "^1.1.13"
      }
    },
    "node_modules/buffer-crc32": {
      "version": "0.2.13",
      "resolved": "https://registry.npmjs.org/buffer-crc32/-/buffer-crc32-0.2.13.tgz",
      "integrity": "sha512-VO9Ht/+p3SN7SKWqcrgEzjGbRSJYTx+Q1pTQC0wrWqHx0vpJraQ6GtHx8tvcg1rlK1byhU5gccxgOgj7B0TDkQ==",
      "engines": {
        "node": "*"
      }
    },
    "node_modules/bytes": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/bytes/-/bytes-3.1.2.tgz",
      "integrity": "sha512-/Nf7TyzTx6S3yRJObOAV7956r8cr2+Oj8AC5dt8wSP3BQAoeX58NoHyCU8P8zGkNXStjTSi6fzO6F0pBdcYbEg==",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/call-bind": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/call-bind/-/call-bind-1.0.2.tgz",
      "integrity": "sha512-7O+FbCihrB5WGbFYesctwmTKae6rOiIzmz1icreWJ+0aA7LJfuqhEso2T9ncpcFtzMQtzXf2QGGueWJGTYsqrA==",
      "dependencies": {
        "function-bind": "^1.1.1",
        "get-intrinsic": "^1.0.2"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/callsites": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/callsites/-/callsites-3.1.0.tgz",
      "integrity": "sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/caseless": {
      "version": "0.12.0",
      "resolved": "https://registry.npmjs.org/caseless/-/caseless-0.12.0.tgz",
      "integrity": "sha512-4tYFyifaFfGacoiObjJegolkwSU4xQNGbVgUiNYVUxbQ2x2lUsFvY4hVgVzGiIe6WLOPqycWXA40l+PWsxthUw=="
    },
    "node_modules/chalk": {
      "version": "2.4.2",
      "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz",
      "integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==",
      "dependencies": {
        "ansi-styles": "^3.2.1",
        "escape-string-regexp": "^1.0.5",
        "supports-color": "^5.3.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/charenc": {
      "version": "0.0.2",
      "resolved": "https://registry.npmjs.org/charenc/-/charenc-0.0.2.tgz",
      "integrity": "sha512-yrLQ/yVUFXkzg7EDQsPieE/53+0RlaWTs+wBrvW36cyilJ2SaDWfl4Yj7MtLTXleV9uEKefbAGUPv2/iWSooRA==",
      "engines": {
        "node": "*"
      }
    },
    "node_modules/chownr": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/chownr/-/chownr-1.1.4.tgz",
      "integrity": "sha512-jJ0bqzaylmJtVnNgzTeSOs8DPavpbYgEr/b0YL8/2GO3xJEhInFmhKMUnEJQjZumK7KXGFhUy89PrsJWlakBVg=="
    },
    "node_modules/color-convert": {
      "version": "1.9.3",
      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz",
      "integrity": "sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==",
      "dependencies": {
        "color-name": "1.1.3"
      }
    },
    "node_modules/color-name": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz",
      "integrity": "sha512-72fSenhMw2HZMTVHeCA9KCmpEIbzWiQsjN+BHcBbS9vr1mtt+vJjPdksIBNUmKAW8TFUDPJK5SUU3QhE9NEXDw=="
    },
    "node_modules/combined-stream": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/combined-stream/-/combined-stream-1.0.8.tgz",
      "integrity": "sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8lDdnvmMOe/+5cdoEdg==",
      "dependencies": {
        "delayed-stream": "~1.0.0"
      },
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/concat-map": {
      "version": "0.0.1",
      "resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
      "integrity": "sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg=="
    },
    "node_modules/content-disposition": {
      "version": "0.5.4",
      "resolved": "https://registry.npmjs.org/content-disposition/-/content-disposition-0.5.4.tgz",
      "integrity": "sha512-FveZTNuGw04cxlAiWbzi6zTAL/lhehaWbTtgluJh4/E95DqMwTmha3KZN1aAWA8cFIhHzMZUvLevkw5Rqk+tSQ==",
      "dependencies": {
        "safe-buffer": "5.2.1"
      },
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/content-type": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/content-type/-/content-type-1.0.4.tgz",
      "integrity": "sha512-hIP3EEPs8tB9AT1L+NUqtwOAps4mk2Zob89MWXMHjHWg9milF/j4osnnQLXBCBFBk/tvIG/tUc9mOUJiPBhPXA==",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/cookie": {
      "version": "0.5.0",
      "resolved": "https://registry.npmjs.org/cookie/-/cookie-0.5.0.tgz",
      "integrity": "sha512-YZ3GUyn/o8gfKJlnlX7g7xq4gyO6OSuhGPKaaGssGB2qgDUS0gPgtTvoyZLTt9Ab6dC4hfc9dV5arkvc/OCmrw==",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/cookie-signature": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/cookie-signature/-/cookie-signature-1.0.6.tgz",
      "integrity": "sha512-QADzlaHc8icV8I7vbaJXJwod9HWYp8uCqf1xa4OfNu1T7JVxQIrUgOWtHdNDtPiywmFbiS12VjotIXLrKM3orQ=="
    },
    "node_modules/core-util-is": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/core-util-is/-/core-util-is-1.0.3.tgz",
      "integrity": "sha512-ZQBvi1DcpJ4GDqanjucZ2Hj3wEO5pZDS89BWbkcrvdxksJorwUDDZamX9ldFkp9aw2lmBDLgkObEA4DWNJ9FYQ=="
    },
    "node_modules/cosmiconfig": {
      "version": "8.0.0",
      "resolved": "https://registry.npmjs.org/cosmiconfig/-/cosmiconfig-8.0.0.tgz",
      "integrity": "sha512-da1EafcpH6b/TD8vDRaWV7xFINlHlF6zKsGwS1TsuVJTZRkquaS5HTMq7uq6h31619QjbsYl21gVDOm32KM1vQ==",
      "dependencies": {
        "import-fresh": "^3.2.1",
        "js-yaml": "^4.1.0",
        "parse-json": "^5.0.0",
        "path-type": "^4.0.0"
      },
      "engines": {
        "node": ">=14"
      }
    },
    "node_modules/cron": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/cron/-/cron-2.1.0.tgz",
      "integrity": "sha512-Hq7u3P8y7UWYvsZbSKHHJDVG0VO9O7tp2qljxzTScelcTODBfCme8AIhnZsFwmQ9NchZ3hr2uNr+s3DSms7q6w==",
      "dependencies": {
        "luxon": "^1.23.x"
      }
    },
    "node_modules/cross-fetch": {
      "version": "3.1.5",
      "resolved": "https://registry.npmjs.org/cross-fetch/-/cross-fetch-3.1.5.tgz",
      "integrity": "sha512-lvb1SBsI0Z7GDwmuid+mU3kWVBwTVUbe7S0H52yaaAdQOXq2YktTCZdlAcNKFzE6QtRz0snpw9bNiPeOIkkQvw==",
      "dependencies": {
        "node-fetch": "2.6.7"
      }
    },
    "node_modules/crypt": {
      "version": "0.0.2",
      "resolved": "https://registry.npmjs.org/crypt/-/crypt-0.0.2.tgz",
      "integrity": "sha512-mCxBlsHFYh9C+HVpiEacem8FEBnMXgU9gy4zmNC+SXAZNB/1idgp/aulFJ4FgCi7GPEVbfyng092GqL2k2rmow==",
      "engines": {
        "node": "*"
      }
    },
    "node_modules/crypto-js": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/crypto-js/-/crypto-js-4.1.1.tgz",
      "integrity": "sha512-o2JlM7ydqd3Qk9CA0L4NL6mTzU2sdx96a+oOfPu8Mkl/PK51vSyoi8/rQ8NknZtk44vq15lmhAj9CIAGwgeWKw=="
    },
    "node_modules/csvtojson": {
      "version": "2.0.10",
      "resolved": "https://registry.npmjs.org/csvtojson/-/csvtojson-2.0.10.tgz",
      "integrity": "sha512-lUWFxGKyhraKCW8Qghz6Z0f2l/PqB1W3AO0HKJzGIQ5JRSlR651ekJDiGJbBT4sRNNv5ddnSGVEnsxP9XRCVpQ==",
      "dependencies": {
        "bluebird": "^3.5.1",
        "lodash": "^4.17.3",
        "strip-bom": "^2.0.0"
      },
      "bin": {
        "csvtojson": "bin/csvtojson"
      },
      "engines": {
        "node": ">=4.0.0"
      }
    },
    "node_modules/dashdash": {
      "version": "1.14.1",
      "resolved": "https://registry.npmjs.org/dashdash/-/dashdash-1.14.1.tgz",
      "integrity": "sha512-jRFi8UDGo6j+odZiEpjazZaWqEal3w/basFjQHQEwVtZJGDpxbH1MeYluwCS8Xq5wmLJooDlMgvVarmWfGM44g==",
      "dependencies": {
        "assert-plus": "^1.0.0"
      },
      "engines": {
        "node": ">=0.10"
      }
    },
    "node_modules/debug": {
      "version": "2.6.9",
      "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
      "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
      "dependencies": {
        "ms": "2.0.0"
      }
    },
    "node_modules/define-properties": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/define-properties/-/define-properties-1.1.4.tgz",
      "integrity": "sha512-uckOqKcfaVvtBdsVkdPv3XjveQJsNQqmhXgRi8uhvWWuPYZCNlzT8qAyblUgNoXdHdjMTzAqeGjAoli8f+bzPA==",
      "dependencies": {
        "has-property-descriptors": "^1.0.0",
        "object-keys": "^1.1.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/delayed-stream": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/delayed-stream/-/delayed-stream-1.0.0.tgz",
      "integrity": "sha512-ZySD7Nf91aLB0RxL4KGrKHBXl7Eds1DAmEdcoVawXnLD7SDhpNgtuII2aAkg7a7QS41jxPSZ17p4VdGnMHk3MQ==",
      "engines": {
        "node": ">=0.4.0"
      }
    },
    "node_modules/denque": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/denque/-/denque-2.1.0.tgz",
      "integrity": "sha512-HVQE3AAb/pxF8fQAoiqpvg9i3evqug3hoiwakOyZAwJm+6vZehbkYXZ0l4JxS+I3QxM97v5aaRNhj8v5oBhekw==",
      "engines": {
        "node": ">=0.10"
      }
    },
    "node_modules/depd": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/depd/-/depd-2.0.0.tgz",
      "integrity": "sha512-g7nH6P6dyDioJogAAGprGpCtVImJhpPk/roCzdb3fIh61/s/nPsfR6onyMwkCAR/OlC3yBC0lESvUoQEAssIrw==",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/destroy": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/destroy/-/destroy-1.2.0.tgz",
      "integrity": "sha512-2sJGJTaXIIaR1w4iJSNoN0hnMY7Gpc/n8D4qSCJw8QqFWXf7cuAgnEHxBpweaVcPevC2l3KpjYCx3NypQQgaJg==",
      "engines": {
        "node": ">= 0.8",
        "npm": "1.2.8000 || >= 1.4.16"
      }
    },
    "node_modules/devtools-protocol": {
      "version": "0.0.1068969",
      "resolved": "https://registry.npmjs.org/devtools-protocol/-/devtools-protocol-0.0.1068969.tgz",
      "integrity": "sha512-ATFTrPbY1dKYhPPvpjtwWKSK2mIwGmRwX54UASn9THEuIZCe2n9k3vVuMmt6jWeL+e5QaaguEv/pMyR+JQB7VQ=="
    },
    "node_modules/dotenv": {
      "version": "16.0.3",
      "resolved": "https://registry.npmjs.org/dotenv/-/dotenv-16.0.3.tgz",
      "integrity": "sha512-7GO6HghkA5fYG9TYnNxi14/7K9f5occMlp3zXAuSxn7CKCxt9xbNWG7yF8hTCSUchlfWSe3uLmlPfigevRItzQ==",
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/ecc-jsbn": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/ecc-jsbn/-/ecc-jsbn-0.1.2.tgz",
      "integrity": "sha512-eh9O+hwRHNbG4BLTjEl3nw044CkGm5X6LoaCf7LPp7UU8Qrt47JYNi6nPX8xjW97TKGKm1ouctg0QSpZe9qrnw==",
      "dependencies": {
        "jsbn": "~0.1.0",
        "safer-buffer": "^2.1.0"
      }
    },
    "node_modules/ee-first": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/ee-first/-/ee-first-1.1.1.tgz",
      "integrity": "sha512-WMwm9LhRUo+WUaRN+vRuETqG89IgZphVSNkdFgeb6sS/E4OrDIN7t48CAewSHXc6C8lefD8KKfr5vY61brQlow=="
    },
    "node_modules/encodeurl": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/encodeurl/-/encodeurl-1.0.2.tgz",
      "integrity": "sha512-TPJXq8JqFaVYm2CWmPvnP2Iyo4ZSM7/QKcSmuMLDObfpH5fi7RUGmd/rTDf+rut/saiDiQEeVTNgAmJEdAOx0w==",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/end-of-stream": {
      "version": "1.4.4",
      "resolved": "https://registry.npmjs.org/end-of-stream/-/end-of-stream-1.4.4.tgz",
      "integrity": "sha512-+uw1inIHVPQoaVuHzRyXd21icM+cnt4CzD5rW+NC1wjOUSTOs+Te7FOv7AhN7vS9x/oIyhLP5PR1H+phQAHu5Q==",
      "dependencies": {
        "once": "^1.4.0"
      }
    },
    "node_modules/error-ex": {
      "version": "1.3.2",
      "resolved": "https://registry.npmjs.org/error-ex/-/error-ex-1.3.2.tgz",
      "integrity": "sha512-7dFHNmqeFSEt2ZBsCriorKnn3Z2pj+fd9kmI6QoWw4//DL+icEBfc0U7qJCisqrTsKTjw4fNFy2pW9OqStD84g==",
      "dependencies": {
        "is-arrayish": "^0.2.1"
      }
    },
    "node_modules/es-abstract": {
      "version": "1.20.4",
      "resolved": "https://registry.npmjs.org/es-abstract/-/es-abstract-1.20.4.tgz",
      "integrity": "sha512-0UtvRN79eMe2L+UNEF1BwRe364sj/DXhQ/k5FmivgoSdpM90b8Jc0mDzKMGo7QS0BVbOP/bTwBKNnDc9rNzaPA==",
      "dependencies": {
        "call-bind": "^1.0.2",
        "es-to-primitive": "^1.2.1",
        "function-bind": "^1.1.1",
        "function.prototype.name": "^1.1.5",
        "get-intrinsic": "^1.1.3",
        "get-symbol-description": "^1.0.0",
        "has": "^1.0.3",
        "has-property-descriptors": "^1.0.0",
        "has-symbols": "^1.0.3",
        "internal-slot": "^1.0.3",
        "is-callable": "^1.2.7",
        "is-negative-zero": "^2.0.2",
        "is-regex": "^1.1.4",
        "is-shared-array-buffer": "^1.0.2",
        "is-string": "^1.0.7",
        "is-weakref": "^1.0.2",
        "object-inspect": "^1.12.2",
        "object-keys": "^1.1.1",
        "object.assign": "^4.1.4",
        "regexp.prototype.flags": "^1.4.3",
        "safe-regex-test": "^1.0.0",
        "string.prototype.trimend": "^1.0.5",
        "string.prototype.trimstart": "^1.0.5",
        "unbox-primitive": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/es-shim-unscopables": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/es-shim-unscopables/-/es-shim-unscopables-1.0.0.tgz",
      "integrity": "sha512-Jm6GPcCdC30eMLbZ2x8z2WuRwAws3zTBBKuusffYVUrNj/GVSUAZ+xKMaUpfNDR5IbyNA5LJbaecoUVbmUcB1w==",
      "dependencies": {
        "has": "^1.0.3"
      }
    },
    "node_modules/es-to-primitive": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/es-to-primitive/-/es-to-primitive-1.2.1.tgz",
      "integrity": "sha512-QCOllgZJtaUo9miYBcLChTUaHNjJF3PYs1VidD7AwiEj1kYxKeQTctLAezAOH5ZKRH0g2IgPn6KwB4IT8iRpvA==",
      "dependencies": {
        "is-callable": "^1.1.4",
        "is-date-object": "^1.0.1",
        "is-symbol": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/escape-html": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/escape-html/-/escape-html-1.0.3.tgz",
      "integrity": "sha512-NiSupZ4OeuGwr68lGIeym/ksIZMJodUGOSCZ/FSnTxcrekbvqrgdUxlJOMpijaKZVjAJrWrGs/6Jy8OMuyj9ow=="
    },
    "node_modules/escape-string-regexp": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz",
      "integrity": "sha512-vbRorB5FUQWvla16U8R/qgaFIya2qGzwDrNmCZuYKrbdSUMG6I1ZCGQRefkRVhuOkIGVne7BQ35DSfo1qvJqFg==",
      "engines": {
        "node": ">=0.8.0"
      }
    },
    "node_modules/etag": {
      "version": "1.8.1",
      "resolved": "https://registry.npmjs.org/etag/-/etag-1.8.1.tgz",
      "integrity": "sha512-aIL5Fx7mawVa300al2BnEE4iNvo1qETxLrPI/o05L7z6go7fCw1J6EQmbK4FmJ2AS7kgVF/KEZWufBfdClMcPg==",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/eventemitter3": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/eventemitter3/-/eventemitter3-3.1.2.tgz",
      "integrity": "sha512-tvtQIeLVHjDkJYnzf2dgVMxfuSGJeM/7UCG17TT4EumTfNtF+0nebF/4zWOIkCreAbtNqhGEboB6BWrwqNaw4Q=="
    },
    "node_modules/express": {
      "version": "4.18.2",
      "resolved": "https://registry.npmjs.org/express/-/express-4.18.2.tgz",
      "integrity": "sha512-5/PsL6iGPdfQ/lKM1UuielYgv3BUoJfz1aUwU9vHZ+J7gyvwdQXFEBIEIaxeGf0GIcreATNyBExtalisDbuMqQ==",
      "dependencies": {
        "accepts": "~1.3.8",
        "array-flatten": "1.1.1",
        "body-parser": "1.20.1",
        "content-disposition": "0.5.4",
        "content-type": "~1.0.4",
        "cookie": "0.5.0",
        "cookie-signature": "1.0.6",
        "debug": "2.6.9",
        "depd": "2.0.0",
        "encodeurl": "~1.0.2",
        "escape-html": "~1.0.3",
        "etag": "~1.8.1",
        "finalhandler": "1.2.0",
        "fresh": "0.5.2",
        "http-errors": "2.0.0",
        "merge-descriptors": "1.0.1",
        "methods": "~1.1.2",
        "on-finished": "2.4.1",
        "parseurl": "~1.3.3",
        "path-to-regexp": "0.1.7",
        "proxy-addr": "~2.0.7",
        "qs": "6.11.0",
        "range-parser": "~1.2.1",
        "safe-buffer": "5.2.1",
        "send": "0.18.0",
        "serve-static": "1.15.0",
        "setprototypeof": "1.2.0",
        "statuses": "2.0.1",
        "type-is": "~1.6.18",
        "utils-merge": "1.0.1",
        "vary": "~1.1.2"
      },
      "engines": {
        "node": ">= 0.10.0"
      }
    },
    "node_modules/extend": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/extend/-/extend-3.0.2.tgz",
      "integrity": "sha512-fjquC59cD7CyW6urNXK0FBufkZcoiGG80wTuPujX590cB5Ttln20E2UB4S/WARVqhXffZl2LNgS+gQdPIIim/g=="
    },
    "node_modules/extract-zip": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/extract-zip/-/extract-zip-2.0.1.tgz",
      "integrity": "sha512-GDhU9ntwuKyGXdZBUgTIe+vXnWj0fppUEtMDL0+idd5Sta8TGpHssn/eusA9mrPr9qNDym6SxAYZjNvCn/9RBg==",
      "dependencies": {
        "debug": "^4.1.1",
        "get-stream": "^5.1.0",
        "yauzl": "^2.10.0"
      },
      "bin": {
        "extract-zip": "cli.js"
      },
      "engines": {
        "node": ">= 10.17.0"
      },
      "optionalDependencies": {
        "@types/yauzl": "^2.9.1"
      }
    },
    "node_modules/extract-zip/node_modules/debug": {
      "version": "4.3.4",
      "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.4.tgz",
      "integrity": "sha512-PRWFHuSU3eDtQJPvnNY7Jcket1j0t5OuOsFzPPzsekD52Zl8qUfFIPEiswXqIvHWGVHOgX+7G/vCNNhehwxfkQ==",
      "dependencies": {
        "ms": "2.1.2"
      },
      "engines": {
        "node": ">=6.0"
      },
      "peerDependenciesMeta": {
        "supports-color": {
          "optional": true
        }
      }
    },
    "node_modules/extract-zip/node_modules/ms": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
      "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w=="
    },
    "node_modules/extsprintf": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/extsprintf/-/extsprintf-1.3.0.tgz",
      "integrity": "sha512-11Ndz7Nv+mvAC1j0ktTa7fAb0vLyGGX+rMHNBYQviQDGU0Hw7lhctJANqbPhu9nV9/izT/IntTgZ7Im/9LJs9g==",
      "engines": [
        "node >=0.6.0"
      ]
    },
    "node_modules/fast-deep-equal": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.3.tgz",
      "integrity": "sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q=="
    },
    "node_modules/fast-json-stable-stringify": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz",
      "integrity": "sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw=="
    },
    "node_modules/fast-xml-parser": {
      "version": "4.0.12",
      "resolved": "https://registry.npmjs.org/fast-xml-parser/-/fast-xml-parser-4.0.12.tgz",
      "integrity": "sha512-/Nmo3823Rfx7UTJosQNz6hBVbszfv1Unb7A4iNJZhvCGCgtIHv/uODmrYIH8vc05+XKZ4hNIOv6SlBejvJgATw==",
      "dependencies": {
        "strnum": "^1.0.5"
      },
      "bin": {
        "fxparser": "src/cli/cli.js"
      },
      "funding": {
        "type": "paypal",
        "url": "https://paypal.me/naturalintelligence"
      }
    },
    "node_modules/fd-slicer": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/fd-slicer/-/fd-slicer-1.1.0.tgz",
      "integrity": "sha512-cE1qsB/VwyQozZ+q1dGxR8LBYNZeofhEdUNGSMbQD3Gw2lAzX9Zb3uIU6Ebc/Fmyjo9AWWfnn0AUCHqtevs/8g==",
      "dependencies": {
        "pend": "~1.2.0"
      }
    },
    "node_modules/file-type": {
      "version": "3.9.0",
      "resolved": "https://registry.npmjs.org/file-type/-/file-type-3.9.0.tgz",
      "integrity": "sha512-RLoqTXE8/vPmMuTI88DAzhMYC99I8BWv7zYP4A1puo5HIjEJ5EX48ighy4ZyKMG9EDXxBgW6e++cn7d1xuFghA==",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/finalhandler": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/finalhandler/-/finalhandler-1.2.0.tgz",
      "integrity": "sha512-5uXcUVftlQMFnWC9qu/svkWv3GTd2PfUhK/3PLkYNAe7FbqJMt3515HaxE6eRL74GdsriiwujiawdaB1BpEISg==",
      "dependencies": {
        "debug": "2.6.9",
        "encodeurl": "~1.0.2",
        "escape-html": "~1.0.3",
        "on-finished": "2.4.1",
        "parseurl": "~1.3.3",
        "statuses": "2.0.1",
        "unpipe": "~1.0.0"
      },
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/for-each": {
      "version": "0.3.3",
      "resolved": "https://registry.npmjs.org/for-each/-/for-each-0.3.3.tgz",
      "integrity": "sha512-jqYfLp7mo9vIyQf8ykW2v7A+2N4QjeCeI5+Dz9XraiO1ign81wjiH7Fb9vSOWvQfNtmSa4H2RoQTrrXivdUZmw==",
      "dependencies": {
        "is-callable": "^1.1.3"
      }
    },
    "node_modules/forever-agent": {
      "version": "0.6.1",
      "resolved": "https://registry.npmjs.org/forever-agent/-/forever-agent-0.6.1.tgz",
      "integrity": "sha512-j0KLYPhm6zeac4lz3oJ3o65qvgQCcPubiyotZrXqEaG4hNagNYO8qdlUrX5vwqv9ohqeT/Z3j6+yW067yWWdUw==",
      "engines": {
        "node": "*"
      }
    },
    "node_modules/form-data": {
      "version": "2.3.3",
      "resolved": "https://registry.npmjs.org/form-data/-/form-data-2.3.3.tgz",
      "integrity": "sha512-1lLKB2Mu3aGP1Q/2eCOx0fNbRMe7XdwktwOruhfqqd0rIJWwN4Dh+E3hrPSlDCXnSR7UtZ1N38rVXm+6+MEhJQ==",
      "dependencies": {
        "asynckit": "^0.4.0",
        "combined-stream": "^1.0.6",
        "mime-types": "^2.1.12"
      },
      "engines": {
        "node": ">= 0.12"
      }
    },
    "node_modules/forwarded": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/forwarded/-/forwarded-0.2.0.tgz",
      "integrity": "sha512-buRG0fpBtRHSTCOASe6hD258tEubFoRLb4ZNA6NxMVHNw2gOcwHo9wyablzMzOA5z9xA9L1KNjk/Nt6MT9aYow==",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/fresh": {
      "version": "0.5.2",
      "resolved": "https://registry.npmjs.org/fresh/-/fresh-0.5.2.tgz",
      "integrity": "sha512-zJ2mQYM18rEFOudeV4GShTGIQ7RbzA7ozbU9I/XBpm7kqgMywgmylMwXHxZJmkVoYkna9d2pVXVXPdYTP9ej8Q==",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/fs-constants": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/fs-constants/-/fs-constants-1.0.0.tgz",
      "integrity": "sha512-y6OAwoSIf7FyjMIv94u+b5rdheZEjzR63GTyZJm5qh4Bi+2YgwLCcI/fPFZkL5PSixOt6ZNKm+w+Hfp/Bciwow=="
    },
    "node_modules/fs.realpath": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz",
      "integrity": "sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw=="
    },
    "node_modules/function-bind": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.1.tgz",
      "integrity": "sha512-yIovAzMX49sF8Yl58fSCWJ5svSLuaibPxXQJFLmBObTuCr0Mf1KiPopGM9NiFjiYBCbfaa2Fh6breQ6ANVTI0A=="
    },
    "node_modules/function.prototype.name": {
      "version": "1.1.5",
      "resolved": "https://registry.npmjs.org/function.prototype.name/-/function.prototype.name-1.1.5.tgz",
      "integrity": "sha512-uN7m/BzVKQnCUF/iW8jYea67v++2u7m5UgENbHRtdDVclOUP+FMPlCNdmk0h/ysGyo2tavMJEDqJAkJdRa1vMA==",
      "dependencies": {
        "call-bind": "^1.0.2",
        "define-properties": "^1.1.3",
        "es-abstract": "^1.19.0",
        "functions-have-names": "^1.2.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/functions-have-names": {
      "version": "1.2.3",
      "resolved": "https://registry.npmjs.org/functions-have-names/-/functions-have-names-1.2.3.tgz",
      "integrity": "sha512-xckBUXyTIqT97tq2x2AMb+g163b5JFysYk0x4qxNFwbfQkmNZoiRHb6sPzI9/QV33WeuvVYBUIiD4NzNIyqaRQ==",
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/generate-function": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/generate-function/-/generate-function-2.3.1.tgz",
      "integrity": "sha512-eeB5GfMNeevm/GRYq20ShmsaGcmI81kIX2K9XQx5miC8KdHaC6Jm0qQ8ZNeGOi7wYB8OsdxKs+Y2oVuTFuVwKQ==",
      "dependencies": {
        "is-property": "^1.0.2"
      }
    },
    "node_modules/get-intrinsic": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.1.3.tgz",
      "integrity": "sha512-QJVz1Tj7MS099PevUG5jvnt9tSkXN8K14dxQlikJuPt4uD9hHAHjLyLBiLR5zELelBdD9QNRAXZzsJx0WaDL9A==",
      "dependencies": {
        "function-bind": "^1.1.1",
        "has": "^1.0.3",
        "has-symbols": "^1.0.3"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/get-stream": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/get-stream/-/get-stream-5.2.0.tgz",
      "integrity": "sha512-nBF+F1rAZVCu/p7rjzgA+Yb4lfYXrpl7a6VmJrU8wF9I1CKvP/QwPNZHnOlwbTkY6dvtFIzFMSyQXbLoTQPRpA==",
      "dependencies": {
        "pump": "^3.0.0"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/get-stream/node_modules/pump": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/pump/-/pump-3.0.0.tgz",
      "integrity": "sha512-LwZy+p3SFs1Pytd/jYct4wpv49HiYCqd9Rlc5ZVdk0V+8Yzv6jR5Blk3TRmPL1ft69TxP0IMZGJ+WPFU2BFhww==",
      "dependencies": {
        "end-of-stream": "^1.1.0",
        "once": "^1.3.1"
      }
    },
    "node_modules/get-symbol-description": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/get-symbol-description/-/get-symbol-description-1.0.0.tgz",
      "integrity": "sha512-2EmdH1YvIQiZpltCNgkuiUnyukzxM/R6NDJX31Ke3BG1Nq5b0S2PhX59UKi9vZpPDQVdqn+1IcaAwnzTT5vCjw==",
      "dependencies": {
        "call-bind": "^1.0.2",
        "get-intrinsic": "^1.1.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/getpass": {
      "version": "0.1.7",
      "resolved": "https://registry.npmjs.org/getpass/-/getpass-0.1.7.tgz",
      "integrity": "sha512-0fzj9JxOLfJ+XGLhR8ze3unN0KZCgZwiSSDz168VERjK8Wl8kVSdcu2kspd4s4wtAa1y/qrVRiAA0WclVsu0ng==",
      "dependencies": {
        "assert-plus": "^1.0.0"
      }
    },
    "node_modules/glob": {
      "version": "7.2.3",
      "resolved": "https://registry.npmjs.org/glob/-/glob-7.2.3.tgz",
      "integrity": "sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==",
      "dependencies": {
        "fs.realpath": "^1.0.0",
        "inflight": "^1.0.4",
        "inherits": "2",
        "minimatch": "^3.1.1",
        "once": "^1.3.0",
        "path-is-absolute": "^1.0.0"
      },
      "engines": {
        "node": "*"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/gopd": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/gopd/-/gopd-1.0.1.tgz",
      "integrity": "sha512-d65bNlIadxvpb/A2abVdlqKqV563juRnZ1Wtk6s1sIR8uNsXR70xqIzVqxVf1eTqDunwT2MkczEeaezCKTZhwA==",
      "dependencies": {
        "get-intrinsic": "^1.1.3"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/har-schema": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/har-schema/-/har-schema-2.0.0.tgz",
      "integrity": "sha512-Oqluz6zhGX8cyRaTQlFMPw80bSJVG2x/cFb8ZPhUILGgHka9SsokCCOQgpveePerqidZOrT14ipqfJb7ILcW5Q==",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/har-validator": {
      "version": "5.1.5",
      "resolved": "https://registry.npmjs.org/har-validator/-/har-validator-5.1.5.tgz",
      "integrity": "sha512-nmT2T0lljbxdQZfspsno9hgrG3Uir6Ks5afism62poxqBM6sDnMEuPmzTq8XN0OEwqKLLdh1jQI3qyE66Nzb3w==",
      "deprecated": "this library is no longer supported",
      "dependencies": {
        "ajv": "^6.12.3",
        "har-schema": "^2.0.0"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/has": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/has/-/has-1.0.3.tgz",
      "integrity": "sha512-f2dvO0VU6Oej7RkWJGrehjbzMAjFp5/VKPp5tTpWIV4JHHZK1/BxbFRtf/siA2SWTe09caDmVtYYzWEIbBS4zw==",
      "dependencies": {
        "function-bind": "^1.1.1"
      },
      "engines": {
        "node": ">= 0.4.0"
      }
    },
    "node_modules/has-bigints": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/has-bigints/-/has-bigints-1.0.2.tgz",
      "integrity": "sha512-tSvCKtBr9lkF0Ex0aQiP9N+OpV4zi2r/Nee5VkRDbaqv35RLYMzbwQfFSZZH0kR+Rd6302UJZ2p/bJCEoR3VoQ==",
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/has-flag": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz",
      "integrity": "sha512-sKJf1+ceQBr4SMkvQnBDNDtf4TXpVhVGateu0t918bl30FnbE2m4vNLX+VWe/dpjlb+HugGYzW7uQXH98HPEYw==",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/has-property-descriptors": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/has-property-descriptors/-/has-property-descriptors-1.0.0.tgz",
      "integrity": "sha512-62DVLZGoiEBDHQyqG4w9xCuZ7eJEwNmJRWw2VY84Oedb7WFcA27fiEVe8oUQx9hAUJ4ekurquucTGwsyO1XGdQ==",
      "dependencies": {
        "get-intrinsic": "^1.1.1"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/has-symbols": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/has-symbols/-/has-symbols-1.0.3.tgz",
      "integrity": "sha512-l3LCuF6MgDNwTDKkdYGEihYjt5pRPbEg46rtlmnSPlUbgmB8LOIrKJbYYFBSbnPaJexMKtiPO8hmeRjRz2Td+A==",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/has-tostringtag": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/has-tostringtag/-/has-tostringtag-1.0.0.tgz",
      "integrity": "sha512-kFjcSNhnlGV1kyoGk7OXKSawH5JOb/LzUc5w9B02hOTO0dfFRjbHQKvg1d6cf3HbeUmtU9VbbV3qzZ2Teh97WQ==",
      "dependencies": {
        "has-symbols": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/http-errors": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/http-errors/-/http-errors-2.0.0.tgz",
      "integrity": "sha512-FtwrG/euBzaEjYeRqOgly7G0qviiXoJWnvEH2Z1plBdXgbyjv34pHTSb9zoeHMyDy33+DWy5Wt9Wo+TURtOYSQ==",
      "dependencies": {
        "depd": "2.0.0",
        "inherits": "2.0.4",
        "setprototypeof": "1.2.0",
        "statuses": "2.0.1",
        "toidentifier": "1.0.1"
      },
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/http-signature": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/http-signature/-/http-signature-1.2.0.tgz",
      "integrity": "sha512-CAbnr6Rz4CYQkLYUtSNXxQPUH2gK8f3iWexVlsnMeD+GjlsQ0Xsy1cOX+mN3dtxYomRy21CiOzU8Uhw6OwncEQ==",
      "dependencies": {
        "assert-plus": "^1.0.0",
        "jsprim": "^1.2.2",
        "sshpk": "^1.7.0"
      },
      "engines": {
        "node": ">=0.8",
        "npm": ">=1.3.7"
      }
    },
    "node_modules/https-proxy-agent": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/https-proxy-agent/-/https-proxy-agent-5.0.1.tgz",
      "integrity": "sha512-dFcAjpTQFgoLMzC2VwU+C/CbS7uRL0lWmxDITmqm7C+7F0Odmj6s9l6alZc6AELXhrnggM2CeWSXHGOdX2YtwA==",
      "dependencies": {
        "agent-base": "6",
        "debug": "4"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/https-proxy-agent/node_modules/debug": {
      "version": "4.3.4",
      "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.4.tgz",
      "integrity": "sha512-PRWFHuSU3eDtQJPvnNY7Jcket1j0t5OuOsFzPPzsekD52Zl8qUfFIPEiswXqIvHWGVHOgX+7G/vCNNhehwxfkQ==",
      "dependencies": {
        "ms": "2.1.2"
      },
      "engines": {
        "node": ">=6.0"
      },
      "peerDependenciesMeta": {
        "supports-color": {
          "optional": true
        }
      }
    },
    "node_modules/https-proxy-agent/node_modules/ms": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
      "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w=="
    },
    "node_modules/iconv-lite": {
      "version": "0.4.24",
      "resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.24.tgz",
      "integrity": "sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==",
      "dependencies": {
        "safer-buffer": ">= 2.1.2 < 3"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/ieee754": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/ieee754/-/ieee754-1.2.1.tgz",
      "integrity": "sha512-dcyqhDvX1C46lXZcVqCpK+FtMRQVdIMN6/Df5js2zouUsqG7I6sFxitIC+7KYK29KdXOLHdu9zL4sFnoVQnqaA==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ]
    },
    "node_modules/import-fresh": {
      "version": "3.3.0",
      "resolved": "https://registry.npmjs.org/import-fresh/-/import-fresh-3.3.0.tgz",
      "integrity": "sha512-veYYhQa+D1QBKznvhUHxb8faxlrwUnxseDAbAp457E0wLNio2bOSKnjYDhMj+YiAq61xrMGhQk9iXVk5FzgQMw==",
      "dependencies": {
        "parent-module": "^1.0.0",
        "resolve-from": "^4.0.0"
      },
      "engines": {
        "node": ">=6"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/inflight": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz",
      "integrity": "sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==",
      "dependencies": {
        "once": "^1.3.0",
        "wrappy": "1"
      }
    },
    "node_modules/inherits": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz",
      "integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ=="
    },
    "node_modules/internal-slot": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/internal-slot/-/internal-slot-1.0.3.tgz",
      "integrity": "sha512-O0DB1JC/sPyZl7cIo78n5dR7eUSwwpYPiXRhTzNxZVAMUuB8vlnRFyLxdrVToks6XPLVnFfbzaVd5WLjhgg+vA==",
      "dependencies": {
        "get-intrinsic": "^1.1.0",
        "has": "^1.0.3",
        "side-channel": "^1.0.4"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/ipaddr.js": {
      "version": "1.9.1",
      "resolved": "https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-1.9.1.tgz",
      "integrity": "sha512-0KI/607xoxSToH7GjN1FfSbLoU0+btTicjsQSWQlh/hZykN8KpmMf7uYwPW3R+akZ6R/w18ZlXSHBYXiYUPO3g==",
      "engines": {
        "node": ">= 0.10"
      }
    },
    "node_modules/is-arguments": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/is-arguments/-/is-arguments-1.1.1.tgz",
      "integrity": "sha512-8Q7EARjzEnKpt/PCD7e1cgUS0a6X8u5tdSiMqXhojOdoV9TsMsiO+9VLC5vAmO8N7/GmXn7yjR8qnA6bVAEzfA==",
      "dependencies": {
        "call-bind": "^1.0.2",
        "has-tostringtag": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-arrayish": {
      "version": "0.2.1",
      "resolved": "https://registry.npmjs.org/is-arrayish/-/is-arrayish-0.2.1.tgz",
      "integrity": "sha512-zz06S8t0ozoDXMG+ube26zeCTNXcKIPJZJi8hBrF4idCLms4CG9QtK7qBl1boi5ODzFpjswb5JPmHCbMpjaYzg=="
    },
    "node_modules/is-bigint": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/is-bigint/-/is-bigint-1.0.4.tgz",
      "integrity": "sha512-zB9CruMamjym81i2JZ3UMn54PKGsQzsJeo6xvN3HJJ4CAsQNB6iRutp2To77OfCNuoxspsIhzaPoO1zyCEhFOg==",
      "dependencies": {
        "has-bigints": "^1.0.1"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-boolean-object": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/is-boolean-object/-/is-boolean-object-1.1.2.tgz",
      "integrity": "sha512-gDYaKHJmnj4aWxyj6YHyXVpdQawtVLHU5cb+eztPGczf6cjuTdwve5ZIEfgXqH4e57An1D1AKf8CZ3kYrQRqYA==",
      "dependencies": {
        "call-bind": "^1.0.2",
        "has-tostringtag": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-buffer": {
      "version": "1.1.6",
      "resolved": "https://registry.npmjs.org/is-buffer/-/is-buffer-1.1.6.tgz",
      "integrity": "sha512-NcdALwpXkTm5Zvvbk7owOUSvVvBKDgKP5/ewfXEznmQFfs4ZRmanOeKBTjRVjka3QFoN6XJ+9F3USqfHqTaU5w=="
    },
    "node_modules/is-callable": {
      "version": "1.2.7",
      "resolved": "https://registry.npmjs.org/is-callable/-/is-callable-1.2.7.tgz",
      "integrity": "sha512-1BC0BVFhS/p0qtw6enp8e+8OD0UrK0oFLztSjNzhcKA3WDuJxxAPXzPuPtKkjEY9UUoEWlX/8fgKeu2S8i9JTA==",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-date-object": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/is-date-object/-/is-date-object-1.0.5.tgz",
      "integrity": "sha512-9YQaSxsAiSwcvS33MBk3wTCVnWK+HhF8VZR2jRxehM16QcVOdHqPn4VPHmRK4lSr38n9JriurInLcP90xsYNfQ==",
      "dependencies": {
        "has-tostringtag": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-generator-function": {
      "version": "1.0.10",
      "resolved": "https://registry.npmjs.org/is-generator-function/-/is-generator-function-1.0.10.tgz",
      "integrity": "sha512-jsEjy9l3yiXEQ+PsXdmBwEPcOxaXWLspKdplFUVI9vq1iZgIekeC0L167qeu86czQaxed3q/Uzuw0swL0irL8A==",
      "dependencies": {
        "has-tostringtag": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-negative-zero": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/is-negative-zero/-/is-negative-zero-2.0.2.tgz",
      "integrity": "sha512-dqJvarLawXsFbNDeJW7zAz8ItJ9cd28YufuuFzh0G8pNHjJMnY08Dv7sYX2uF5UpQOwieAeOExEYAWWfu7ZZUA==",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-number-object": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/is-number-object/-/is-number-object-1.0.7.tgz",
      "integrity": "sha512-k1U0IRzLMo7ZlYIfzRu23Oh6MiIFasgpb9X76eqfFZAqwH44UI4KTBvBYIZ1dSL9ZzChTB9ShHfLkR4pdW5krQ==",
      "dependencies": {
        "has-tostringtag": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-property": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/is-property/-/is-property-1.0.2.tgz",
      "integrity": "sha512-Ks/IoX00TtClbGQr4TWXemAnktAQvYB7HzcCxDGqEZU6oCmb2INHuOoKxbtR+HFkmYWBKv/dOZtGRiAjDhj92g=="
    },
    "node_modules/is-regex": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/is-regex/-/is-regex-1.1.4.tgz",
      "integrity": "sha512-kvRdxDsxZjhzUX07ZnLydzS1TU/TJlTUHHY4YLL87e37oUA49DfkLqgy+VjFocowy29cKvcSiu+kIv728jTTVg==",
      "dependencies": {
        "call-bind": "^1.0.2",
        "has-tostringtag": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-shared-array-buffer": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/is-shared-array-buffer/-/is-shared-array-buffer-1.0.2.tgz",
      "integrity": "sha512-sqN2UDu1/0y6uvXyStCOzyhAjCSlHceFoMKJW8W9EU9cvic/QdsZ0kEU93HEy3IUEFZIiH/3w+AH/UQbPHNdhA==",
      "dependencies": {
        "call-bind": "^1.0.2"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-string": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/is-string/-/is-string-1.0.7.tgz",
      "integrity": "sha512-tE2UXzivje6ofPW7l23cjDOMa09gb7xlAqG6jG5ej6uPV32TlWP3NKPigtaGeHNu9fohccRYvIiZMfOOnOYUtg==",
      "dependencies": {
        "has-tostringtag": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-symbol": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/is-symbol/-/is-symbol-1.0.4.tgz",
      "integrity": "sha512-C/CPBqKWnvdcxqIARxyOh4v1UUEOCHpgDa0WYgpKDFMszcrPcffg5uhwSgPCLD2WWxmq6isisz87tzT01tuGhg==",
      "dependencies": {
        "has-symbols": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-typed-array": {
      "version": "1.1.10",
      "resolved": "https://registry.npmjs.org/is-typed-array/-/is-typed-array-1.1.10.tgz",
      "integrity": "sha512-PJqgEHiWZvMpaFZ3uTc8kHPM4+4ADTlDniuQL7cU/UDA0Ql7F70yGfHph3cLNe+c9toaigv+DFzTJKhc2CtO6A==",
      "dependencies": {
        "available-typed-arrays": "^1.0.5",
        "call-bind": "^1.0.2",
        "for-each": "^0.3.3",
        "gopd": "^1.0.1",
        "has-tostringtag": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-typedarray": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/is-typedarray/-/is-typedarray-1.0.0.tgz",
      "integrity": "sha512-cyA56iCMHAh5CdzjJIa4aohJyeO1YbwLi3Jc35MmRU6poroFjIGZzUzupGiRPOjgHg9TLu43xbpwXk523fMxKA=="
    },
    "node_modules/is-utf8": {
      "version": "0.2.1",
      "resolved": "https://registry.npmjs.org/is-utf8/-/is-utf8-0.2.1.tgz",
      "integrity": "sha512-rMYPYvCzsXywIsldgLaSoPlw5PfoB/ssr7hY4pLfcodrA5M/eArza1a9VmTiNIBNMjOGr1Ow9mTyU2o69U6U9Q=="
    },
    "node_modules/is-weakref": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/is-weakref/-/is-weakref-1.0.2.tgz",
      "integrity": "sha512-qctsuLZmIQ0+vSSMfoVvyFe2+GSEvnmZ2ezTup1SBse9+twCCeial6EEi3Nc2KFcf6+qz2FBPnjXsk8xhKSaPQ==",
      "dependencies": {
        "call-bind": "^1.0.2"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/isarray": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
      "integrity": "sha512-VLghIWNM6ELQzo7zwmcg0NmTVyWKYjvIeM83yjp0wRDTmUnrM678fQbcKBo6n2CJEF0szoG//ytg+TKla89ALQ=="
    },
    "node_modules/isstream": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/isstream/-/isstream-0.1.2.tgz",
      "integrity": "sha512-Yljz7ffyPbrLpLngrMtZ7NduUgVvi6wG9RJ9IUcyCd59YQ911PBJphODUcbOVbqYfxe1wuYf/LJ8PauMRwsM/g=="
    },
    "node_modules/js-tokens": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz",
      "integrity": "sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ=="
    },
    "node_modules/js-yaml": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/js-yaml/-/js-yaml-4.1.0.tgz",
      "integrity": "sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==",
      "dependencies": {
        "argparse": "^2.0.1"
      },
      "bin": {
        "js-yaml": "bin/js-yaml.js"
      }
    },
    "node_modules/jsbn": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/jsbn/-/jsbn-0.1.1.tgz",
      "integrity": "sha512-UVU9dibq2JcFWxQPA6KCqj5O42VOmAY3zQUfEKxU0KpTGXwNoCjkX1e13eHNvw/xPynt6pU0rZ1htjWTNTSXsg=="
    },
    "node_modules/json-parse-even-better-errors": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/json-parse-even-better-errors/-/json-parse-even-better-errors-2.3.1.tgz",
      "integrity": "sha512-xyFwyhro/JEof6Ghe2iz2NcXoj2sloNsWr/XsERDK/oiPCfaNhl5ONfp+jQdAZRQQ0IJWNzH9zIZF7li91kh2w=="
    },
    "node_modules/json-schema": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/json-schema/-/json-schema-0.4.0.tgz",
      "integrity": "sha512-es94M3nTIfsEPisRafak+HDLfHXnKBhV3vU5eqPcS3flIWqcxJWgXHXiey3YrpaNsanY5ei1VoYEbOzijuq9BA=="
    },
    "node_modules/json-schema-traverse": {
      "version": "0.4.1",
      "resolved": "https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz",
      "integrity": "sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg=="
    },
    "node_modules/json-stringify-safe": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/json-stringify-safe/-/json-stringify-safe-5.0.1.tgz",
      "integrity": "sha512-ZClg6AaYvamvYEE82d3Iyd3vSSIjQ+odgjaTzRuO3s7toCdFKczob2i0zCh7JE8kWn17yvAWhUVxvqGwUalsRA=="
    },
    "node_modules/jsprim": {
      "version": "1.4.2",
      "resolved": "https://registry.npmjs.org/jsprim/-/jsprim-1.4.2.tgz",
      "integrity": "sha512-P2bSOMAc/ciLz6DzgjVlGJP9+BrJWu5UDGK70C2iweC5QBIeFf0ZXRvGjEj2uYgrY2MkAAhsSWHDWlFtEroZWw==",
      "dependencies": {
        "assert-plus": "1.0.0",
        "extsprintf": "1.3.0",
        "json-schema": "0.4.0",
        "verror": "1.10.0"
      },
      "engines": {
        "node": ">=0.6.0"
      }
    },
    "node_modules/lines-and-columns": {
      "version": "1.2.4",
      "resolved": "https://registry.npmjs.org/lines-and-columns/-/lines-and-columns-1.2.4.tgz",
      "integrity": "sha512-7ylylesZQ/PV29jhEDl3Ufjo6ZX7gCqJr5F7PKrqc93v7fzSymt1BpwEU8nAUXs8qzzvqhbjhK5QZg6Mt/HkBg=="
    },
    "node_modules/lodash": {
      "version": "4.17.21",
      "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.21.tgz",
      "integrity": "sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg=="
    },
    "node_modules/long": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/long/-/long-4.0.0.tgz",
      "integrity": "sha512-XsP+KhQif4bjX1kbuSiySJFNAehNxgLb6hPRGJ9QsUr8ajHkuXGdrHmFUTUUXhDwVX2R5bY4JNZEwbUiMhV+MA=="
    },
    "node_modules/lru-cache": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-6.0.0.tgz",
      "integrity": "sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA==",
      "dependencies": {
        "yallist": "^4.0.0"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/luxon": {
      "version": "1.28.0",
      "resolved": "https://registry.npmjs.org/luxon/-/luxon-1.28.0.tgz",
      "integrity": "sha512-TfTiyvZhwBYM/7QdAVDh+7dBTBA29v4ik0Ce9zda3Mnf8on1S5KJI8P2jKFZ8+5C0jhmr0KwJEO/Wdpm0VeWJQ==",
      "engines": {
        "node": "*"
      }
    },
    "node_modules/md5": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/md5/-/md5-2.3.0.tgz",
      "integrity": "sha512-T1GITYmFaKuO91vxyoQMFETst+O71VUPEU3ze5GNzDm0OWdP8v1ziTaAEPUr/3kLsY3Sftgz242A1SetQiDL7g==",
      "dependencies": {
        "charenc": "0.0.2",
        "crypt": "0.0.2",
        "is-buffer": "~1.1.6"
      }
    },
    "node_modules/media-typer": {
      "version": "0.3.0",
      "resolved": "https://registry.npmjs.org/media-typer/-/media-typer-0.3.0.tgz",
      "integrity": "sha512-dq+qelQ9akHpcOl/gUVRTxVIOkAJ1wR3QAvb4RsVjS8oVoFjDGTc679wJYmUmknUF5HwMLOgb5O+a3KxfWapPQ==",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/merge-descriptors": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/merge-descriptors/-/merge-descriptors-1.0.1.tgz",
      "integrity": "sha512-cCi6g3/Zr1iqQi6ySbseM1Xvooa98N0w31jzUYrXPX2xqObmFGHJ0tQ5u74H3mVh7wLouTseZyYIq39g8cNp1w=="
    },
    "node_modules/methods": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/methods/-/methods-1.1.2.tgz",
      "integrity": "sha512-iclAHeNqNm68zFtnZ0e+1L2yUIdvzNoauKU4WBA3VvH/vPFieF7qfRlwUZU+DA9P9bPXIS90ulxoUoCH23sV2w==",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/mime": {
      "version": "1.6.0",
      "resolved": "https://registry.npmjs.org/mime/-/mime-1.6.0.tgz",
      "integrity": "sha512-x0Vn8spI+wuJ1O6S7gnbaQg8Pxh4NNHb7KSINmEWKiPE4RKOplvijn+NkmYmmRgP68mc70j2EbeTFRsrswaQeg==",
      "bin": {
        "mime": "cli.js"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/mime-db": {
      "version": "1.52.0",
      "resolved": "https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz",
      "integrity": "sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/mime-types": {
      "version": "2.1.35",
      "resolved": "https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz",
      "integrity": "sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==",
      "dependencies": {
        "mime-db": "1.52.0"
      },
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/minimatch": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
      "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
      "dependencies": {
        "brace-expansion": "^1.1.7"
      },
      "engines": {
        "node": "*"
      }
    },
    "node_modules/mkdirp-classic": {
      "version": "0.5.3",
      "resolved": "https://registry.npmjs.org/mkdirp-classic/-/mkdirp-classic-0.5.3.tgz",
      "integrity": "sha512-gKLcREMhtuZRwRAfqP3RFW+TK4JqApVBtOIftVgjuABpAtpxhPGaDcfvbhNvD0B8iD1oUr/txX35NjcaY6Ns/A=="
    },
    "node_modules/ms": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
      "integrity": "sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A=="
    },
    "node_modules/mysql2": {
      "version": "2.3.3",
      "resolved": "https://registry.npmjs.org/mysql2/-/mysql2-2.3.3.tgz",
      "integrity": "sha512-wxJUev6LgMSgACDkb/InIFxDprRa6T95+VEoR+xPvtngtccNH2dGjEB/fVZ8yg1gWv1510c9CvXuJHi5zUm0ZA==",
      "dependencies": {
        "denque": "^2.0.1",
        "generate-function": "^2.3.1",
        "iconv-lite": "^0.6.3",
        "long": "^4.0.0",
        "lru-cache": "^6.0.0",
        "named-placeholders": "^1.1.2",
        "seq-queue": "^0.0.5",
        "sqlstring": "^2.3.2"
      },
      "engines": {
        "node": ">= 8.0"
      }
    },
    "node_modules/mysql2/node_modules/iconv-lite": {
      "version": "0.6.3",
      "resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.6.3.tgz",
      "integrity": "sha512-4fCk79wshMdzMp2rH06qWrJE4iolqLhCUH+OiuIgU++RB0+94NlDL81atO7GX55uUKueo0txHNtvEyI6D7WdMw==",
      "dependencies": {
        "safer-buffer": ">= 2.1.2 < 3.0.0"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/named-placeholders": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/named-placeholders/-/named-placeholders-1.1.2.tgz",
      "integrity": "sha512-wiFWqxoLL3PGVReSZpjLVxyJ1bRqe+KKJVbr4hGs1KWfTZTQyezHFBbuKj9hsizHyGV2ne7EMjHdxEGAybD5SA==",
      "dependencies": {
        "lru-cache": "^4.1.3"
      },
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/named-placeholders/node_modules/lru-cache": {
      "version": "4.1.5",
      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-4.1.5.tgz",
      "integrity": "sha512-sWZlbEP2OsHNkXrMl5GYk/jKk70MBng6UU4YI/qGDYbgf6YbP4EvmqISbXCoJiRKs+1bSpFHVgQxvJ17F2li5g==",
      "dependencies": {
        "pseudomap": "^1.0.2",
        "yallist": "^2.1.2"
      }
    },
    "node_modules/named-placeholders/node_modules/yallist": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/yallist/-/yallist-2.1.2.tgz",
      "integrity": "sha512-ncTzHV7NvsQZkYe1DW7cbDLm0YpzHmZF5r/iyP3ZnQtMiJ+pjzisCiMNI+Sj+xQF5pXhSHxSB3uDbsBTzY/c2A=="
    },
    "node_modules/negotiator": {
      "version": "0.6.3",
      "resolved": "https://registry.npmjs.org/negotiator/-/negotiator-0.6.3.tgz",
      "integrity": "sha512-+EUsqGPLsM+j/zdChZjsnX51g4XrHFOIXwfnCVPGlQk/k5giakcKsuxCObBRu6DSm9opw/O6slWbJdghQM4bBg==",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/node-fetch": {
      "version": "2.6.7",
      "resolved": "https://registry.npmjs.org/node-fetch/-/node-fetch-2.6.7.tgz",
      "integrity": "sha512-ZjMPFEfVx5j+y2yF35Kzx5sF7kDzxuDj6ziH4FFbOp87zKDZNx8yExJIb05OGF4Nlt9IHFIMBkRl41VdvcNdbQ==",
      "dependencies": {
        "whatwg-url": "^5.0.0"
      },
      "engines": {
        "node": "4.x || >=6.0.0"
      },
      "peerDependencies": {
        "encoding": "^0.1.0"
      },
      "peerDependenciesMeta": {
        "encoding": {
          "optional": true
        }
      }
    },
    "node_modules/node-telegram-bot-api": {
      "version": "0.60.0",
      "resolved": "https://registry.npmjs.org/node-telegram-bot-api/-/node-telegram-bot-api-0.60.0.tgz",
      "integrity": "sha512-SBI2PjfCAfMVuieQb95GBvaWiprRdk5SKfzX6B6G2ciG7J4SjOVwaMvaYhm9dJDTqvRSzl5pbioGbqRO/vx1Zg==",
      "dependencies": {
        "array.prototype.findindex": "^2.0.2",
        "bl": "^1.2.3",
        "debug": "^3.2.7",
        "eventemitter3": "^3.0.0",
        "file-type": "^3.9.0",
        "mime": "^1.6.0",
        "pump": "^2.0.0",
        "request": "^2.83.0",
        "request-promise": "^4.2.2"
      },
      "engines": {
        "node": ">=0.12"
      }
    },
    "node_modules/node-telegram-bot-api/node_modules/debug": {
      "version": "3.2.7",
      "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.7.tgz",
      "integrity": "sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==",
      "dependencies": {
        "ms": "^2.1.1"
      }
    },
    "node_modules/node-telegram-bot-api/node_modules/ms": {
      "version": "2.1.3",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
      "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA=="
    },
    "node_modules/oauth-sign": {
      "version": "0.9.0",
      "resolved": "https://registry.npmjs.org/oauth-sign/-/oauth-sign-0.9.0.tgz",
      "integrity": "sha512-fexhUFFPTGV8ybAtSIGbV6gOkSv8UtRbDBnAyLQw4QPKkgNlsH2ByPGtMUqdWkos6YCRmAqViwgZrJc/mRDzZQ==",
      "engines": {
        "node": "*"
      }
    },
    "node_modules/object-inspect": {
      "version": "1.12.2",
      "resolved": "https://registry.npmjs.org/object-inspect/-/object-inspect-1.12.2.tgz",
      "integrity": "sha512-z+cPxW0QGUp0mcqcsgQyLVRDoXFQbXOwBaqyF7VIgI4TWNQsDHrBpUQslRmIfAoYWdYzs6UlKJtB2XJpTaNSpQ==",
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/object-keys": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/object-keys/-/object-keys-1.1.1.tgz",
      "integrity": "sha512-NuAESUOUMrlIXOfHKzD6bpPu3tYt3xvjNdRIQ+FeT0lNb4K8WR70CaDxhuNguS2XG+GjkyMwOzsN5ZktImfhLA==",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/object.assign": {
      "version": "4.1.4",
      "resolved": "https://registry.npmjs.org/object.assign/-/object.assign-4.1.4.tgz",
      "integrity": "sha512-1mxKf0e58bvyjSCtKYY4sRe9itRk3PJpquJOjeIkz885CczcI4IvJJDLPS72oowuSh+pBxUFROpX+TU++hxhZQ==",
      "dependencies": {
        "call-bind": "^1.0.2",
        "define-properties": "^1.1.4",
        "has-symbols": "^1.0.3",
        "object-keys": "^1.1.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/on-finished": {
      "version": "2.4.1",
      "resolved": "https://registry.npmjs.org/on-finished/-/on-finished-2.4.1.tgz",
      "integrity": "sha512-oVlzkg3ENAhCk2zdv7IJwd/QUD4z2RxRwpkcGY8psCVcCYZNq4wYnVWALHM+brtuJjePWiYF/ClmuDr8Ch5+kg==",
      "dependencies": {
        "ee-first": "1.1.1"
      },
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/once": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/once/-/once-1.4.0.tgz",
      "integrity": "sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==",
      "dependencies": {
        "wrappy": "1"
      }
    },
    "node_modules/parent-module": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/parent-module/-/parent-module-1.0.1.tgz",
      "integrity": "sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==",
      "dependencies": {
        "callsites": "^3.0.0"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/parse-json": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/parse-json/-/parse-json-5.2.0.tgz",
      "integrity": "sha512-ayCKvm/phCGxOkYRSCM82iDwct8/EonSEgCSxWxD7ve6jHggsFl4fZVQBPRNgQoKiuV/odhFrGzQXZwbifC8Rg==",
      "dependencies": {
        "@babel/code-frame": "^7.0.0",
        "error-ex": "^1.3.1",
        "json-parse-even-better-errors": "^2.3.0",
        "lines-and-columns": "^1.1.6"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/parseurl": {
      "version": "1.3.3",
      "resolved": "https://registry.npmjs.org/parseurl/-/parseurl-1.3.3.tgz",
      "integrity": "sha512-CiyeOxFT/JZyN5m0z9PfXw4SCBJ6Sygz1Dpl0wqjlhDEGGBP1GnsUVEL0p63hoG1fcj3fHynXi9NYO4nWOL+qQ==",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/path-is-absolute": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz",
      "integrity": "sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg==",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/path-to-regexp": {
      "version": "0.1.7",
      "resolved": "https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-0.1.7.tgz",
      "integrity": "sha512-5DFkuoqlv1uYQKxy8omFBeJPQcdoE07Kv2sferDCrAq1ohOU+MSDswDIbnx3YAM60qIOnYa53wBhXW0EbMonrQ=="
    },
    "node_modules/path-type": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/path-type/-/path-type-4.0.0.tgz",
      "integrity": "sha512-gDKb8aZMDeD/tZWs9P6+q0J9Mwkdl6xMV8TjnGP3qJVJ06bdMgkbBlLU8IdfOsIsFz2BW1rNVT3XuNEl8zPAvw==",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/pend": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/pend/-/pend-1.2.0.tgz",
      "integrity": "sha512-F3asv42UuXchdzt+xXqfW1OGlVBe+mxa2mqI0pg5yAHZPvFmY3Y6drSf/GQ1A86WgWEN9Kzh/WrgKa6iGcHXLg=="
    },
    "node_modules/performance-now": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/performance-now/-/performance-now-2.1.0.tgz",
      "integrity": "sha512-7EAHlyLHI56VEIdK57uwHdHKIaAGbnXPiw0yWbarQZOKaKpvUIgW0jWRVLiatnM+XXlSwsanIBH/hzGMJulMow=="
    },
    "node_modules/process-nextick-args": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/process-nextick-args/-/process-nextick-args-2.0.1.tgz",
      "integrity": "sha512-3ouUOpQhtgrbOa17J7+uxOTpITYWaGP7/AhoR3+A+/1e9skrzelGi/dXzEYyvbxubEF6Wn2ypscTKiKJFFn1ag=="
    },
    "node_modules/progress": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/progress/-/progress-2.0.3.tgz",
      "integrity": "sha512-7PiHtLll5LdnKIMw100I+8xJXR5gW2QwWYkT6iJva0bXitZKa/XMrSbdmg3r2Xnaidz9Qumd0VPaMrZlF9V9sA==",
      "engines": {
        "node": ">=0.4.0"
      }
    },
    "node_modules/proxy-addr": {
      "version": "2.0.7",
      "resolved": "https://registry.npmjs.org/proxy-addr/-/proxy-addr-2.0.7.tgz",
      "integrity": "sha512-llQsMLSUDUPT44jdrU/O37qlnifitDP+ZwrmmZcoSKyLKvtZxpyV0n2/bD/N4tBAAZ/gJEdZU7KMraoK1+XYAg==",
      "dependencies": {
        "forwarded": "0.2.0",
        "ipaddr.js": "1.9.1"
      },
      "engines": {
        "node": ">= 0.10"
      }
    },
    "node_modules/proxy-from-env": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/proxy-from-env/-/proxy-from-env-1.1.0.tgz",
      "integrity": "sha512-D+zkORCbA9f1tdWRK0RaCR3GPv50cMxcrz4X8k5LTSUD1Dkw47mKJEZQNunItRTkWwgtaUSo1RVFRIG9ZXiFYg=="
    },
    "node_modules/pseudomap": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/pseudomap/-/pseudomap-1.0.2.tgz",
      "integrity": "sha512-b/YwNhb8lk1Zz2+bXXpS/LK9OisiZZ1SNsSLxN1x2OXVEhW2Ckr/7mWE5vrC1ZTiJlD9g19jWszTmJsB+oEpFQ=="
    },
    "node_modules/psl": {
      "version": "1.9.0",
      "resolved": "https://registry.npmjs.org/psl/-/psl-1.9.0.tgz",
      "integrity": "sha512-E/ZsdU4HLs/68gYzgGTkMicWTLPdAftJLfJFlLUAAKZGkStNU72sZjT66SnMDVOfOWY/YAoiD7Jxa9iHvngcag=="
    },
    "node_modules/pump": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/pump/-/pump-2.0.1.tgz",
      "integrity": "sha512-ruPMNRkN3MHP1cWJc9OWr+T/xDP0jhXYCLfJcBuX54hhfIBnaQmAUMfDcG4DM5UMWByBbJY69QSphm3jtDKIkA==",
      "dependencies": {
        "end-of-stream": "^1.1.0",
        "once": "^1.3.1"
      }
    },
    "node_modules/punycode": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/punycode/-/punycode-2.1.1.tgz",
      "integrity": "sha512-XRsRjdf+j5ml+y/6GKHPZbrF/8p2Yga0JPtdqTIY2Xe5ohJPD9saDJJLPvp9+NSBprVvevdXZybnj2cv8OEd0A==",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/puppeteer": {
      "version": "19.4.0",
      "resolved": "https://registry.npmjs.org/puppeteer/-/puppeteer-19.4.0.tgz",
      "integrity": "sha512-sRzWEfFSZCCcFUJflGtYI2V7A6qK4Jht+2JiI2LZgn+Nv/LOZZsBDEaGl98ZrS8oEcUA5on4p2yJbE0nzHNzIg==",
      "hasInstallScript": true,
      "dependencies": {
        "cosmiconfig": "8.0.0",
        "devtools-protocol": "0.0.1068969",
        "https-proxy-agent": "5.0.1",
        "progress": "2.0.3",
        "proxy-from-env": "1.1.0",
        "puppeteer-core": "19.4.0"
      },
      "engines": {
        "node": ">=14.1.0"
      }
    },
    "node_modules/puppeteer-core": {
      "version": "19.4.0",
      "resolved": "https://registry.npmjs.org/puppeteer-core/-/puppeteer-core-19.4.0.tgz",
      "integrity": "sha512-gG/jxseleZStinBn86x8r7trjcE4jcjx1hIQWOpACQhquHYMuKnrWxkzg+EDn8sN3wUtF/Ry9mtJgjM49oUOFQ==",
      "dependencies": {
        "cross-fetch": "3.1.5",
        "debug": "4.3.4",
        "devtools-protocol": "0.0.1068969",
        "extract-zip": "2.0.1",
        "https-proxy-agent": "5.0.1",
        "proxy-from-env": "1.1.0",
        "rimraf": "3.0.2",
        "tar-fs": "2.1.1",
        "unbzip2-stream": "1.4.3",
        "ws": "8.10.0"
      },
      "engines": {
        "node": ">=14.1.0"
      }
    },
    "node_modules/puppeteer-core/node_modules/debug": {
      "version": "4.3.4",
      "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.4.tgz",
      "integrity": "sha512-PRWFHuSU3eDtQJPvnNY7Jcket1j0t5OuOsFzPPzsekD52Zl8qUfFIPEiswXqIvHWGVHOgX+7G/vCNNhehwxfkQ==",
      "dependencies": {
        "ms": "2.1.2"
      },
      "engines": {
        "node": ">=6.0"
      },
      "peerDependenciesMeta": {
        "supports-color": {
          "optional": true
        }
      }
    },
    "node_modules/puppeteer-core/node_modules/ms": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
      "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w=="
    },
    "node_modules/qs": {
      "version": "6.11.0",
      "resolved": "https://registry.npmjs.org/qs/-/qs-6.11.0.tgz",
      "integrity": "sha512-MvjoMCJwEarSbUYk5O+nmoSzSutSsTwF85zcHPQ9OrlFoZOYIjaqBAJIqIXjptyD5vThxGq52Xu/MaJzRkIk4Q==",
      "dependencies": {
        "side-channel": "^1.0.4"
      },
      "engines": {
        "node": ">=0.6"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/range-parser": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/range-parser/-/range-parser-1.2.1.tgz",
      "integrity": "sha512-Hrgsx+orqoygnmhFbKaHE6c296J+HTAQXoxEF6gNupROmmGJRoyzfG3ccAveqCBrwr/2yxQ5BVd/GTl5agOwSg==",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/raw-body": {
      "version": "2.5.1",
      "resolved": "https://registry.npmjs.org/raw-body/-/raw-body-2.5.1.tgz",
      "integrity": "sha512-qqJBtEyVgS0ZmPGdCFPWJ3FreoqvG4MVQln/kCgF7Olq95IbOp0/BWyMwbdtn4VTvkM8Y7khCQ2Xgk/tcrCXig==",
      "dependencies": {
        "bytes": "3.1.2",
        "http-errors": "2.0.0",
        "iconv-lite": "0.4.24",
        "unpipe": "1.0.0"
      },
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/readable-stream": {
      "version": "2.3.7",
      "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
      "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
      "dependencies": {
        "core-util-is": "~1.0.0",
        "inherits": "~2.0.3",
        "isarray": "~1.0.0",
        "process-nextick-args": "~2.0.0",
        "safe-buffer": "~5.1.1",
        "string_decoder": "~1.1.1",
        "util-deprecate": "~1.0.1"
      }
    },
    "node_modules/readable-stream/node_modules/safe-buffer": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
      "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g=="
    },
    "node_modules/regexp.prototype.flags": {
      "version": "1.4.3",
      "resolved": "https://registry.npmjs.org/regexp.prototype.flags/-/regexp.prototype.flags-1.4.3.tgz",
      "integrity": "sha512-fjggEOO3slI6Wvgjwflkc4NFRCTZAu5CnNfBd5qOMYhWdn67nJBBu34/TkD++eeFmd8C9r9jfXJ27+nSiRkSUA==",
      "dependencies": {
        "call-bind": "^1.0.2",
        "define-properties": "^1.1.3",
        "functions-have-names": "^1.2.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/request": {
      "version": "2.88.2",
      "resolved": "https://registry.npmjs.org/request/-/request-2.88.2.tgz",
      "integrity": "sha512-MsvtOrfG9ZcrOwAW+Qi+F6HbD0CWXEh9ou77uOb7FM2WPhwT7smM833PzanhJLsgXjN89Ir6V2PczXNnMpwKhw==",
      "deprecated": "request has been deprecated, see https://github.com/request/request/issues/3142",
      "dependencies": {
        "aws-sign2": "~0.7.0",
        "aws4": "^1.8.0",
        "caseless": "~0.12.0",
        "combined-stream": "~1.0.6",
        "extend": "~3.0.2",
        "forever-agent": "~0.6.1",
        "form-data": "~2.3.2",
        "har-validator": "~5.1.3",
        "http-signature": "~1.2.0",
        "is-typedarray": "~1.0.0",
        "isstream": "~0.1.2",
        "json-stringify-safe": "~5.0.1",
        "mime-types": "~2.1.19",
        "oauth-sign": "~0.9.0",
        "performance-now": "^2.1.0",
        "qs": "~6.5.2",
        "safe-buffer": "^5.1.2",
        "tough-cookie": "~2.5.0",
        "tunnel-agent": "^0.6.0",
        "uuid": "^3.3.2"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/request-promise": {
      "version": "4.2.6",
      "resolved": "https://registry.npmjs.org/request-promise/-/request-promise-4.2.6.tgz",
      "integrity": "sha512-HCHI3DJJUakkOr8fNoCc73E5nU5bqITjOYFMDrKHYOXWXrgD/SBaC7LjwuPymUprRyuF06UK7hd/lMHkmUXglQ==",
      "deprecated": "request-promise has been deprecated because it extends the now deprecated request package, see https://github.com/request/request/issues/3142",
      "dependencies": {
        "bluebird": "^3.5.0",
        "request-promise-core": "1.1.4",
        "stealthy-require": "^1.1.1",
        "tough-cookie": "^2.3.3"
      },
      "engines": {
        "node": ">=0.10.0"
      },
      "peerDependencies": {
        "request": "^2.34"
      }
    },
    "node_modules/request-promise-core": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/request-promise-core/-/request-promise-core-1.1.4.tgz",
      "integrity": "sha512-TTbAfBBRdWD7aNNOoVOBH4pN/KigV6LyapYNNlAPA8JwbovRti1E88m3sYAwsLi5ryhPKsE9APwnjFTgdUjTpw==",
      "dependencies": {
        "lodash": "^4.17.19"
      },
      "engines": {
        "node": ">=0.10.0"
      },
      "peerDependencies": {
        "request": "^2.34"
      }
    },
    "node_modules/request/node_modules/qs": {
      "version": "6.5.3",
      "resolved": "https://registry.npmjs.org/qs/-/qs-6.5.3.tgz",
      "integrity": "sha512-qxXIEh4pCGfHICj1mAJQ2/2XVZkjCDTcEgfoSQxc/fYivUZxTkk7L3bDBJSoNrEzXI17oUO5Dp07ktqE5KzczA==",
      "engines": {
        "node": ">=0.6"
      }
    },
    "node_modules/resolve-from": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-4.0.0.tgz",
      "integrity": "sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/rimraf": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-3.0.2.tgz",
      "integrity": "sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX/2o0L9UBw9O/Y3o6wFw/i9YLapcUJWwqbi3kdxIPdC62TIA==",
      "dependencies": {
        "glob": "^7.1.3"
      },
      "bin": {
        "rimraf": "bin.js"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/safe-buffer": {
      "version": "5.2.1",
      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.1.tgz",
      "integrity": "sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ]
    },
    "node_modules/safe-regex-test": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/safe-regex-test/-/safe-regex-test-1.0.0.tgz",
      "integrity": "sha512-JBUUzyOgEwXQY1NuPtvcj/qcBDbDmEvWufhlnXZIm75DEHp+afM1r1ujJpJsV/gSM4t59tpDyPi1sd6ZaPFfsA==",
      "dependencies": {
        "call-bind": "^1.0.2",
        "get-intrinsic": "^1.1.3",
        "is-regex": "^1.1.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/safer-buffer": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz",
      "integrity": "sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg=="
    },
    "node_modules/send": {
      "version": "0.18.0",
      "resolved": "https://registry.npmjs.org/send/-/send-0.18.0.tgz",
      "integrity": "sha512-qqWzuOjSFOuqPjFe4NOsMLafToQQwBSOEpS+FwEt3A2V3vKubTquT3vmLTQpFgMXp8AlFWFuP1qKaJZOtPpVXg==",
      "dependencies": {
        "debug": "2.6.9",
        "depd": "2.0.0",
        "destroy": "1.2.0",
        "encodeurl": "~1.0.2",
        "escape-html": "~1.0.3",
        "etag": "~1.8.1",
        "fresh": "0.5.2",
        "http-errors": "2.0.0",
        "mime": "1.6.0",
        "ms": "2.1.3",
        "on-finished": "2.4.1",
        "range-parser": "~1.2.1",
        "statuses": "2.0.1"
      },
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/send/node_modules/ms": {
      "version": "2.1.3",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
      "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA=="
    },
    "node_modules/seq-queue": {
      "version": "0.0.5",
      "resolved": "https://registry.npmjs.org/seq-queue/-/seq-queue-0.0.5.tgz",
      "integrity": "sha512-hr3Wtp/GZIc/6DAGPDcV4/9WoZhjrkXsi5B/07QgX8tsdc6ilr7BFM6PM6rbdAX1kFSDYeZGLipIZZKyQP0O5Q=="
    },
    "node_modules/serve-static": {
      "version": "1.15.0",
      "resolved": "https://registry.npmjs.org/serve-static/-/serve-static-1.15.0.tgz",
      "integrity": "sha512-XGuRDNjXUijsUL0vl6nSD7cwURuzEgglbOaFuZM9g3kwDXOWVTck0jLzjPzGD+TazWbboZYu52/9/XPdUgne9g==",
      "dependencies": {
        "encodeurl": "~1.0.2",
        "escape-html": "~1.0.3",
        "parseurl": "~1.3.3",
        "send": "0.18.0"
      },
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/setprototypeof": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.2.0.tgz",
      "integrity": "sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw=="
    },
    "node_modules/side-channel": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/side-channel/-/side-channel-1.0.4.tgz",
      "integrity": "sha512-q5XPytqFEIKHkGdiMIrY10mvLRvnQh42/+GoBlFW3b2LXLE2xxJpZFdm94we0BaoV3RwJyGqg5wS7epxTv0Zvw==",
      "dependencies": {
        "call-bind": "^1.0.0",
        "get-intrinsic": "^1.0.2",
        "object-inspect": "^1.9.0"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/sqlstring": {
      "version": "2.3.3",
      "resolved": "https://registry.npmjs.org/sqlstring/-/sqlstring-2.3.3.tgz",
      "integrity": "sha512-qC9iz2FlN7DQl3+wjwn3802RTyjCx7sDvfQEXchwa6CWOx07/WVfh91gBmQ9fahw8snwGEWU3xGzOt4tFyHLxg==",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/sshpk": {
      "version": "1.17.0",
      "resolved": "https://registry.npmjs.org/sshpk/-/sshpk-1.17.0.tgz",
      "integrity": "sha512-/9HIEs1ZXGhSPE8X6Ccm7Nam1z8KcoCqPdI7ecm1N33EzAetWahvQWVqLZtaZQ+IDKX4IyA2o0gBzqIMkAagHQ==",
      "dependencies": {
        "asn1": "~0.2.3",
        "assert-plus": "^1.0.0",
        "bcrypt-pbkdf": "^1.0.0",
        "dashdash": "^1.12.0",
        "ecc-jsbn": "~0.1.1",
        "getpass": "^0.1.1",
        "jsbn": "~0.1.0",
        "safer-buffer": "^2.0.2",
        "tweetnacl": "~0.14.0"
      },
      "bin": {
        "sshpk-conv": "bin/sshpk-conv",
        "sshpk-sign": "bin/sshpk-sign",
        "sshpk-verify": "bin/sshpk-verify"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/statuses": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/statuses/-/statuses-2.0.1.tgz",
      "integrity": "sha512-RwNA9Z/7PrK06rYLIzFMlaF+l73iwpzsqRIFgbMLbTcLD6cOao82TaWefPXQvB2fOC4AjuYSEndS7N/mTCbkdQ==",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/stealthy-require": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/stealthy-require/-/stealthy-require-1.1.1.tgz",
      "integrity": "sha512-ZnWpYnYugiOVEY5GkcuJK1io5V8QmNYChG62gSit9pQVGErXtrKuPC55ITaVSukmMta5qpMU7vqLt2Lnni4f/g==",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/string_decoder": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
      "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
      "dependencies": {
        "safe-buffer": "~5.1.0"
      }
    },
    "node_modules/string_decoder/node_modules/safe-buffer": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
      "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g=="
    },
    "node_modules/string.prototype.trimend": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/string.prototype.trimend/-/string.prototype.trimend-1.0.6.tgz",
      "integrity": "sha512-JySq+4mrPf9EsDBEDYMOb/lM7XQLulwg5R/m1r0PXEFqrV0qHvl58sdTilSXtKOflCsK2E8jxf+GKC0T07RWwQ==",
      "dependencies": {
        "call-bind": "^1.0.2",
        "define-properties": "^1.1.4",
        "es-abstract": "^1.20.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/string.prototype.trimstart": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/string.prototype.trimstart/-/string.prototype.trimstart-1.0.6.tgz",
      "integrity": "sha512-omqjMDaY92pbn5HOX7f9IccLA+U1tA9GvtU4JrodiXFfYB7jPzzHpRzpglLAjtUV6bB557zwClJezTqnAiYnQA==",
      "dependencies": {
        "call-bind": "^1.0.2",
        "define-properties": "^1.1.4",
        "es-abstract": "^1.20.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/strip-bom": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/strip-bom/-/strip-bom-2.0.0.tgz",
      "integrity": "sha512-kwrX1y7czp1E69n2ajbG65mIo9dqvJ+8aBQXOGVxqwvNbsXdFM6Lq37dLAY3mknUwru8CfcCbfOLL/gMo+fi3g==",
      "dependencies": {
        "is-utf8": "^0.2.0"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/strnum": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/strnum/-/strnum-1.0.5.tgz",
      "integrity": "sha512-J8bbNyKKXl5qYcR36TIO8W3mVGVHrmmxsd5PAItGkmyzwJvybiw2IVq5nqd0i4LSNSkB/sx9VHllbfFdr9k1JA=="
    },
    "node_modules/supports-color": {
      "version": "5.5.0",
      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
      "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
      "dependencies": {
        "has-flag": "^3.0.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/tar-fs": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/tar-fs/-/tar-fs-2.1.1.tgz",
      "integrity": "sha512-V0r2Y9scmbDRLCNex/+hYzvp/zyYjvFbHPNgVTKfQvVrb6guiE/fxP+XblDNR011utopbkex2nM4dHNV6GDsng==",
      "dependencies": {
        "chownr": "^1.1.1",
        "mkdirp-classic": "^0.5.2",
        "pump": "^3.0.0",
        "tar-stream": "^2.1.4"
      }
    },
    "node_modules/tar-fs/node_modules/pump": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/pump/-/pump-3.0.0.tgz",
      "integrity": "sha512-LwZy+p3SFs1Pytd/jYct4wpv49HiYCqd9Rlc5ZVdk0V+8Yzv6jR5Blk3TRmPL1ft69TxP0IMZGJ+WPFU2BFhww==",
      "dependencies": {
        "end-of-stream": "^1.1.0",
        "once": "^1.3.1"
      }
    },
    "node_modules/tar-stream": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/tar-stream/-/tar-stream-2.2.0.tgz",
      "integrity": "sha512-ujeqbceABgwMZxEJnk2HDY2DlnUZ+9oEcb1KzTVfYHio0UE6dG71n60d8D2I4qNvleWrrXpmjpt7vZeF1LnMZQ==",
      "dependencies": {
        "bl": "^4.0.3",
        "end-of-stream": "^1.4.1",
        "fs-constants": "^1.0.0",
        "inherits": "^2.0.3",
        "readable-stream": "^3.1.1"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/tar-stream/node_modules/bl": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/bl/-/bl-4.1.0.tgz",
      "integrity": "sha512-1W07cM9gS6DcLperZfFSj+bWLtaPGSOHWhPiGzXmvVJbRLdG82sH/Kn8EtW1VqWVA54AKf2h5k5BbnIbwF3h6w==",
      "dependencies": {
        "buffer": "^5.5.0",
        "inherits": "^2.0.4",
        "readable-stream": "^3.4.0"
      }
    },
    "node_modules/tar-stream/node_modules/readable-stream": {
      "version": "3.6.0",
      "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-3.6.0.tgz",
      "integrity": "sha512-BViHy7LKeTz4oNnkcLJ+lVSL6vpiFeX6/d3oSH8zCW7UxP2onchk+vTGB143xuFjHS3deTgkKoXXymXqymiIdA==",
      "dependencies": {
        "inherits": "^2.0.3",
        "string_decoder": "^1.1.1",
        "util-deprecate": "^1.0.1"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/through": {
      "version": "2.3.8",
      "resolved": "https://registry.npmjs.org/through/-/through-2.3.8.tgz",
      "integrity": "sha512-w89qg7PI8wAdvX60bMDP+bFoD5Dvhm9oLheFp5O4a2QF0cSBGsBX4qZmadPMvVqlLJBBci+WqGGOAPvcDeNSVg=="
    },
    "node_modules/toidentifier": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/toidentifier/-/toidentifier-1.0.1.tgz",
      "integrity": "sha512-o5sSPKEkg/DIQNmH43V0/uerLrpzVedkUh8tGNvaeXpfpuwjKenlSox/2O/BTlZUtEe+JG7s5YhEz608PlAHRA==",
      "engines": {
        "node": ">=0.6"
      }
    },
    "node_modules/tough-cookie": {
      "version": "2.5.0",
      "resolved": "https://registry.npmjs.org/tough-cookie/-/tough-cookie-2.5.0.tgz",
      "integrity": "sha512-nlLsUzgm1kfLXSXfRZMc1KLAugd4hqJHDTvc2hDIwS3mZAfMEuMbc03SujMF+GEcpaX/qboeycw6iO8JwVv2+g==",
      "dependencies": {
        "psl": "^1.1.28",
        "punycode": "^2.1.1"
      },
      "engines": {
        "node": ">=0.8"
      }
    },
    "node_modules/tr46": {
      "version": "0.0.3",
      "resolved": "https://registry.npmjs.org/tr46/-/tr46-0.0.3.tgz",
      "integrity": "sha512-N3WMsuqV66lT30CrXNbEjx4GEwlow3v6rr4mCcv6prnfwhS01rkgyFdjPNBYd9br7LpXV1+Emh01fHnq2Gdgrw=="
    },
    "node_modules/tunnel-agent": {
      "version": "0.6.0",
      "resolved": "https://registry.npmjs.org/tunnel-agent/-/tunnel-agent-0.6.0.tgz",
      "integrity": "sha512-McnNiV1l8RYeY8tBgEpuodCC1mLUdbSN+CYBL7kJsJNInOP8UjDDEwdk6Mw60vdLLrr5NHKZhMAOSrR2NZuQ+w==",
      "dependencies": {
        "safe-buffer": "^5.0.1"
      },
      "engines": {
        "node": "*"
      }
    },
    "node_modules/tweetnacl": {
      "version": "0.14.5",
      "resolved": "https://registry.npmjs.org/tweetnacl/-/tweetnacl-0.14.5.tgz",
      "integrity": "sha512-KXXFFdAbFXY4geFIwoyNK+f5Z1b7swfXABfL7HXCmoIWMKU3dmS26672A4EeQtDzLKy7SXmfBu51JolvEKwtGA=="
    },
    "node_modules/type-is": {
      "version": "1.6.18",
      "resolved": "https://registry.npmjs.org/type-is/-/type-is-1.6.18.tgz",
      "integrity": "sha512-TkRKr9sUTxEH8MdfuCSP7VizJyzRNMjj2J2do2Jr3Kym598JVdEksuzPQCnlFPW4ky9Q+iA+ma9BGm06XQBy8g==",
      "dependencies": {
        "media-typer": "0.3.0",
        "mime-types": "~2.1.24"
      },
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/unbox-primitive": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/unbox-primitive/-/unbox-primitive-1.0.2.tgz",
      "integrity": "sha512-61pPlCD9h51VoreyJ0BReideM3MDKMKnh6+V9L08331ipq6Q8OFXZYiqP6n/tbHx4s5I9uRhcye6BrbkizkBDw==",
      "dependencies": {
        "call-bind": "^1.0.2",
        "has-bigints": "^1.0.2",
        "has-symbols": "^1.0.3",
        "which-boxed-primitive": "^1.0.2"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/unbzip2-stream": {
      "version": "1.4.3",
      "resolved": "https://registry.npmjs.org/unbzip2-stream/-/unbzip2-stream-1.4.3.tgz",
      "integrity": "sha512-mlExGW4w71ebDJviH16lQLtZS32VKqsSfk80GCfUlwT/4/hNRFsoscrF/c++9xinkMzECL1uL9DDwXqFWkruPg==",
      "dependencies": {
        "buffer": "^5.2.1",
        "through": "^2.3.8"
      }
    },
    "node_modules/unpipe": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/unpipe/-/unpipe-1.0.0.tgz",
      "integrity": "sha512-pjy2bYhSsufwWlKwPc+l3cN7+wuJlK6uz0YdJEOlQDbl6jo/YlPi4mb8agUkVC8BF7V8NuzeyPNqRksA3hztKQ==",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/uri-js": {
      "version": "4.4.1",
      "resolved": "https://registry.npmjs.org/uri-js/-/uri-js-4.4.1.tgz",
      "integrity": "sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==",
      "dependencies": {
        "punycode": "^2.1.0"
      }
    },
    "node_modules/util": {
      "version": "0.12.5",
      "resolved": "https://registry.npmjs.org/util/-/util-0.12.5.tgz",
      "integrity": "sha512-kZf/K6hEIrWHI6XqOFUiiMa+79wE/D8Q+NCNAWclkyg3b4d2k7s0QGepNjiABc+aR3N1PAyHL7p6UcLY6LmrnA==",
      "dependencies": {
        "inherits": "^2.0.3",
        "is-arguments": "^1.0.4",
        "is-generator-function": "^1.0.7",
        "is-typed-array": "^1.1.3",
        "which-typed-array": "^1.1.2"
      }
    },
    "node_modules/util-deprecate": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz",
      "integrity": "sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw=="
    },
    "node_modules/utils-merge": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/utils-merge/-/utils-merge-1.0.1.tgz",
      "integrity": "sha512-pMZTvIkT1d+TFGvDOqodOclx0QWkkgi6Tdoa8gC8ffGAAqz9pzPTZWAybbsHHoED/ztMtkv/VoYTYyShUn81hA==",
      "engines": {
        "node": ">= 0.4.0"
      }
    },
    "node_modules/uuid": {
      "version": "3.4.0",
      "resolved": "https://registry.npmjs.org/uuid/-/uuid-3.4.0.tgz",
      "integrity": "sha512-HjSDRw6gZE5JMggctHBcjVak08+KEVhSIiDzFnT9S9aegmp85S/bReBVTb4QTFaRNptJ9kuYaNhnbNEOkbKb/A==",
      "deprecated": "Please upgrade  to version 7 or higher.  Older versions may use Math.random() in certain circumstances, which is known to be problematic.  See https://v8.dev/blog/math-random for details.",
      "bin": {
        "uuid": "bin/uuid"
      }
    },
    "node_modules/vary": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/vary/-/vary-1.1.2.tgz",
      "integrity": "sha512-BNGbWLfd0eUPabhkXUVm0j8uuvREyTh5ovRa/dyow/BqAbZJyC+5fU+IzQOzmAKzYqYRAISoRhdQr3eIZ/PXqg==",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/verror": {
      "version": "1.10.0",
      "resolved": "https://registry.npmjs.org/verror/-/verror-1.10.0.tgz",
      "integrity": "sha512-ZZKSmDAEFOijERBLkmYfJ+vmk3w+7hOLYDNkRCuRuMJGEmqYNCNLyBBFwWKVMhfwaEF3WOd0Zlw86U/WC/+nYw==",
      "engines": [
        "node >=0.6.0"
      ],
      "dependencies": {
        "assert-plus": "^1.0.0",
        "core-util-is": "1.0.2",
        "extsprintf": "^1.2.0"
      }
    },
    "node_modules/verror/node_modules/core-util-is": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/core-util-is/-/core-util-is-1.0.2.tgz",
      "integrity": "sha512-3lqz5YjWTYnW6dlDa5TLaTCcShfar1e40rmcJVwCBJC6mWlFuj0eCHIElmG1g5kyuJ/GD+8Wn4FFCcz4gJPfaQ=="
    },
    "node_modules/webidl-conversions": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/webidl-conversions/-/webidl-conversions-3.0.1.tgz",
      "integrity": "sha512-2JAn3z8AR6rjK8Sm8orRC0h/bcl/DqL7tRPdGZ4I1CjdF+EaMLmYxBHyXuKL849eucPFhvBoxMsflfOb8kxaeQ=="
    },
    "node_modules/whatwg-url": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/whatwg-url/-/whatwg-url-5.0.0.tgz",
      "integrity": "sha512-saE57nupxk6v3HY35+jzBwYa0rKSy0XR8JSxZPwgLr7ys0IBzhGviA1/TUGJLmSVqs8pb9AnvICXEuOHLprYTw==",
      "dependencies": {
        "tr46": "~0.0.3",
        "webidl-conversions": "^3.0.0"
      }
    },
    "node_modules/which-boxed-primitive": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/which-boxed-primitive/-/which-boxed-primitive-1.0.2.tgz",
      "integrity": "sha512-bwZdv0AKLpplFY2KZRX6TvyuN7ojjr7lwkg6ml0roIy9YeuSr7JS372qlNW18UQYzgYK9ziGcerWqZOmEn9VNg==",
      "dependencies": {
        "is-bigint": "^1.0.1",
        "is-boolean-object": "^1.1.0",
        "is-number-object": "^1.0.4",
        "is-string": "^1.0.5",
        "is-symbol": "^1.0.3"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/which-typed-array": {
      "version": "1.1.9",
      "resolved": "https://registry.npmjs.org/which-typed-array/-/which-typed-array-1.1.9.tgz",
      "integrity": "sha512-w9c4xkx6mPidwp7180ckYWfMmvxpjlZuIudNtDf4N/tTAUB8VJbX25qZoAsrtGuYNnGw3pa0AXgbGKRB8/EceA==",
      "dependencies": {
        "available-typed-arrays": "^1.0.5",
        "call-bind": "^1.0.2",
        "for-each": "^0.3.3",
        "gopd": "^1.0.1",
        "has-tostringtag": "^1.0.0",
        "is-typed-array": "^1.1.10"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/wrappy": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz",
      "integrity": "sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ=="
    },
    "node_modules/ws": {
      "version": "8.10.0",
      "resolved": "https://registry.npmjs.org/ws/-/ws-8.10.0.tgz",
      "integrity": "sha512-+s49uSmZpvtAsd2h37vIPy1RBusaLawVe8of+GyEPsaJTCMpj/2v8NpeK1SHXjBlQ95lQTmQofOJnFiLoaN3yw==",
      "engines": {
        "node": ">=10.0.0"
      },
      "peerDependencies": {
        "bufferutil": "^4.0.1",
        "utf-8-validate": "^5.0.2"
      },
      "peerDependenciesMeta": {
        "bufferutil": {
          "optional": true
        },
        "utf-8-validate": {
          "optional": true
        }
      }
    },
    "node_modules/yallist": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz",
      "integrity": "sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A=="
    },
    "node_modules/yauzl": {
      "version": "2.10.0",
      "resolved": "https://registry.npmjs.org/yauzl/-/yauzl-2.10.0.tgz",
      "integrity": "sha512-p4a9I6X6nu6IhoGmBqAcbJy1mlC4j27vEPZX9F4L4/vZT3Lyq1VkFHw/V/PUcB9Buo+DG3iHkT0x3Qya58zc3g==",
      "dependencies": {
        "buffer-crc32": "~0.2.3",
        "fd-slicer": "~1.1.0"
      }
    }
  },
  "dependencies": {
    "@babel/code-frame": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.18.6.tgz",
      "integrity": "sha512-TDCmlK5eOvH+eH7cdAFlNXeVJqWIQ7gW9tY1GJIpUtFb6CmjVyq2VM3u71bOyR8CRihcCgMUYoDNyLXao3+70Q==",
      "requires": {
        "@babel/highlight": "^7.18.6"
      }
    },
    "@babel/helper-validator-identifier": {
      "version": "7.19.1",
      "resolved": "https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.19.1.tgz",
      "integrity": "sha512-awrNfaMtnHUr653GgGEs++LlAvW6w+DcPrOliSMXWCKo597CwL5Acf/wWdNkf/tfEQE3mjkeD1YOVZOUV/od1w=="
    },
    "@babel/highlight": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/highlight/-/highlight-7.18.6.tgz",
      "integrity": "sha512-u7stbOuYjaPezCuLj29hNW1v64M2Md2qupEKP1fHc7WdOA3DgLh37suiSrZYY7haUB7iBeQZ9P1uiRF359do3g==",
      "requires": {
        "@babel/helper-validator-identifier": "^7.18.6",
        "chalk": "^2.0.0",
        "js-tokens": "^4.0.0"
      }
    },
    "@types/node": {
      "version": "18.11.14",
      "resolved": "https://registry.npmjs.org/@types/node/-/node-18.11.14.tgz",
      "integrity": "sha512-0KXV57tENYmmJMl+FekeW9V3O/rlcqGQQJ/hNh9r8pKIj304pskWuEd8fCyNT86g/TpO0gcOTiLzsHLEURFMIQ==",
      "optional": true
    },
    "@types/yauzl": {
      "version": "2.10.0",
      "resolved": "https://registry.npmjs.org/@types/yauzl/-/yauzl-2.10.0.tgz",
      "integrity": "sha512-Cn6WYCm0tXv8p6k+A8PvbDG763EDpBoTzHdA+Q/MF6H3sapGjCm9NzoaJncJS9tUKSuCoDs9XHxYYsQDgxR6kw==",
      "optional": true,
      "requires": {
        "@types/node": "*"
      }
    },
    "accepts": {
      "version": "1.3.8",
      "resolved": "https://registry.npmjs.org/accepts/-/accepts-1.3.8.tgz",
      "integrity": "sha512-PYAthTa2m2VKxuvSD3DPC/Gy+U+sOA1LAuT8mkmRuvw+NACSaeXEQ+NHcVF7rONl6qcaxV3Uuemwawk+7+SJLw==",
      "requires": {
        "mime-types": "~2.1.34",
        "negotiator": "0.6.3"
      }
    },
    "agent-base": {
      "version": "6.0.2",
      "resolved": "https://registry.npmjs.org/agent-base/-/agent-base-6.0.2.tgz",
      "integrity": "sha512-RZNwNclF7+MS/8bDg70amg32dyeZGZxiDuQmZxKLAlQjr3jGyLx+4Kkk58UO7D2QdgFIQCovuSuZESne6RG6XQ==",
      "requires": {
        "debug": "4"
      },
      "dependencies": {
        "debug": {
          "version": "4.3.4",
          "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.4.tgz",
          "integrity": "sha512-PRWFHuSU3eDtQJPvnNY7Jcket1j0t5OuOsFzPPzsekD52Zl8qUfFIPEiswXqIvHWGVHOgX+7G/vCNNhehwxfkQ==",
          "requires": {
            "ms": "2.1.2"
          }
        },
        "ms": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
          "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w=="
        }
      }
    },
    "ajv": {
      "version": "6.12.6",
      "resolved": "https://registry.npmjs.org/ajv/-/ajv-6.12.6.tgz",
      "integrity": "sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==",
      "requires": {
        "fast-deep-equal": "^3.1.1",
        "fast-json-stable-stringify": "^2.0.0",
        "json-schema-traverse": "^0.4.1",
        "uri-js": "^4.2.2"
      }
    },
    "amazon-sp-api": {
      "version": "0.8.0",
      "resolved": "https://registry.npmjs.org/amazon-sp-api/-/amazon-sp-api-0.8.0.tgz",
      "integrity": "sha512-MbnVsBf8CGzunAkzW3ofuozA+0NqbJEjJvXIdtUXddaCdTf90xkVWja6qtnIhtfl+8mq3AMkXg24wgab5/CoTw==",
      "requires": {
        "crypto-js": "^4.1.1",
        "csvtojson": "^2.0.10",
        "fast-xml-parser": "^4.0.9",
        "iconv-lite": "^0.6.3",
        "qs": "^6.11.0"
      },
      "dependencies": {
        "iconv-lite": {
          "version": "0.6.3",
          "resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.6.3.tgz",
          "integrity": "sha512-4fCk79wshMdzMp2rH06qWrJE4iolqLhCUH+OiuIgU++RB0+94NlDL81atO7GX55uUKueo0txHNtvEyI6D7WdMw==",
          "requires": {
            "safer-buffer": ">= 2.1.2 < 3.0.0"
          }
        }
      }
    },
    "ansi-styles": {
      "version": "3.2.1",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
      "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
      "requires": {
        "color-convert": "^1.9.0"
      }
    },
    "argparse": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/argparse/-/argparse-2.0.1.tgz",
      "integrity": "sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q=="
    },
    "array-flatten": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/array-flatten/-/array-flatten-1.1.1.tgz",
      "integrity": "sha512-PCVAQswWemu6UdxsDFFX/+gVeYqKAod3D3UVm91jHwynguOwAvYPhx8nNlM++NqRcK6CxxpUafjmhIdKiHibqg=="
    },
    "array.prototype.findindex": {
      "version": "2.2.1",
      "resolved": "https://registry.npmjs.org/array.prototype.findindex/-/array.prototype.findindex-2.2.1.tgz",
      "integrity": "sha512-tMj4uTmGpaGUh4XFMUh3H7KYAIqlygrlXchOEVTiICbTwRwMhDqtzsOwvtI+WAf1GdjJBeIP3Bu92Qg0SnXdtA==",
      "requires": {
        "call-bind": "^1.0.2",
        "define-properties": "^1.1.4",
        "es-abstract": "^1.20.4",
        "es-shim-unscopables": "^1.0.0"
      }
    },
    "asn1": {
      "version": "0.2.6",
      "resolved": "https://registry.npmjs.org/asn1/-/asn1-0.2.6.tgz",
      "integrity": "sha512-ix/FxPn0MDjeyJ7i/yoHGFt/EX6LyNbxSEhPPXODPL+KB0VPk86UYfL0lMdy+KCnv+fmvIzySwaK5COwqVbWTQ==",
      "requires": {
        "safer-buffer": "~2.1.0"
      }
    },
    "assert-plus": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/assert-plus/-/assert-plus-1.0.0.tgz",
      "integrity": "sha512-NfJ4UzBCcQGLDlQq7nHxH+tv3kyZ0hHQqF5BO6J7tNJeP5do1llPr8dZ8zHonfhAu0PHAdMkSo+8o0wxg9lZWw=="
    },
    "asynckit": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/asynckit/-/asynckit-0.4.0.tgz",
      "integrity": "sha512-Oei9OH4tRh0YqU3GxhX79dM/mwVgvbZJaSNaRk+bshkj0S5cfHcgYakreBjrHwatXKbz+IoIdYLxrKim2MjW0Q=="
    },
    "available-typed-arrays": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/available-typed-arrays/-/available-typed-arrays-1.0.5.tgz",
      "integrity": "sha512-DMD0KiN46eipeziST1LPP/STfDU0sufISXmjSgvVsoU2tqxctQeASejWcfNtxYKqETM1UxQ8sp2OrSBWpHY6sw=="
    },
    "aws-sign2": {
      "version": "0.7.0",
      "resolved": "https://registry.npmjs.org/aws-sign2/-/aws-sign2-0.7.0.tgz",
      "integrity": "sha512-08kcGqnYf/YmjoRhfxyu+CLxBjUtHLXLXX/vUfx9l2LYzG3c1m61nrpyFUZI6zeS+Li/wWMMidD9KgrqtGq3mA=="
    },
    "aws4": {
      "version": "1.11.0",
      "resolved": "https://registry.npmjs.org/aws4/-/aws4-1.11.0.tgz",
      "integrity": "sha512-xh1Rl34h6Fi1DC2WWKfxUTVqRsNnr6LsKz2+hfwDxQJWmrx8+c7ylaqBMcHfl1U1r2dsifOvKX3LQuLNZ+XSvA=="
    },
    "balanced-match": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz",
      "integrity": "sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw=="
    },
    "base64-js": {
      "version": "1.5.1",
      "resolved": "https://registry.npmjs.org/base64-js/-/base64-js-1.5.1.tgz",
      "integrity": "sha512-AKpaYlHn8t4SVbOHCy+b5+KKgvR4vrsD8vbvrbiQJps7fKDTkjkDry6ji0rUJjC0kzbNePLwzxq8iypo41qeWA=="
    },
    "bcrypt-pbkdf": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/bcrypt-pbkdf/-/bcrypt-pbkdf-1.0.2.tgz",
      "integrity": "sha512-qeFIXtP4MSoi6NLqO12WfqARWWuCKi2Rn/9hJLEmtB5yTNr9DqFWkJRCf2qShWzPeAMRnOgCrq0sg/KLv5ES9w==",
      "requires": {
        "tweetnacl": "^0.14.3"
      }
    },
    "bl": {
      "version": "1.2.3",
      "resolved": "https://registry.npmjs.org/bl/-/bl-1.2.3.tgz",
      "integrity": "sha512-pvcNpa0UU69UT341rO6AYy4FVAIkUHuZXRIWbq+zHnsVcRzDDjIAhGuuYoi0d//cwIwtt4pkpKycWEfjdV+vww==",
      "requires": {
        "readable-stream": "^2.3.5",
        "safe-buffer": "^5.1.1"
      }
    },
    "bluebird": {
      "version": "3.7.2",
      "resolved": "https://registry.npmjs.org/bluebird/-/bluebird-3.7.2.tgz",
      "integrity": "sha512-XpNj6GDQzdfW+r2Wnn7xiSAd7TM3jzkxGXBGTtWKuSXv1xUV+azxAm8jdWZN06QTQk+2N2XB9jRDkvbmQmcRtg=="
    },
    "body-parser": {
      "version": "1.20.1",
      "resolved": "https://registry.npmjs.org/body-parser/-/body-parser-1.20.1.tgz",
      "integrity": "sha512-jWi7abTbYwajOytWCQc37VulmWiRae5RyTpaCyDcS5/lMdtwSz5lOpDE67srw/HYe35f1z3fDQw+3txg7gNtWw==",
      "requires": {
        "bytes": "3.1.2",
        "content-type": "~1.0.4",
        "debug": "2.6.9",
        "depd": "2.0.0",
        "destroy": "1.2.0",
        "http-errors": "2.0.0",
        "iconv-lite": "0.4.24",
        "on-finished": "2.4.1",
        "qs": "6.11.0",
        "raw-body": "2.5.1",
        "type-is": "~1.6.18",
        "unpipe": "1.0.0"
      }
    },
    "brace-expansion": {
      "version": "1.1.11",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz",
      "integrity": "sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==",
      "requires": {
        "balanced-match": "^1.0.0",
        "concat-map": "0.0.1"
      }
    },
    "buffer": {
      "version": "5.7.1",
      "resolved": "https://registry.npmjs.org/buffer/-/buffer-5.7.1.tgz",
      "integrity": "sha512-EHcyIPBQ4BSGlvjB16k5KgAJ27CIsHY/2JBmCRReo48y9rQ3MaUzWX3KVlBa4U7MyX02HdVj0K7C3WaB3ju7FQ==",
      "requires": {
        "base64-js": "^1.3.1",
        "ieee754": "^1.1.13"
      }
    },
    "buffer-crc32": {
      "version": "0.2.13",
      "resolved": "https://registry.npmjs.org/buffer-crc32/-/buffer-crc32-0.2.13.tgz",
      "integrity": "sha512-VO9Ht/+p3SN7SKWqcrgEzjGbRSJYTx+Q1pTQC0wrWqHx0vpJraQ6GtHx8tvcg1rlK1byhU5gccxgOgj7B0TDkQ=="
    },
    "bytes": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/bytes/-/bytes-3.1.2.tgz",
      "integrity": "sha512-/Nf7TyzTx6S3yRJObOAV7956r8cr2+Oj8AC5dt8wSP3BQAoeX58NoHyCU8P8zGkNXStjTSi6fzO6F0pBdcYbEg=="
    },
    "call-bind": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/call-bind/-/call-bind-1.0.2.tgz",
      "integrity": "sha512-7O+FbCihrB5WGbFYesctwmTKae6rOiIzmz1icreWJ+0aA7LJfuqhEso2T9ncpcFtzMQtzXf2QGGueWJGTYsqrA==",
      "requires": {
        "function-bind": "^1.1.1",
        "get-intrinsic": "^1.0.2"
      }
    },
    "callsites": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/callsites/-/callsites-3.1.0.tgz",
      "integrity": "sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ=="
    },
    "caseless": {
      "version": "0.12.0",
      "resolved": "https://registry.npmjs.org/caseless/-/caseless-0.12.0.tgz",
      "integrity": "sha512-4tYFyifaFfGacoiObjJegolkwSU4xQNGbVgUiNYVUxbQ2x2lUsFvY4hVgVzGiIe6WLOPqycWXA40l+PWsxthUw=="
    },
    "chalk": {
      "version": "2.4.2",
      "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz",
      "integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==",
      "requires": {
        "ansi-styles": "^3.2.1",
        "escape-string-regexp": "^1.0.5",
        "supports-color": "^5.3.0"
      }
    },
    "charenc": {
      "version": "0.0.2",
      "resolved": "https://registry.npmjs.org/charenc/-/charenc-0.0.2.tgz",
      "integrity": "sha512-yrLQ/yVUFXkzg7EDQsPieE/53+0RlaWTs+wBrvW36cyilJ2SaDWfl4Yj7MtLTXleV9uEKefbAGUPv2/iWSooRA=="
    },
    "chownr": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/chownr/-/chownr-1.1.4.tgz",
      "integrity": "sha512-jJ0bqzaylmJtVnNgzTeSOs8DPavpbYgEr/b0YL8/2GO3xJEhInFmhKMUnEJQjZumK7KXGFhUy89PrsJWlakBVg=="
    },
    "color-convert": {
      "version": "1.9.3",
      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz",
      "integrity": "sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==",
      "requires": {
        "color-name": "1.1.3"
      }
    },
    "color-name": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz",
      "integrity": "sha512-72fSenhMw2HZMTVHeCA9KCmpEIbzWiQsjN+BHcBbS9vr1mtt+vJjPdksIBNUmKAW8TFUDPJK5SUU3QhE9NEXDw=="
    },
    "combined-stream": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/combined-stream/-/combined-stream-1.0.8.tgz",
      "integrity": "sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8lDdnvmMOe/+5cdoEdg==",
      "requires": {
        "delayed-stream": "~1.0.0"
      }
    },
    "concat-map": {
      "version": "0.0.1",
      "resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
      "integrity": "sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg=="
    },
    "content-disposition": {
      "version": "0.5.4",
      "resolved": "https://registry.npmjs.org/content-disposition/-/content-disposition-0.5.4.tgz",
      "integrity": "sha512-FveZTNuGw04cxlAiWbzi6zTAL/lhehaWbTtgluJh4/E95DqMwTmha3KZN1aAWA8cFIhHzMZUvLevkw5Rqk+tSQ==",
      "requires": {
        "safe-buffer": "5.2.1"
      }
    },
    "content-type": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/content-type/-/content-type-1.0.4.tgz",
      "integrity": "sha512-hIP3EEPs8tB9AT1L+NUqtwOAps4mk2Zob89MWXMHjHWg9milF/j4osnnQLXBCBFBk/tvIG/tUc9mOUJiPBhPXA=="
    },
    "cookie": {
      "version": "0.5.0",
      "resolved": "https://registry.npmjs.org/cookie/-/cookie-0.5.0.tgz",
      "integrity": "sha512-YZ3GUyn/o8gfKJlnlX7g7xq4gyO6OSuhGPKaaGssGB2qgDUS0gPgtTvoyZLTt9Ab6dC4hfc9dV5arkvc/OCmrw=="
    },
    "cookie-signature": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/cookie-signature/-/cookie-signature-1.0.6.tgz",
      "integrity": "sha512-QADzlaHc8icV8I7vbaJXJwod9HWYp8uCqf1xa4OfNu1T7JVxQIrUgOWtHdNDtPiywmFbiS12VjotIXLrKM3orQ=="
    },
    "core-util-is": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/core-util-is/-/core-util-is-1.0.3.tgz",
      "integrity": "sha512-ZQBvi1DcpJ4GDqanjucZ2Hj3wEO5pZDS89BWbkcrvdxksJorwUDDZamX9ldFkp9aw2lmBDLgkObEA4DWNJ9FYQ=="
    },
    "cosmiconfig": {
      "version": "8.0.0",
      "resolved": "https://registry.npmjs.org/cosmiconfig/-/cosmiconfig-8.0.0.tgz",
      "integrity": "sha512-da1EafcpH6b/TD8vDRaWV7xFINlHlF6zKsGwS1TsuVJTZRkquaS5HTMq7uq6h31619QjbsYl21gVDOm32KM1vQ==",
      "requires": {
        "import-fresh": "^3.2.1",
        "js-yaml": "^4.1.0",
        "parse-json": "^5.0.0",
        "path-type": "^4.0.0"
      }
    },
    "cron": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/cron/-/cron-2.1.0.tgz",
      "integrity": "sha512-Hq7u3P8y7UWYvsZbSKHHJDVG0VO9O7tp2qljxzTScelcTODBfCme8AIhnZsFwmQ9NchZ3hr2uNr+s3DSms7q6w==",
      "requires": {
        "luxon": "^1.23.x"
      }
    },
    "cross-fetch": {
      "version": "3.1.5",
      "resolved": "https://registry.npmjs.org/cross-fetch/-/cross-fetch-3.1.5.tgz",
      "integrity": "sha512-lvb1SBsI0Z7GDwmuid+mU3kWVBwTVUbe7S0H52yaaAdQOXq2YktTCZdlAcNKFzE6QtRz0snpw9bNiPeOIkkQvw==",
      "requires": {
        "node-fetch": "2.6.7"
      }
    },
    "crypt": {
      "version": "0.0.2",
      "resolved": "https://registry.npmjs.org/crypt/-/crypt-0.0.2.tgz",
      "integrity": "sha512-mCxBlsHFYh9C+HVpiEacem8FEBnMXgU9gy4zmNC+SXAZNB/1idgp/aulFJ4FgCi7GPEVbfyng092GqL2k2rmow=="
    },
    "crypto-js": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/crypto-js/-/crypto-js-4.1.1.tgz",
      "integrity": "sha512-o2JlM7ydqd3Qk9CA0L4NL6mTzU2sdx96a+oOfPu8Mkl/PK51vSyoi8/rQ8NknZtk44vq15lmhAj9CIAGwgeWKw=="
    },
    "csvtojson": {
      "version": "2.0.10",
      "resolved": "https://registry.npmjs.org/csvtojson/-/csvtojson-2.0.10.tgz",
      "integrity": "sha512-lUWFxGKyhraKCW8Qghz6Z0f2l/PqB1W3AO0HKJzGIQ5JRSlR651ekJDiGJbBT4sRNNv5ddnSGVEnsxP9XRCVpQ==",
      "requires": {
        "bluebird": "^3.5.1",
        "lodash": "^4.17.3",
        "strip-bom": "^2.0.0"
      }
    },
    "dashdash": {
      "version": "1.14.1",
      "resolved": "https://registry.npmjs.org/dashdash/-/dashdash-1.14.1.tgz",
      "integrity": "sha512-jRFi8UDGo6j+odZiEpjazZaWqEal3w/basFjQHQEwVtZJGDpxbH1MeYluwCS8Xq5wmLJooDlMgvVarmWfGM44g==",
      "requires": {
        "assert-plus": "^1.0.0"
      }
    },
    "debug": {
      "version": "2.6.9",
      "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
      "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
      "requires": {
        "ms": "2.0.0"
      }
    },
    "define-properties": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/define-properties/-/define-properties-1.1.4.tgz",
      "integrity": "sha512-uckOqKcfaVvtBdsVkdPv3XjveQJsNQqmhXgRi8uhvWWuPYZCNlzT8qAyblUgNoXdHdjMTzAqeGjAoli8f+bzPA==",
      "requires": {
        "has-property-descriptors": "^1.0.0",
        "object-keys": "^1.1.1"
      }
    },
    "delayed-stream": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/delayed-stream/-/delayed-stream-1.0.0.tgz",
      "integrity": "sha512-ZySD7Nf91aLB0RxL4KGrKHBXl7Eds1DAmEdcoVawXnLD7SDhpNgtuII2aAkg7a7QS41jxPSZ17p4VdGnMHk3MQ=="
    },
    "denque": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/denque/-/denque-2.1.0.tgz",
      "integrity": "sha512-HVQE3AAb/pxF8fQAoiqpvg9i3evqug3hoiwakOyZAwJm+6vZehbkYXZ0l4JxS+I3QxM97v5aaRNhj8v5oBhekw=="
    },
    "depd": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/depd/-/depd-2.0.0.tgz",
      "integrity": "sha512-g7nH6P6dyDioJogAAGprGpCtVImJhpPk/roCzdb3fIh61/s/nPsfR6onyMwkCAR/OlC3yBC0lESvUoQEAssIrw=="
    },
    "destroy": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/destroy/-/destroy-1.2.0.tgz",
      "integrity": "sha512-2sJGJTaXIIaR1w4iJSNoN0hnMY7Gpc/n8D4qSCJw8QqFWXf7cuAgnEHxBpweaVcPevC2l3KpjYCx3NypQQgaJg=="
    },
    "devtools-protocol": {
      "version": "0.0.1068969",
      "resolved": "https://registry.npmjs.org/devtools-protocol/-/devtools-protocol-0.0.1068969.tgz",
      "integrity": "sha512-ATFTrPbY1dKYhPPvpjtwWKSK2mIwGmRwX54UASn9THEuIZCe2n9k3vVuMmt6jWeL+e5QaaguEv/pMyR+JQB7VQ=="
    },
    "dotenv": {
      "version": "16.0.3",
      "resolved": "https://registry.npmjs.org/dotenv/-/dotenv-16.0.3.tgz",
      "integrity": "sha512-7GO6HghkA5fYG9TYnNxi14/7K9f5occMlp3zXAuSxn7CKCxt9xbNWG7yF8hTCSUchlfWSe3uLmlPfigevRItzQ=="
    },
    "ecc-jsbn": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/ecc-jsbn/-/ecc-jsbn-0.1.2.tgz",
      "integrity": "sha512-eh9O+hwRHNbG4BLTjEl3nw044CkGm5X6LoaCf7LPp7UU8Qrt47JYNi6nPX8xjW97TKGKm1ouctg0QSpZe9qrnw==",
      "requires": {
        "jsbn": "~0.1.0",
        "safer-buffer": "^2.1.0"
      }
    },
    "ee-first": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/ee-first/-/ee-first-1.1.1.tgz",
      "integrity": "sha512-WMwm9LhRUo+WUaRN+vRuETqG89IgZphVSNkdFgeb6sS/E4OrDIN7t48CAewSHXc6C8lefD8KKfr5vY61brQlow=="
    },
    "encodeurl": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/encodeurl/-/encodeurl-1.0.2.tgz",
      "integrity": "sha512-TPJXq8JqFaVYm2CWmPvnP2Iyo4ZSM7/QKcSmuMLDObfpH5fi7RUGmd/rTDf+rut/saiDiQEeVTNgAmJEdAOx0w=="
    },
    "end-of-stream": {
      "version": "1.4.4",
      "resolved": "https://registry.npmjs.org/end-of-stream/-/end-of-stream-1.4.4.tgz",
      "integrity": "sha512-+uw1inIHVPQoaVuHzRyXd21icM+cnt4CzD5rW+NC1wjOUSTOs+Te7FOv7AhN7vS9x/oIyhLP5PR1H+phQAHu5Q==",
      "requires": {
        "once": "^1.4.0"
      }
    },
    "error-ex": {
      "version": "1.3.2",
      "resolved": "https://registry.npmjs.org/error-ex/-/error-ex-1.3.2.tgz",
      "integrity": "sha512-7dFHNmqeFSEt2ZBsCriorKnn3Z2pj+fd9kmI6QoWw4//DL+icEBfc0U7qJCisqrTsKTjw4fNFy2pW9OqStD84g==",
      "requires": {
        "is-arrayish": "^0.2.1"
      }
    },
    "es-abstract": {
      "version": "1.20.4",
      "resolved": "https://registry.npmjs.org/es-abstract/-/es-abstract-1.20.4.tgz",
      "integrity": "sha512-0UtvRN79eMe2L+UNEF1BwRe364sj/DXhQ/k5FmivgoSdpM90b8Jc0mDzKMGo7QS0BVbOP/bTwBKNnDc9rNzaPA==",
      "requires": {
        "call-bind": "^1.0.2",
        "es-to-primitive": "^1.2.1",
        "function-bind": "^1.1.1",
        "function.prototype.name": "^1.1.5",
        "get-intrinsic": "^1.1.3",
        "get-symbol-description": "^1.0.0",
        "has": "^1.0.3",
        "has-property-descriptors": "^1.0.0",
        "has-symbols": "^1.0.3",
        "internal-slot": "^1.0.3",
        "is-callable": "^1.2.7",
        "is-negative-zero": "^2.0.2",
        "is-regex": "^1.1.4",
        "is-shared-array-buffer": "^1.0.2",
        "is-string": "^1.0.7",
        "is-weakref": "^1.0.2",
        "object-inspect": "^1.12.2",
        "object-keys": "^1.1.1",
        "object.assign": "^4.1.4",
        "regexp.prototype.flags": "^1.4.3",
        "safe-regex-test": "^1.0.0",
        "string.prototype.trimend": "^1.0.5",
        "string.prototype.trimstart": "^1.0.5",
        "unbox-primitive": "^1.0.2"
      }
    },
    "es-shim-unscopables": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/es-shim-unscopables/-/es-shim-unscopables-1.0.0.tgz",
      "integrity": "sha512-Jm6GPcCdC30eMLbZ2x8z2WuRwAws3zTBBKuusffYVUrNj/GVSUAZ+xKMaUpfNDR5IbyNA5LJbaecoUVbmUcB1w==",
      "requires": {
        "has": "^1.0.3"
      }
    },
    "es-to-primitive": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/es-to-primitive/-/es-to-primitive-1.2.1.tgz",
      "integrity": "sha512-QCOllgZJtaUo9miYBcLChTUaHNjJF3PYs1VidD7AwiEj1kYxKeQTctLAezAOH5ZKRH0g2IgPn6KwB4IT8iRpvA==",
      "requires": {
        "is-callable": "^1.1.4",
        "is-date-object": "^1.0.1",
        "is-symbol": "^1.0.2"
      }
    },
    "escape-html": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/escape-html/-/escape-html-1.0.3.tgz",
      "integrity": "sha512-NiSupZ4OeuGwr68lGIeym/ksIZMJodUGOSCZ/FSnTxcrekbvqrgdUxlJOMpijaKZVjAJrWrGs/6Jy8OMuyj9ow=="
    },
    "escape-string-regexp": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz",
      "integrity": "sha512-vbRorB5FUQWvla16U8R/qgaFIya2qGzwDrNmCZuYKrbdSUMG6I1ZCGQRefkRVhuOkIGVne7BQ35DSfo1qvJqFg=="
    },
    "etag": {
      "version": "1.8.1",
      "resolved": "https://registry.npmjs.org/etag/-/etag-1.8.1.tgz",
      "integrity": "sha512-aIL5Fx7mawVa300al2BnEE4iNvo1qETxLrPI/o05L7z6go7fCw1J6EQmbK4FmJ2AS7kgVF/KEZWufBfdClMcPg=="
    },
    "eventemitter3": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/eventemitter3/-/eventemitter3-3.1.2.tgz",
      "integrity": "sha512-tvtQIeLVHjDkJYnzf2dgVMxfuSGJeM/7UCG17TT4EumTfNtF+0nebF/4zWOIkCreAbtNqhGEboB6BWrwqNaw4Q=="
    },
    "express": {
      "version": "4.18.2",
      "resolved": "https://registry.npmjs.org/express/-/express-4.18.2.tgz",
      "integrity": "sha512-5/PsL6iGPdfQ/lKM1UuielYgv3BUoJfz1aUwU9vHZ+J7gyvwdQXFEBIEIaxeGf0GIcreATNyBExtalisDbuMqQ==",
      "requires": {
        "accepts": "~1.3.8",
        "array-flatten": "1.1.1",
        "body-parser": "1.20.1",
        "content-disposition": "0.5.4",
        "content-type": "~1.0.4",
        "cookie": "0.5.0",
        "cookie-signature": "1.0.6",
        "debug": "2.6.9",
        "depd": "2.0.0",
        "encodeurl": "~1.0.2",
        "escape-html": "~1.0.3",
        "etag": "~1.8.1",
        "finalhandler": "1.2.0",
        "fresh": "0.5.2",
        "http-errors": "2.0.0",
        "merge-descriptors": "1.0.1",
        "methods": "~1.1.2",
        "on-finished": "2.4.1",
        "parseurl": "~1.3.3",
        "path-to-regexp": "0.1.7",
        "proxy-addr": "~2.0.7",
        "qs": "6.11.0",
        "range-parser": "~1.2.1",
        "safe-buffer": "5.2.1",
        "send": "0.18.0",
        "serve-static": "1.15.0",
        "setprototypeof": "1.2.0",
        "statuses": "2.0.1",
        "type-is": "~1.6.18",
        "utils-merge": "1.0.1",
        "vary": "~1.1.2"
      }
    },
    "extend": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/extend/-/extend-3.0.2.tgz",
      "integrity": "sha512-fjquC59cD7CyW6urNXK0FBufkZcoiGG80wTuPujX590cB5Ttln20E2UB4S/WARVqhXffZl2LNgS+gQdPIIim/g=="
    },
    "extract-zip": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/extract-zip/-/extract-zip-2.0.1.tgz",
      "integrity": "sha512-GDhU9ntwuKyGXdZBUgTIe+vXnWj0fppUEtMDL0+idd5Sta8TGpHssn/eusA9mrPr9qNDym6SxAYZjNvCn/9RBg==",
      "requires": {
        "@types/yauzl": "^2.9.1",
        "debug": "^4.1.1",
        "get-stream": "^5.1.0",
        "yauzl": "^2.10.0"
      },
      "dependencies": {
        "debug": {
          "version": "4.3.4",
          "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.4.tgz",
          "integrity": "sha512-PRWFHuSU3eDtQJPvnNY7Jcket1j0t5OuOsFzPPzsekD52Zl8qUfFIPEiswXqIvHWGVHOgX+7G/vCNNhehwxfkQ==",
          "requires": {
            "ms": "2.1.2"
          }
        },
        "ms": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
          "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w=="
        }
      }
    },
    "extsprintf": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/extsprintf/-/extsprintf-1.3.0.tgz",
      "integrity": "sha512-11Ndz7Nv+mvAC1j0ktTa7fAb0vLyGGX+rMHNBYQviQDGU0Hw7lhctJANqbPhu9nV9/izT/IntTgZ7Im/9LJs9g=="
    },
    "fast-deep-equal": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.3.tgz",
      "integrity": "sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q=="
    },
    "fast-json-stable-stringify": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz",
      "integrity": "sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw=="
    },
    "fast-xml-parser": {
      "version": "4.0.12",
      "resolved": "https://registry.npmjs.org/fast-xml-parser/-/fast-xml-parser-4.0.12.tgz",
      "integrity": "sha512-/Nmo3823Rfx7UTJosQNz6hBVbszfv1Unb7A4iNJZhvCGCgtIHv/uODmrYIH8vc05+XKZ4hNIOv6SlBejvJgATw==",
      "requires": {
        "strnum": "^1.0.5"
      }
    },
    "fd-slicer": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/fd-slicer/-/fd-slicer-1.1.0.tgz",
      "integrity": "sha512-cE1qsB/VwyQozZ+q1dGxR8LBYNZeofhEdUNGSMbQD3Gw2lAzX9Zb3uIU6Ebc/Fmyjo9AWWfnn0AUCHqtevs/8g==",
      "requires": {
        "pend": "~1.2.0"
      }
    },
    "file-type": {
      "version": "3.9.0",
      "resolved": "https://registry.npmjs.org/file-type/-/file-type-3.9.0.tgz",
      "integrity": "sha512-RLoqTXE8/vPmMuTI88DAzhMYC99I8BWv7zYP4A1puo5HIjEJ5EX48ighy4ZyKMG9EDXxBgW6e++cn7d1xuFghA=="
    },
    "finalhandler": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/finalhandler/-/finalhandler-1.2.0.tgz",
      "integrity": "sha512-5uXcUVftlQMFnWC9qu/svkWv3GTd2PfUhK/3PLkYNAe7FbqJMt3515HaxE6eRL74GdsriiwujiawdaB1BpEISg==",
      "requires": {
        "debug": "2.6.9",
        "encodeurl": "~1.0.2",
        "escape-html": "~1.0.3",
        "on-finished": "2.4.1",
        "parseurl": "~1.3.3",
        "statuses": "2.0.1",
        "unpipe": "~1.0.0"
      }
    },
    "for-each": {
      "version": "0.3.3",
      "resolved": "https://registry.npmjs.org/for-each/-/for-each-0.3.3.tgz",
      "integrity": "sha512-jqYfLp7mo9vIyQf8ykW2v7A+2N4QjeCeI5+Dz9XraiO1ign81wjiH7Fb9vSOWvQfNtmSa4H2RoQTrrXivdUZmw==",
      "requires": {
        "is-callable": "^1.1.3"
      }
    },
    "forever-agent": {
      "version": "0.6.1",
      "resolved": "https://registry.npmjs.org/forever-agent/-/forever-agent-0.6.1.tgz",
      "integrity": "sha512-j0KLYPhm6zeac4lz3oJ3o65qvgQCcPubiyotZrXqEaG4hNagNYO8qdlUrX5vwqv9ohqeT/Z3j6+yW067yWWdUw=="
    },
    "form-data": {
      "version": "2.3.3",
      "resolved": "https://registry.npmjs.org/form-data/-/form-data-2.3.3.tgz",
      "integrity": "sha512-1lLKB2Mu3aGP1Q/2eCOx0fNbRMe7XdwktwOruhfqqd0rIJWwN4Dh+E3hrPSlDCXnSR7UtZ1N38rVXm+6+MEhJQ==",
      "requires": {
        "asynckit": "^0.4.0",
        "combined-stream": "^1.0.6",
        "mime-types": "^2.1.12"
      }
    },
    "forwarded": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/forwarded/-/forwarded-0.2.0.tgz",
      "integrity": "sha512-buRG0fpBtRHSTCOASe6hD258tEubFoRLb4ZNA6NxMVHNw2gOcwHo9wyablzMzOA5z9xA9L1KNjk/Nt6MT9aYow=="
    },
    "fresh": {
      "version": "0.5.2",
      "resolved": "https://registry.npmjs.org/fresh/-/fresh-0.5.2.tgz",
      "integrity": "sha512-zJ2mQYM18rEFOudeV4GShTGIQ7RbzA7ozbU9I/XBpm7kqgMywgmylMwXHxZJmkVoYkna9d2pVXVXPdYTP9ej8Q=="
    },
    "fs-constants": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/fs-constants/-/fs-constants-1.0.0.tgz",
      "integrity": "sha512-y6OAwoSIf7FyjMIv94u+b5rdheZEjzR63GTyZJm5qh4Bi+2YgwLCcI/fPFZkL5PSixOt6ZNKm+w+Hfp/Bciwow=="
    },
    "fs.realpath": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz",
      "integrity": "sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw=="
    },
    "function-bind": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.1.tgz",
      "integrity": "sha512-yIovAzMX49sF8Yl58fSCWJ5svSLuaibPxXQJFLmBObTuCr0Mf1KiPopGM9NiFjiYBCbfaa2Fh6breQ6ANVTI0A=="
    },
    "function.prototype.name": {
      "version": "1.1.5",
      "resolved": "https://registry.npmjs.org/function.prototype.name/-/function.prototype.name-1.1.5.tgz",
      "integrity": "sha512-uN7m/BzVKQnCUF/iW8jYea67v++2u7m5UgENbHRtdDVclOUP+FMPlCNdmk0h/ysGyo2tavMJEDqJAkJdRa1vMA==",
      "requires": {
        "call-bind": "^1.0.2",
        "define-properties": "^1.1.3",
        "es-abstract": "^1.19.0",
        "functions-have-names": "^1.2.2"
      }
    },
    "functions-have-names": {
      "version": "1.2.3",
      "resolved": "https://registry.npmjs.org/functions-have-names/-/functions-have-names-1.2.3.tgz",
      "integrity": "sha512-xckBUXyTIqT97tq2x2AMb+g163b5JFysYk0x4qxNFwbfQkmNZoiRHb6sPzI9/QV33WeuvVYBUIiD4NzNIyqaRQ=="
    },
    "generate-function": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/generate-function/-/generate-function-2.3.1.tgz",
      "integrity": "sha512-eeB5GfMNeevm/GRYq20ShmsaGcmI81kIX2K9XQx5miC8KdHaC6Jm0qQ8ZNeGOi7wYB8OsdxKs+Y2oVuTFuVwKQ==",
      "requires": {
        "is-property": "^1.0.2"
      }
    },
    "get-intrinsic": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.1.3.tgz",
      "integrity": "sha512-QJVz1Tj7MS099PevUG5jvnt9tSkXN8K14dxQlikJuPt4uD9hHAHjLyLBiLR5zELelBdD9QNRAXZzsJx0WaDL9A==",
      "requires": {
        "function-bind": "^1.1.1",
        "has": "^1.0.3",
        "has-symbols": "^1.0.3"
      }
    },
    "get-stream": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/get-stream/-/get-stream-5.2.0.tgz",
      "integrity": "sha512-nBF+F1rAZVCu/p7rjzgA+Yb4lfYXrpl7a6VmJrU8wF9I1CKvP/QwPNZHnOlwbTkY6dvtFIzFMSyQXbLoTQPRpA==",
      "requires": {
        "pump": "^3.0.0"
      },
      "dependencies": {
        "pump": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/pump/-/pump-3.0.0.tgz",
          "integrity": "sha512-LwZy+p3SFs1Pytd/jYct4wpv49HiYCqd9Rlc5ZVdk0V+8Yzv6jR5Blk3TRmPL1ft69TxP0IMZGJ+WPFU2BFhww==",
          "requires": {
            "end-of-stream": "^1.1.0",
            "once": "^1.3.1"
          }
        }
      }
    },
    "get-symbol-description": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/get-symbol-description/-/get-symbol-description-1.0.0.tgz",
      "integrity": "sha512-2EmdH1YvIQiZpltCNgkuiUnyukzxM/R6NDJX31Ke3BG1Nq5b0S2PhX59UKi9vZpPDQVdqn+1IcaAwnzTT5vCjw==",
      "requires": {
        "call-bind": "^1.0.2",
        "get-intrinsic": "^1.1.1"
      }
    },
    "getpass": {
      "version": "0.1.7",
      "resolved": "https://registry.npmjs.org/getpass/-/getpass-0.1.7.tgz",
      "integrity": "sha512-0fzj9JxOLfJ+XGLhR8ze3unN0KZCgZwiSSDz168VERjK8Wl8kVSdcu2kspd4s4wtAa1y/qrVRiAA0WclVsu0ng==",
      "requires": {
        "assert-plus": "^1.0.0"
      }
    },
    "glob": {
      "version": "7.2.3",
      "resolved": "https://registry.npmjs.org/glob/-/glob-7.2.3.tgz",
      "integrity": "sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==",
      "requires": {
        "fs.realpath": "^1.0.0",
        "inflight": "^1.0.4",
        "inherits": "2",
        "minimatch": "^3.1.1",
        "once": "^1.3.0",
        "path-is-absolute": "^1.0.0"
      }
    },
    "gopd": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/gopd/-/gopd-1.0.1.tgz",
      "integrity": "sha512-d65bNlIadxvpb/A2abVdlqKqV563juRnZ1Wtk6s1sIR8uNsXR70xqIzVqxVf1eTqDunwT2MkczEeaezCKTZhwA==",
      "requires": {
        "get-intrinsic": "^1.1.3"
      }
    },
    "har-schema": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/har-schema/-/har-schema-2.0.0.tgz",
      "integrity": "sha512-Oqluz6zhGX8cyRaTQlFMPw80bSJVG2x/cFb8ZPhUILGgHka9SsokCCOQgpveePerqidZOrT14ipqfJb7ILcW5Q=="
    },
    "har-validator": {
      "version": "5.1.5",
      "resolved": "https://registry.npmjs.org/har-validator/-/har-validator-5.1.5.tgz",
      "integrity": "sha512-nmT2T0lljbxdQZfspsno9hgrG3Uir6Ks5afism62poxqBM6sDnMEuPmzTq8XN0OEwqKLLdh1jQI3qyE66Nzb3w==",
      "requires": {
        "ajv": "^6.12.3",
        "har-schema": "^2.0.0"
      }
    },
    "has": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/has/-/has-1.0.3.tgz",
      "integrity": "sha512-f2dvO0VU6Oej7RkWJGrehjbzMAjFp5/VKPp5tTpWIV4JHHZK1/BxbFRtf/siA2SWTe09caDmVtYYzWEIbBS4zw==",
      "requires": {
        "function-bind": "^1.1.1"
      }
    },
    "has-bigints": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/has-bigints/-/has-bigints-1.0.2.tgz",
      "integrity": "sha512-tSvCKtBr9lkF0Ex0aQiP9N+OpV4zi2r/Nee5VkRDbaqv35RLYMzbwQfFSZZH0kR+Rd6302UJZ2p/bJCEoR3VoQ=="
    },
    "has-flag": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz",
      "integrity": "sha512-sKJf1+ceQBr4SMkvQnBDNDtf4TXpVhVGateu0t918bl30FnbE2m4vNLX+VWe/dpjlb+HugGYzW7uQXH98HPEYw=="
    },
    "has-property-descriptors": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/has-property-descriptors/-/has-property-descriptors-1.0.0.tgz",
      "integrity": "sha512-62DVLZGoiEBDHQyqG4w9xCuZ7eJEwNmJRWw2VY84Oedb7WFcA27fiEVe8oUQx9hAUJ4ekurquucTGwsyO1XGdQ==",
      "requires": {
        "get-intrinsic": "^1.1.1"
      }
    },
    "has-symbols": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/has-symbols/-/has-symbols-1.0.3.tgz",
      "integrity": "sha512-l3LCuF6MgDNwTDKkdYGEihYjt5pRPbEg46rtlmnSPlUbgmB8LOIrKJbYYFBSbnPaJexMKtiPO8hmeRjRz2Td+A=="
    },
    "has-tostringtag": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/has-tostringtag/-/has-tostringtag-1.0.0.tgz",
      "integrity": "sha512-kFjcSNhnlGV1kyoGk7OXKSawH5JOb/LzUc5w9B02hOTO0dfFRjbHQKvg1d6cf3HbeUmtU9VbbV3qzZ2Teh97WQ==",
      "requires": {
        "has-symbols": "^1.0.2"
      }
    },
    "http-errors": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/http-errors/-/http-errors-2.0.0.tgz",
      "integrity": "sha512-FtwrG/euBzaEjYeRqOgly7G0qviiXoJWnvEH2Z1plBdXgbyjv34pHTSb9zoeHMyDy33+DWy5Wt9Wo+TURtOYSQ==",
      "requires": {
        "depd": "2.0.0",
        "inherits": "2.0.4",
        "setprototypeof": "1.2.0",
        "statuses": "2.0.1",
        "toidentifier": "1.0.1"
      }
    },
    "http-signature": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/http-signature/-/http-signature-1.2.0.tgz",
      "integrity": "sha512-CAbnr6Rz4CYQkLYUtSNXxQPUH2gK8f3iWexVlsnMeD+GjlsQ0Xsy1cOX+mN3dtxYomRy21CiOzU8Uhw6OwncEQ==",
      "requires": {
        "assert-plus": "^1.0.0",
        "jsprim": "^1.2.2",
        "sshpk": "^1.7.0"
      }
    },
    "https-proxy-agent": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/https-proxy-agent/-/https-proxy-agent-5.0.1.tgz",
      "integrity": "sha512-dFcAjpTQFgoLMzC2VwU+C/CbS7uRL0lWmxDITmqm7C+7F0Odmj6s9l6alZc6AELXhrnggM2CeWSXHGOdX2YtwA==",
      "requires": {
        "agent-base": "6",
        "debug": "4"
      },
      "dependencies": {
        "debug": {
          "version": "4.3.4",
          "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.4.tgz",
          "integrity": "sha512-PRWFHuSU3eDtQJPvnNY7Jcket1j0t5OuOsFzPPzsekD52Zl8qUfFIPEiswXqIvHWGVHOgX+7G/vCNNhehwxfkQ==",
          "requires": {
            "ms": "2.1.2"
          }
        },
        "ms": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
          "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w=="
        }
      }
    },
    "iconv-lite": {
      "version": "0.4.24",
      "resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.24.tgz",
      "integrity": "sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==",
      "requires": {
        "safer-buffer": ">= 2.1.2 < 3"
      }
    },
    "ieee754": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/ieee754/-/ieee754-1.2.1.tgz",
      "integrity": "sha512-dcyqhDvX1C46lXZcVqCpK+FtMRQVdIMN6/Df5js2zouUsqG7I6sFxitIC+7KYK29KdXOLHdu9zL4sFnoVQnqaA=="
    },
    "import-fresh": {
      "version": "3.3.0",
      "resolved": "https://registry.npmjs.org/import-fresh/-/import-fresh-3.3.0.tgz",
      "integrity": "sha512-veYYhQa+D1QBKznvhUHxb8faxlrwUnxseDAbAp457E0wLNio2bOSKnjYDhMj+YiAq61xrMGhQk9iXVk5FzgQMw==",
      "requires": {
        "parent-module": "^1.0.0",
        "resolve-from": "^4.0.0"
      }
    },
    "inflight": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz",
      "integrity": "sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==",
      "requires": {
        "once": "^1.3.0",
        "wrappy": "1"
      }
    },
    "inherits": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz",
      "integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ=="
    },
    "internal-slot": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/internal-slot/-/internal-slot-1.0.3.tgz",
      "integrity": "sha512-O0DB1JC/sPyZl7cIo78n5dR7eUSwwpYPiXRhTzNxZVAMUuB8vlnRFyLxdrVToks6XPLVnFfbzaVd5WLjhgg+vA==",
      "requires": {
        "get-intrinsic": "^1.1.0",
        "has": "^1.0.3",
        "side-channel": "^1.0.4"
      }
    },
    "ipaddr.js": {
      "version": "1.9.1",
      "resolved": "https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-1.9.1.tgz",
      "integrity": "sha512-0KI/607xoxSToH7GjN1FfSbLoU0+btTicjsQSWQlh/hZykN8KpmMf7uYwPW3R+akZ6R/w18ZlXSHBYXiYUPO3g=="
    },
    "is-arguments": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/is-arguments/-/is-arguments-1.1.1.tgz",
      "integrity": "sha512-8Q7EARjzEnKpt/PCD7e1cgUS0a6X8u5tdSiMqXhojOdoV9TsMsiO+9VLC5vAmO8N7/GmXn7yjR8qnA6bVAEzfA==",
      "requires": {
        "call-bind": "^1.0.2",
        "has-tostringtag": "^1.0.0"
      }
    },
    "is-arrayish": {
      "version": "0.2.1",
      "resolved": "https://registry.npmjs.org/is-arrayish/-/is-arrayish-0.2.1.tgz",
      "integrity": "sha512-zz06S8t0ozoDXMG+ube26zeCTNXcKIPJZJi8hBrF4idCLms4CG9QtK7qBl1boi5ODzFpjswb5JPmHCbMpjaYzg=="
    },
    "is-bigint": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/is-bigint/-/is-bigint-1.0.4.tgz",
      "integrity": "sha512-zB9CruMamjym81i2JZ3UMn54PKGsQzsJeo6xvN3HJJ4CAsQNB6iRutp2To77OfCNuoxspsIhzaPoO1zyCEhFOg==",
      "requires": {
        "has-bigints": "^1.0.1"
      }
    },
    "is-boolean-object": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/is-boolean-object/-/is-boolean-object-1.1.2.tgz",
      "integrity": "sha512-gDYaKHJmnj4aWxyj6YHyXVpdQawtVLHU5cb+eztPGczf6cjuTdwve5ZIEfgXqH4e57An1D1AKf8CZ3kYrQRqYA==",
      "requires": {
        "call-bind": "^1.0.2",
        "has-tostringtag": "^1.0.0"
      }
    },
    "is-buffer": {
      "version": "1.1.6",
      "resolved": "https://registry.npmjs.org/is-buffer/-/is-buffer-1.1.6.tgz",
      "integrity": "sha512-NcdALwpXkTm5Zvvbk7owOUSvVvBKDgKP5/ewfXEznmQFfs4ZRmanOeKBTjRVjka3QFoN6XJ+9F3USqfHqTaU5w=="
    },
    "is-callable": {
      "version": "1.2.7",
      "resolved": "https://registry.npmjs.org/is-callable/-/is-callable-1.2.7.tgz",
      "integrity": "sha512-1BC0BVFhS/p0qtw6enp8e+8OD0UrK0oFLztSjNzhcKA3WDuJxxAPXzPuPtKkjEY9UUoEWlX/8fgKeu2S8i9JTA=="
    },
    "is-date-object": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/is-date-object/-/is-date-object-1.0.5.tgz",
      "integrity": "sha512-9YQaSxsAiSwcvS33MBk3wTCVnWK+HhF8VZR2jRxehM16QcVOdHqPn4VPHmRK4lSr38n9JriurInLcP90xsYNfQ==",
      "requires": {
        "has-tostringtag": "^1.0.0"
      }
    },
    "is-generator-function": {
      "version": "1.0.10",
      "resolved": "https://registry.npmjs.org/is-generator-function/-/is-generator-function-1.0.10.tgz",
      "integrity": "sha512-jsEjy9l3yiXEQ+PsXdmBwEPcOxaXWLspKdplFUVI9vq1iZgIekeC0L167qeu86czQaxed3q/Uzuw0swL0irL8A==",
      "requires": {
        "has-tostringtag": "^1.0.0"
      }
    },
    "is-negative-zero": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/is-negative-zero/-/is-negative-zero-2.0.2.tgz",
      "integrity": "sha512-dqJvarLawXsFbNDeJW7zAz8ItJ9cd28YufuuFzh0G8pNHjJMnY08Dv7sYX2uF5UpQOwieAeOExEYAWWfu7ZZUA=="
    },
    "is-number-object": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/is-number-object/-/is-number-object-1.0.7.tgz",
      "integrity": "sha512-k1U0IRzLMo7ZlYIfzRu23Oh6MiIFasgpb9X76eqfFZAqwH44UI4KTBvBYIZ1dSL9ZzChTB9ShHfLkR4pdW5krQ==",
      "requires": {
        "has-tostringtag": "^1.0.0"
      }
    },
    "is-property": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/is-property/-/is-property-1.0.2.tgz",
      "integrity": "sha512-Ks/IoX00TtClbGQr4TWXemAnktAQvYB7HzcCxDGqEZU6oCmb2INHuOoKxbtR+HFkmYWBKv/dOZtGRiAjDhj92g=="
    },
    "is-regex": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/is-regex/-/is-regex-1.1.4.tgz",
      "integrity": "sha512-kvRdxDsxZjhzUX07ZnLydzS1TU/TJlTUHHY4YLL87e37oUA49DfkLqgy+VjFocowy29cKvcSiu+kIv728jTTVg==",
      "requires": {
        "call-bind": "^1.0.2",
        "has-tostringtag": "^1.0.0"
      }
    },
    "is-shared-array-buffer": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/is-shared-array-buffer/-/is-shared-array-buffer-1.0.2.tgz",
      "integrity": "sha512-sqN2UDu1/0y6uvXyStCOzyhAjCSlHceFoMKJW8W9EU9cvic/QdsZ0kEU93HEy3IUEFZIiH/3w+AH/UQbPHNdhA==",
      "requires": {
        "call-bind": "^1.0.2"
      }
    },
    "is-string": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/is-string/-/is-string-1.0.7.tgz",
      "integrity": "sha512-tE2UXzivje6ofPW7l23cjDOMa09gb7xlAqG6jG5ej6uPV32TlWP3NKPigtaGeHNu9fohccRYvIiZMfOOnOYUtg==",
      "requires": {
        "has-tostringtag": "^1.0.0"
      }
    },
    "is-symbol": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/is-symbol/-/is-symbol-1.0.4.tgz",
      "integrity": "sha512-C/CPBqKWnvdcxqIARxyOh4v1UUEOCHpgDa0WYgpKDFMszcrPcffg5uhwSgPCLD2WWxmq6isisz87tzT01tuGhg==",
      "requires": {
        "has-symbols": "^1.0.2"
      }
    },
    "is-typed-array": {
      "version": "1.1.10",
      "resolved": "https://registry.npmjs.org/is-typed-array/-/is-typed-array-1.1.10.tgz",
      "integrity": "sha512-PJqgEHiWZvMpaFZ3uTc8kHPM4+4ADTlDniuQL7cU/UDA0Ql7F70yGfHph3cLNe+c9toaigv+DFzTJKhc2CtO6A==",
      "requires": {
        "available-typed-arrays": "^1.0.5",
        "call-bind": "^1.0.2",
        "for-each": "^0.3.3",
        "gopd": "^1.0.1",
        "has-tostringtag": "^1.0.0"
      }
    },
    "is-typedarray": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/is-typedarray/-/is-typedarray-1.0.0.tgz",
      "integrity": "sha512-cyA56iCMHAh5CdzjJIa4aohJyeO1YbwLi3Jc35MmRU6poroFjIGZzUzupGiRPOjgHg9TLu43xbpwXk523fMxKA=="
    },
    "is-utf8": {
      "version": "0.2.1",
      "resolved": "https://registry.npmjs.org/is-utf8/-/is-utf8-0.2.1.tgz",
      "integrity": "sha512-rMYPYvCzsXywIsldgLaSoPlw5PfoB/ssr7hY4pLfcodrA5M/eArza1a9VmTiNIBNMjOGr1Ow9mTyU2o69U6U9Q=="
    },
    "is-weakref": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/is-weakref/-/is-weakref-1.0.2.tgz",
      "integrity": "sha512-qctsuLZmIQ0+vSSMfoVvyFe2+GSEvnmZ2ezTup1SBse9+twCCeial6EEi3Nc2KFcf6+qz2FBPnjXsk8xhKSaPQ==",
      "requires": {
        "call-bind": "^1.0.2"
      }
    },
    "isarray": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
      "integrity": "sha512-VLghIWNM6ELQzo7zwmcg0NmTVyWKYjvIeM83yjp0wRDTmUnrM678fQbcKBo6n2CJEF0szoG//ytg+TKla89ALQ=="
    },
    "isstream": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/isstream/-/isstream-0.1.2.tgz",
      "integrity": "sha512-Yljz7ffyPbrLpLngrMtZ7NduUgVvi6wG9RJ9IUcyCd59YQ911PBJphODUcbOVbqYfxe1wuYf/LJ8PauMRwsM/g=="
    },
    "js-tokens": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz",
      "integrity": "sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ=="
    },
    "js-yaml": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/js-yaml/-/js-yaml-4.1.0.tgz",
      "integrity": "sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==",
      "requires": {
        "argparse": "^2.0.1"
      }
    },
    "jsbn": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/jsbn/-/jsbn-0.1.1.tgz",
      "integrity": "sha512-UVU9dibq2JcFWxQPA6KCqj5O42VOmAY3zQUfEKxU0KpTGXwNoCjkX1e13eHNvw/xPynt6pU0rZ1htjWTNTSXsg=="
    },
    "json-parse-even-better-errors": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/json-parse-even-better-errors/-/json-parse-even-better-errors-2.3.1.tgz",
      "integrity": "sha512-xyFwyhro/JEof6Ghe2iz2NcXoj2sloNsWr/XsERDK/oiPCfaNhl5ONfp+jQdAZRQQ0IJWNzH9zIZF7li91kh2w=="
    },
    "json-schema": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/json-schema/-/json-schema-0.4.0.tgz",
      "integrity": "sha512-es94M3nTIfsEPisRafak+HDLfHXnKBhV3vU5eqPcS3flIWqcxJWgXHXiey3YrpaNsanY5ei1VoYEbOzijuq9BA=="
    },
    "json-schema-traverse": {
      "version": "0.4.1",
      "resolved": "https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz",
      "integrity": "sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg=="
    },
    "json-stringify-safe": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/json-stringify-safe/-/json-stringify-safe-5.0.1.tgz",
      "integrity": "sha512-ZClg6AaYvamvYEE82d3Iyd3vSSIjQ+odgjaTzRuO3s7toCdFKczob2i0zCh7JE8kWn17yvAWhUVxvqGwUalsRA=="
    },
    "jsprim": {
      "version": "1.4.2",
      "resolved": "https://registry.npmjs.org/jsprim/-/jsprim-1.4.2.tgz",
      "integrity": "sha512-P2bSOMAc/ciLz6DzgjVlGJP9+BrJWu5UDGK70C2iweC5QBIeFf0ZXRvGjEj2uYgrY2MkAAhsSWHDWlFtEroZWw==",
      "requires": {
        "assert-plus": "1.0.0",
        "extsprintf": "1.3.0",
        "json-schema": "0.4.0",
        "verror": "1.10.0"
      }
    },
    "lines-and-columns": {
      "version": "1.2.4",
      "resolved": "https://registry.npmjs.org/lines-and-columns/-/lines-and-columns-1.2.4.tgz",
      "integrity": "sha512-7ylylesZQ/PV29jhEDl3Ufjo6ZX7gCqJr5F7PKrqc93v7fzSymt1BpwEU8nAUXs8qzzvqhbjhK5QZg6Mt/HkBg=="
    },
    "lodash": {
      "version": "4.17.21",
      "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.21.tgz",
      "integrity": "sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg=="
    },
    "long": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/long/-/long-4.0.0.tgz",
      "integrity": "sha512-XsP+KhQif4bjX1kbuSiySJFNAehNxgLb6hPRGJ9QsUr8ajHkuXGdrHmFUTUUXhDwVX2R5bY4JNZEwbUiMhV+MA=="
    },
    "lru-cache": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-6.0.0.tgz",
      "integrity": "sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA==",
      "requires": {
        "yallist": "^4.0.0"
      }
    },
    "luxon": {
      "version": "1.28.0",
      "resolved": "https://registry.npmjs.org/luxon/-/luxon-1.28.0.tgz",
      "integrity": "sha512-TfTiyvZhwBYM/7QdAVDh+7dBTBA29v4ik0Ce9zda3Mnf8on1S5KJI8P2jKFZ8+5C0jhmr0KwJEO/Wdpm0VeWJQ=="
    },
    "md5": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/md5/-/md5-2.3.0.tgz",
      "integrity": "sha512-T1GITYmFaKuO91vxyoQMFETst+O71VUPEU3ze5GNzDm0OWdP8v1ziTaAEPUr/3kLsY3Sftgz242A1SetQiDL7g==",
      "requires": {
        "charenc": "0.0.2",
        "crypt": "0.0.2",
        "is-buffer": "~1.1.6"
      }
    },
    "media-typer": {
      "version": "0.3.0",
      "resolved": "https://registry.npmjs.org/media-typer/-/media-typer-0.3.0.tgz",
      "integrity": "sha512-dq+qelQ9akHpcOl/gUVRTxVIOkAJ1wR3QAvb4RsVjS8oVoFjDGTc679wJYmUmknUF5HwMLOgb5O+a3KxfWapPQ=="
    },
    "merge-descriptors": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/merge-descriptors/-/merge-descriptors-1.0.1.tgz",
      "integrity": "sha512-cCi6g3/Zr1iqQi6ySbseM1Xvooa98N0w31jzUYrXPX2xqObmFGHJ0tQ5u74H3mVh7wLouTseZyYIq39g8cNp1w=="
    },
    "methods": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/methods/-/methods-1.1.2.tgz",
      "integrity": "sha512-iclAHeNqNm68zFtnZ0e+1L2yUIdvzNoauKU4WBA3VvH/vPFieF7qfRlwUZU+DA9P9bPXIS90ulxoUoCH23sV2w=="
    },
    "mime": {
      "version": "1.6.0",
      "resolved": "https://registry.npmjs.org/mime/-/mime-1.6.0.tgz",
      "integrity": "sha512-x0Vn8spI+wuJ1O6S7gnbaQg8Pxh4NNHb7KSINmEWKiPE4RKOplvijn+NkmYmmRgP68mc70j2EbeTFRsrswaQeg=="
    },
    "mime-db": {
      "version": "1.52.0",
      "resolved": "https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz",
      "integrity": "sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg=="
    },
    "mime-types": {
      "version": "2.1.35",
      "resolved": "https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz",
      "integrity": "sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==",
      "requires": {
        "mime-db": "1.52.0"
      }
    },
    "minimatch": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
      "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
      "requires": {
        "brace-expansion": "^1.1.7"
      }
    },
    "mkdirp-classic": {
      "version": "0.5.3",
      "resolved": "https://registry.npmjs.org/mkdirp-classic/-/mkdirp-classic-0.5.3.tgz",
      "integrity": "sha512-gKLcREMhtuZRwRAfqP3RFW+TK4JqApVBtOIftVgjuABpAtpxhPGaDcfvbhNvD0B8iD1oUr/txX35NjcaY6Ns/A=="
    },
    "ms": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
      "integrity": "sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A=="
    },
    "mysql2": {
      "version": "2.3.3",
      "resolved": "https://registry.npmjs.org/mysql2/-/mysql2-2.3.3.tgz",
      "integrity": "sha512-wxJUev6LgMSgACDkb/InIFxDprRa6T95+VEoR+xPvtngtccNH2dGjEB/fVZ8yg1gWv1510c9CvXuJHi5zUm0ZA==",
      "requires": {
        "denque": "^2.0.1",
        "generate-function": "^2.3.1",
        "iconv-lite": "^0.6.3",
        "long": "^4.0.0",
        "lru-cache": "^6.0.0",
        "named-placeholders": "^1.1.2",
        "seq-queue": "^0.0.5",
        "sqlstring": "^2.3.2"
      },
      "dependencies": {
        "iconv-lite": {
          "version": "0.6.3",
          "resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.6.3.tgz",
          "integrity": "sha512-4fCk79wshMdzMp2rH06qWrJE4iolqLhCUH+OiuIgU++RB0+94NlDL81atO7GX55uUKueo0txHNtvEyI6D7WdMw==",
          "requires": {
            "safer-buffer": ">= 2.1.2 < 3.0.0"
          }
        }
      }
    },
    "named-placeholders": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/named-placeholders/-/named-placeholders-1.1.2.tgz",
      "integrity": "sha512-wiFWqxoLL3PGVReSZpjLVxyJ1bRqe+KKJVbr4hGs1KWfTZTQyezHFBbuKj9hsizHyGV2ne7EMjHdxEGAybD5SA==",
      "requires": {
        "lru-cache": "^4.1.3"
      },
      "dependencies": {
        "lru-cache": {
          "version": "4.1.5",
          "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-4.1.5.tgz",
          "integrity": "sha512-sWZlbEP2OsHNkXrMl5GYk/jKk70MBng6UU4YI/qGDYbgf6YbP4EvmqISbXCoJiRKs+1bSpFHVgQxvJ17F2li5g==",
          "requires": {
            "pseudomap": "^1.0.2",
            "yallist": "^2.1.2"
          }
        },
        "yallist": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/yallist/-/yallist-2.1.2.tgz",
          "integrity": "sha512-ncTzHV7NvsQZkYe1DW7cbDLm0YpzHmZF5r/iyP3ZnQtMiJ+pjzisCiMNI+Sj+xQF5pXhSHxSB3uDbsBTzY/c2A=="
        }
      }
    },
    "negotiator": {
      "version": "0.6.3",
      "resolved": "https://registry.npmjs.org/negotiator/-/negotiator-0.6.3.tgz",
      "integrity": "sha512-+EUsqGPLsM+j/zdChZjsnX51g4XrHFOIXwfnCVPGlQk/k5giakcKsuxCObBRu6DSm9opw/O6slWbJdghQM4bBg=="
    },
    "node-fetch": {
      "version": "2.6.7",
      "resolved": "https://registry.npmjs.org/node-fetch/-/node-fetch-2.6.7.tgz",
      "integrity": "sha512-ZjMPFEfVx5j+y2yF35Kzx5sF7kDzxuDj6ziH4FFbOp87zKDZNx8yExJIb05OGF4Nlt9IHFIMBkRl41VdvcNdbQ==",
      "requires": {
        "whatwg-url": "^5.0.0"
      }
    },
    "node-telegram-bot-api": {
      "version": "0.60.0",
      "resolved": "https://registry.npmjs.org/node-telegram-bot-api/-/node-telegram-bot-api-0.60.0.tgz",
      "integrity": "sha512-SBI2PjfCAfMVuieQb95GBvaWiprRdk5SKfzX6B6G2ciG7J4SjOVwaMvaYhm9dJDTqvRSzl5pbioGbqRO/vx1Zg==",
      "requires": {
        "array.prototype.findindex": "^2.0.2",
        "bl": "^1.2.3",
        "debug": "^3.2.7",
        "eventemitter3": "^3.0.0",
        "file-type": "^3.9.0",
        "mime": "^1.6.0",
        "pump": "^2.0.0",
        "request": "^2.83.0",
        "request-promise": "^4.2.2"
      },
      "dependencies": {
        "debug": {
          "version": "3.2.7",
          "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.7.tgz",
          "integrity": "sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==",
          "requires": {
            "ms": "^2.1.1"
          }
        },
        "ms": {
          "version": "2.1.3",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
          "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA=="
        }
      }
    },
    "oauth-sign": {
      "version": "0.9.0",
      "resolved": "https://registry.npmjs.org/oauth-sign/-/oauth-sign-0.9.0.tgz",
      "integrity": "sha512-fexhUFFPTGV8ybAtSIGbV6gOkSv8UtRbDBnAyLQw4QPKkgNlsH2ByPGtMUqdWkos6YCRmAqViwgZrJc/mRDzZQ=="
    },
    "object-inspect": {
      "version": "1.12.2",
      "resolved": "https://registry.npmjs.org/object-inspect/-/object-inspect-1.12.2.tgz",
      "integrity": "sha512-z+cPxW0QGUp0mcqcsgQyLVRDoXFQbXOwBaqyF7VIgI4TWNQsDHrBpUQslRmIfAoYWdYzs6UlKJtB2XJpTaNSpQ=="
    },
    "object-keys": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/object-keys/-/object-keys-1.1.1.tgz",
      "integrity": "sha512-NuAESUOUMrlIXOfHKzD6bpPu3tYt3xvjNdRIQ+FeT0lNb4K8WR70CaDxhuNguS2XG+GjkyMwOzsN5ZktImfhLA=="
    },
    "object.assign": {
      "version": "4.1.4",
      "resolved": "https://registry.npmjs.org/object.assign/-/object.assign-4.1.4.tgz",
      "integrity": "sha512-1mxKf0e58bvyjSCtKYY4sRe9itRk3PJpquJOjeIkz885CczcI4IvJJDLPS72oowuSh+pBxUFROpX+TU++hxhZQ==",
      "requires": {
        "call-bind": "^1.0.2",
        "define-properties": "^1.1.4",
        "has-symbols": "^1.0.3",
        "object-keys": "^1.1.1"
      }
    },
    "on-finished": {
      "version": "2.4.1",
      "resolved": "https://registry.npmjs.org/on-finished/-/on-finished-2.4.1.tgz",
      "integrity": "sha512-oVlzkg3ENAhCk2zdv7IJwd/QUD4z2RxRwpkcGY8psCVcCYZNq4wYnVWALHM+brtuJjePWiYF/ClmuDr8Ch5+kg==",
      "requires": {
        "ee-first": "1.1.1"
      }
    },
    "once": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/once/-/once-1.4.0.tgz",
      "integrity": "sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==",
      "requires": {
        "wrappy": "1"
      }
    },
    "parent-module": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/parent-module/-/parent-module-1.0.1.tgz",
      "integrity": "sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==",
      "requires": {
        "callsites": "^3.0.0"
      }
    },
    "parse-json": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/parse-json/-/parse-json-5.2.0.tgz",
      "integrity": "sha512-ayCKvm/phCGxOkYRSCM82iDwct8/EonSEgCSxWxD7ve6jHggsFl4fZVQBPRNgQoKiuV/odhFrGzQXZwbifC8Rg==",
      "requires": {
        "@babel/code-frame": "^7.0.0",
        "error-ex": "^1.3.1",
        "json-parse-even-better-errors": "^2.3.0",
        "lines-and-columns": "^1.1.6"
      }
    },
    "parseurl": {
      "version": "1.3.3",
      "resolved": "https://registry.npmjs.org/parseurl/-/parseurl-1.3.3.tgz",
      "integrity": "sha512-CiyeOxFT/JZyN5m0z9PfXw4SCBJ6Sygz1Dpl0wqjlhDEGGBP1GnsUVEL0p63hoG1fcj3fHynXi9NYO4nWOL+qQ=="
    },
    "path-is-absolute": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz",
      "integrity": "sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg=="
    },
    "path-to-regexp": {
      "version": "0.1.7",
      "resolved": "https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-0.1.7.tgz",
      "integrity": "sha512-5DFkuoqlv1uYQKxy8omFBeJPQcdoE07Kv2sferDCrAq1ohOU+MSDswDIbnx3YAM60qIOnYa53wBhXW0EbMonrQ=="
    },
    "path-type": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/path-type/-/path-type-4.0.0.tgz",
      "integrity": "sha512-gDKb8aZMDeD/tZWs9P6+q0J9Mwkdl6xMV8TjnGP3qJVJ06bdMgkbBlLU8IdfOsIsFz2BW1rNVT3XuNEl8zPAvw=="
    },
    "pend": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/pend/-/pend-1.2.0.tgz",
      "integrity": "sha512-F3asv42UuXchdzt+xXqfW1OGlVBe+mxa2mqI0pg5yAHZPvFmY3Y6drSf/GQ1A86WgWEN9Kzh/WrgKa6iGcHXLg=="
    },
    "performance-now": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/performance-now/-/performance-now-2.1.0.tgz",
      "integrity": "sha512-7EAHlyLHI56VEIdK57uwHdHKIaAGbnXPiw0yWbarQZOKaKpvUIgW0jWRVLiatnM+XXlSwsanIBH/hzGMJulMow=="
    },
    "process-nextick-args": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/process-nextick-args/-/process-nextick-args-2.0.1.tgz",
      "integrity": "sha512-3ouUOpQhtgrbOa17J7+uxOTpITYWaGP7/AhoR3+A+/1e9skrzelGi/dXzEYyvbxubEF6Wn2ypscTKiKJFFn1ag=="
    },
    "progress": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/progress/-/progress-2.0.3.tgz",
      "integrity": "sha512-7PiHtLll5LdnKIMw100I+8xJXR5gW2QwWYkT6iJva0bXitZKa/XMrSbdmg3r2Xnaidz9Qumd0VPaMrZlF9V9sA=="
    },
    "proxy-addr": {
      "version": "2.0.7",
      "resolved": "https://registry.npmjs.org/proxy-addr/-/proxy-addr-2.0.7.tgz",
      "integrity": "sha512-llQsMLSUDUPT44jdrU/O37qlnifitDP+ZwrmmZcoSKyLKvtZxpyV0n2/bD/N4tBAAZ/gJEdZU7KMraoK1+XYAg==",
      "requires": {
        "forwarded": "0.2.0",
        "ipaddr.js": "1.9.1"
      }
    },
    "proxy-from-env": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/proxy-from-env/-/proxy-from-env-1.1.0.tgz",
      "integrity": "sha512-D+zkORCbA9f1tdWRK0RaCR3GPv50cMxcrz4X8k5LTSUD1Dkw47mKJEZQNunItRTkWwgtaUSo1RVFRIG9ZXiFYg=="
    },
    "pseudomap": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/pseudomap/-/pseudomap-1.0.2.tgz",
      "integrity": "sha512-b/YwNhb8lk1Zz2+bXXpS/LK9OisiZZ1SNsSLxN1x2OXVEhW2Ckr/7mWE5vrC1ZTiJlD9g19jWszTmJsB+oEpFQ=="
    },
    "psl": {
      "version": "1.9.0",
      "resolved": "https://registry.npmjs.org/psl/-/psl-1.9.0.tgz",
      "integrity": "sha512-E/ZsdU4HLs/68gYzgGTkMicWTLPdAftJLfJFlLUAAKZGkStNU72sZjT66SnMDVOfOWY/YAoiD7Jxa9iHvngcag=="
    },
    "pump": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/pump/-/pump-2.0.1.tgz",
      "integrity": "sha512-ruPMNRkN3MHP1cWJc9OWr+T/xDP0jhXYCLfJcBuX54hhfIBnaQmAUMfDcG4DM5UMWByBbJY69QSphm3jtDKIkA==",
      "requires": {
        "end-of-stream": "^1.1.0",
        "once": "^1.3.1"
      }
    },
    "punycode": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/punycode/-/punycode-2.1.1.tgz",
      "integrity": "sha512-XRsRjdf+j5ml+y/6GKHPZbrF/8p2Yga0JPtdqTIY2Xe5ohJPD9saDJJLPvp9+NSBprVvevdXZybnj2cv8OEd0A=="
    },
    "puppeteer": {
      "version": "19.4.0",
      "resolved": "https://registry.npmjs.org/puppeteer/-/puppeteer-19.4.0.tgz",
      "integrity": "sha512-sRzWEfFSZCCcFUJflGtYI2V7A6qK4Jht+2JiI2LZgn+Nv/LOZZsBDEaGl98ZrS8oEcUA5on4p2yJbE0nzHNzIg==",
      "requires": {
        "cosmiconfig": "8.0.0",
        "devtools-protocol": "0.0.1068969",
        "https-proxy-agent": "5.0.1",
        "progress": "2.0.3",
        "proxy-from-env": "1.1.0",
        "puppeteer-core": "19.4.0"
      }
    },
    "puppeteer-core": {
      "version": "19.4.0",
      "resolved": "https://registry.npmjs.org/puppeteer-core/-/puppeteer-core-19.4.0.tgz",
      "integrity": "sha512-gG/jxseleZStinBn86x8r7trjcE4jcjx1hIQWOpACQhquHYMuKnrWxkzg+EDn8sN3wUtF/Ry9mtJgjM49oUOFQ==",
      "requires": {
        "cross-fetch": "3.1.5",
        "debug": "4.3.4",
        "devtools-protocol": "0.0.1068969",
        "extract-zip": "2.0.1",
        "https-proxy-agent": "5.0.1",
        "proxy-from-env": "1.1.0",
        "rimraf": "3.0.2",
        "tar-fs": "2.1.1",
        "unbzip2-stream": "1.4.3",
        "ws": "8.10.0"
      },
      "dependencies": {
        "debug": {
          "version": "4.3.4",
          "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.4.tgz",
          "integrity": "sha512-PRWFHuSU3eDtQJPvnNY7Jcket1j0t5OuOsFzPPzsekD52Zl8qUfFIPEiswXqIvHWGVHOgX+7G/vCNNhehwxfkQ==",
          "requires": {
            "ms": "2.1.2"
          }
        },
        "ms": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
          "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w=="
        }
      }
    },
    "qs": {
      "version": "6.11.0",
      "resolved": "https://registry.npmjs.org/qs/-/qs-6.11.0.tgz",
      "integrity": "sha512-MvjoMCJwEarSbUYk5O+nmoSzSutSsTwF85zcHPQ9OrlFoZOYIjaqBAJIqIXjptyD5vThxGq52Xu/MaJzRkIk4Q==",
      "requires": {
        "side-channel": "^1.0.4"
      }
    },
    "range-parser": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/range-parser/-/range-parser-1.2.1.tgz",
      "integrity": "sha512-Hrgsx+orqoygnmhFbKaHE6c296J+HTAQXoxEF6gNupROmmGJRoyzfG3ccAveqCBrwr/2yxQ5BVd/GTl5agOwSg=="
    },
    "raw-body": {
      "version": "2.5.1",
      "resolved": "https://registry.npmjs.org/raw-body/-/raw-body-2.5.1.tgz",
      "integrity": "sha512-qqJBtEyVgS0ZmPGdCFPWJ3FreoqvG4MVQln/kCgF7Olq95IbOp0/BWyMwbdtn4VTvkM8Y7khCQ2Xgk/tcrCXig==",
      "requires": {
        "bytes": "3.1.2",
        "http-errors": "2.0.0",
        "iconv-lite": "0.4.24",
        "unpipe": "1.0.0"
      }
    },
    "readable-stream": {
      "version": "2.3.7",
      "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
      "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
      "requires": {
        "core-util-is": "~1.0.0",
        "inherits": "~2.0.3",
        "isarray": "~1.0.0",
        "process-nextick-args": "~2.0.0",
        "safe-buffer": "~5.1.1",
        "string_decoder": "~1.1.1",
        "util-deprecate": "~1.0.1"
      },
      "dependencies": {
        "safe-buffer": {
          "version": "5.1.2",
          "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
          "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g=="
        }
      }
    },
    "regexp.prototype.flags": {
      "version": "1.4.3",
      "resolved": "https://registry.npmjs.org/regexp.prototype.flags/-/regexp.prototype.flags-1.4.3.tgz",
      "integrity": "sha512-fjggEOO3slI6Wvgjwflkc4NFRCTZAu5CnNfBd5qOMYhWdn67nJBBu34/TkD++eeFmd8C9r9jfXJ27+nSiRkSUA==",
      "requires": {
        "call-bind": "^1.0.2",
        "define-properties": "^1.1.3",
        "functions-have-names": "^1.2.2"
      }
    },
    "request": {
      "version": "2.88.2",
      "resolved": "https://registry.npmjs.org/request/-/request-2.88.2.tgz",
      "integrity": "sha512-MsvtOrfG9ZcrOwAW+Qi+F6HbD0CWXEh9ou77uOb7FM2WPhwT7smM833PzanhJLsgXjN89Ir6V2PczXNnMpwKhw==",
      "requires": {
        "aws-sign2": "~0.7.0",
        "aws4": "^1.8.0",
        "caseless": "~0.12.0",
        "combined-stream": "~1.0.6",
        "extend": "~3.0.2",
        "forever-agent": "~0.6.1",
        "form-data": "~2.3.2",
        "har-validator": "~5.1.3",
        "http-signature": "~1.2.0",
        "is-typedarray": "~1.0.0",
        "isstream": "~0.1.2",
        "json-stringify-safe": "~5.0.1",
        "mime-types": "~2.1.19",
        "oauth-sign": "~0.9.0",
        "performance-now": "^2.1.0",
        "qs": "~6.5.2",
        "safe-buffer": "^5.1.2",
        "tough-cookie": "~2.5.0",
        "tunnel-agent": "^0.6.0",
        "uuid": "^3.3.2"
      },
      "dependencies": {
        "qs": {
          "version": "6.5.3",
          "resolved": "https://registry.npmjs.org/qs/-/qs-6.5.3.tgz",
          "integrity": "sha512-qxXIEh4pCGfHICj1mAJQ2/2XVZkjCDTcEgfoSQxc/fYivUZxTkk7L3bDBJSoNrEzXI17oUO5Dp07ktqE5KzczA=="
        }
      }
    },
    "request-promise": {
      "version": "4.2.6",
      "resolved": "https://registry.npmjs.org/request-promise/-/request-promise-4.2.6.tgz",
      "integrity": "sha512-HCHI3DJJUakkOr8fNoCc73E5nU5bqITjOYFMDrKHYOXWXrgD/SBaC7LjwuPymUprRyuF06UK7hd/lMHkmUXglQ==",
      "requires": {
        "bluebird": "^3.5.0",
        "request-promise-core": "1.1.4",
        "stealthy-require": "^1.1.1",
        "tough-cookie": "^2.3.3"
      }
    },
    "request-promise-core": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/request-promise-core/-/request-promise-core-1.1.4.tgz",
      "integrity": "sha512-TTbAfBBRdWD7aNNOoVOBH4pN/KigV6LyapYNNlAPA8JwbovRti1E88m3sYAwsLi5ryhPKsE9APwnjFTgdUjTpw==",
      "requires": {
        "lodash": "^4.17.19"
      }
    },
    "resolve-from": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-4.0.0.tgz",
      "integrity": "sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g=="
    },
    "rimraf": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-3.0.2.tgz",
      "integrity": "sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX/2o0L9UBw9O/Y3o6wFw/i9YLapcUJWwqbi3kdxIPdC62TIA==",
      "requires": {
        "glob": "^7.1.3"
      }
    },
    "safe-buffer": {
      "version": "5.2.1",
      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.1.tgz",
      "integrity": "sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ=="
    },
    "safe-regex-test": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/safe-regex-test/-/safe-regex-test-1.0.0.tgz",
      "integrity": "sha512-JBUUzyOgEwXQY1NuPtvcj/qcBDbDmEvWufhlnXZIm75DEHp+afM1r1ujJpJsV/gSM4t59tpDyPi1sd6ZaPFfsA==",
      "requires": {
        "call-bind": "^1.0.2",
        "get-intrinsic": "^1.1.3",
        "is-regex": "^1.1.4"
      }
    },
    "safer-buffer": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz",
      "integrity": "sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg=="
    },
    "send": {
      "version": "0.18.0",
      "resolved": "https://registry.npmjs.org/send/-/send-0.18.0.tgz",
      "integrity": "sha512-qqWzuOjSFOuqPjFe4NOsMLafToQQwBSOEpS+FwEt3A2V3vKubTquT3vmLTQpFgMXp8AlFWFuP1qKaJZOtPpVXg==",
      "requires": {
        "debug": "2.6.9",
        "depd": "2.0.0",
        "destroy": "1.2.0",
        "encodeurl": "~1.0.2",
        "escape-html": "~1.0.3",
        "etag": "~1.8.1",
        "fresh": "0.5.2",
        "http-errors": "2.0.0",
        "mime": "1.6.0",
        "ms": "2.1.3",
        "on-finished": "2.4.1",
        "range-parser": "~1.2.1",
        "statuses": "2.0.1"
      },
      "dependencies": {
        "ms": {
          "version": "2.1.3",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
          "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA=="
        }
      }
    },
    "seq-queue": {
      "version": "0.0.5",
      "resolved": "https://registry.npmjs.org/seq-queue/-/seq-queue-0.0.5.tgz",
      "integrity": "sha512-hr3Wtp/GZIc/6DAGPDcV4/9WoZhjrkXsi5B/07QgX8tsdc6ilr7BFM6PM6rbdAX1kFSDYeZGLipIZZKyQP0O5Q=="
    },
    "serve-static": {
      "version": "1.15.0",
      "resolved": "https://registry.npmjs.org/serve-static/-/serve-static-1.15.0.tgz",
      "integrity": "sha512-XGuRDNjXUijsUL0vl6nSD7cwURuzEgglbOaFuZM9g3kwDXOWVTck0jLzjPzGD+TazWbboZYu52/9/XPdUgne9g==",
      "requires": {
        "encodeurl": "~1.0.2",
        "escape-html": "~1.0.3",
        "parseurl": "~1.3.3",
        "send": "0.18.0"
      }
    },
    "setprototypeof": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.2.0.tgz",
      "integrity": "sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw=="
    },
    "side-channel": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/side-channel/-/side-channel-1.0.4.tgz",
      "integrity": "sha512-q5XPytqFEIKHkGdiMIrY10mvLRvnQh42/+GoBlFW3b2LXLE2xxJpZFdm94we0BaoV3RwJyGqg5wS7epxTv0Zvw==",
      "requires": {
        "call-bind": "^1.0.0",
        "get-intrinsic": "^1.0.2",
        "object-inspect": "^1.9.0"
      }
    },
    "sqlstring": {
      "version": "2.3.3",
      "resolved": "https://registry.npmjs.org/sqlstring/-/sqlstring-2.3.3.tgz",
      "integrity": "sha512-qC9iz2FlN7DQl3+wjwn3802RTyjCx7sDvfQEXchwa6CWOx07/WVfh91gBmQ9fahw8snwGEWU3xGzOt4tFyHLxg=="
    },
    "sshpk": {
      "version": "1.17.0",
      "resolved": "https://registry.npmjs.org/sshpk/-/sshpk-1.17.0.tgz",
      "integrity": "sha512-/9HIEs1ZXGhSPE8X6Ccm7Nam1z8KcoCqPdI7ecm1N33EzAetWahvQWVqLZtaZQ+IDKX4IyA2o0gBzqIMkAagHQ==",
      "requires": {
        "asn1": "~0.2.3",
        "assert-plus": "^1.0.0",
        "bcrypt-pbkdf": "^1.0.0",
        "dashdash": "^1.12.0",
        "ecc-jsbn": "~0.1.1",
        "getpass": "^0.1.1",
        "jsbn": "~0.1.0",
        "safer-buffer": "^2.0.2",
        "tweetnacl": "~0.14.0"
      }
    },
    "statuses": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/statuses/-/statuses-2.0.1.tgz",
      "integrity": "sha512-RwNA9Z/7PrK06rYLIzFMlaF+l73iwpzsqRIFgbMLbTcLD6cOao82TaWefPXQvB2fOC4AjuYSEndS7N/mTCbkdQ=="
    },
    "stealthy-require": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/stealthy-require/-/stealthy-require-1.1.1.tgz",
      "integrity": "sha512-ZnWpYnYugiOVEY5GkcuJK1io5V8QmNYChG62gSit9pQVGErXtrKuPC55ITaVSukmMta5qpMU7vqLt2Lnni4f/g=="
    },
    "string_decoder": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
      "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
      "requires": {
        "safe-buffer": "~5.1.0"
      },
      "dependencies": {
        "safe-buffer": {
          "version": "5.1.2",
          "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
          "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g=="
        }
      }
    },
    "string.prototype.trimend": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/string.prototype.trimend/-/string.prototype.trimend-1.0.6.tgz",
      "integrity": "sha512-JySq+4mrPf9EsDBEDYMOb/lM7XQLulwg5R/m1r0PXEFqrV0qHvl58sdTilSXtKOflCsK2E8jxf+GKC0T07RWwQ==",
      "requires": {
        "call-bind": "^1.0.2",
        "define-properties": "^1.1.4",
        "es-abstract": "^1.20.4"
      }
    },
    "string.prototype.trimstart": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/string.prototype.trimstart/-/string.prototype.trimstart-1.0.6.tgz",
      "integrity": "sha512-omqjMDaY92pbn5HOX7f9IccLA+U1tA9GvtU4JrodiXFfYB7jPzzHpRzpglLAjtUV6bB557zwClJezTqnAiYnQA==",
      "requires": {
        "call-bind": "^1.0.2",
        "define-properties": "^1.1.4",
        "es-abstract": "^1.20.4"
      }
    },
    "strip-bom": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/strip-bom/-/strip-bom-2.0.0.tgz",
      "integrity": "sha512-kwrX1y7czp1E69n2ajbG65mIo9dqvJ+8aBQXOGVxqwvNbsXdFM6Lq37dLAY3mknUwru8CfcCbfOLL/gMo+fi3g==",
      "requires": {
        "is-utf8": "^0.2.0"
      }
    },
    "strnum": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/strnum/-/strnum-1.0.5.tgz",
      "integrity": "sha512-J8bbNyKKXl5qYcR36TIO8W3mVGVHrmmxsd5PAItGkmyzwJvybiw2IVq5nqd0i4LSNSkB/sx9VHllbfFdr9k1JA=="
    },
    "supports-color": {
      "version": "5.5.0",
      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
      "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
      "requires": {
        "has-flag": "^3.0.0"
      }
    },
    "tar-fs": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/tar-fs/-/tar-fs-2.1.1.tgz",
      "integrity": "sha512-V0r2Y9scmbDRLCNex/+hYzvp/zyYjvFbHPNgVTKfQvVrb6guiE/fxP+XblDNR011utopbkex2nM4dHNV6GDsng==",
      "requires": {
        "chownr": "^1.1.1",
        "mkdirp-classic": "^0.5.2",
        "pump": "^3.0.0",
        "tar-stream": "^2.1.4"
      },
      "dependencies": {
        "pump": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/pump/-/pump-3.0.0.tgz",
          "integrity": "sha512-LwZy+p3SFs1Pytd/jYct4wpv49HiYCqd9Rlc5ZVdk0V+8Yzv6jR5Blk3TRmPL1ft69TxP0IMZGJ+WPFU2BFhww==",
          "requires": {
            "end-of-stream": "^1.1.0",
            "once": "^1.3.1"
          }
        }
      }
    },
    "tar-stream": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/tar-stream/-/tar-stream-2.2.0.tgz",
      "integrity": "sha512-ujeqbceABgwMZxEJnk2HDY2DlnUZ+9oEcb1KzTVfYHio0UE6dG71n60d8D2I4qNvleWrrXpmjpt7vZeF1LnMZQ==",
      "requires": {
        "bl": "^4.0.3",
        "end-of-stream": "^1.4.1",
        "fs-constants": "^1.0.0",
        "inherits": "^2.0.3",
        "readable-stream": "^3.1.1"
      },
      "dependencies": {
        "bl": {
          "version": "4.1.0",
          "resolved": "https://registry.npmjs.org/bl/-/bl-4.1.0.tgz",
          "integrity": "sha512-1W07cM9gS6DcLperZfFSj+bWLtaPGSOHWhPiGzXmvVJbRLdG82sH/Kn8EtW1VqWVA54AKf2h5k5BbnIbwF3h6w==",
          "requires": {
            "buffer": "^5.5.0",
            "inherits": "^2.0.4",
            "readable-stream": "^3.4.0"
          }
        },
        "readable-stream": {
          "version": "3.6.0",
          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-3.6.0.tgz",
          "integrity": "sha512-BViHy7LKeTz4oNnkcLJ+lVSL6vpiFeX6/d3oSH8zCW7UxP2onchk+vTGB143xuFjHS3deTgkKoXXymXqymiIdA==",
          "requires": {
            "inherits": "^2.0.3",
            "string_decoder": "^1.1.1",
            "util-deprecate": "^1.0.1"
          }
        }
      }
    },
    "through": {
      "version": "2.3.8",
      "resolved": "https://registry.npmjs.org/through/-/through-2.3.8.tgz",
      "integrity": "sha512-w89qg7PI8wAdvX60bMDP+bFoD5Dvhm9oLheFp5O4a2QF0cSBGsBX4qZmadPMvVqlLJBBci+WqGGOAPvcDeNSVg=="
    },
    "toidentifier": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/toidentifier/-/toidentifier-1.0.1.tgz",
      "integrity": "sha512-o5sSPKEkg/DIQNmH43V0/uerLrpzVedkUh8tGNvaeXpfpuwjKenlSox/2O/BTlZUtEe+JG7s5YhEz608PlAHRA=="
    },
    "tough-cookie": {
      "version": "2.5.0",
      "resolved": "https://registry.npmjs.org/tough-cookie/-/tough-cookie-2.5.0.tgz",
      "integrity": "sha512-nlLsUzgm1kfLXSXfRZMc1KLAugd4hqJHDTvc2hDIwS3mZAfMEuMbc03SujMF+GEcpaX/qboeycw6iO8JwVv2+g==",
      "requires": {
        "psl": "^1.1.28",
        "punycode": "^2.1.1"
      }
    },
    "tr46": {
      "version": "0.0.3",
      "resolved": "https://registry.npmjs.org/tr46/-/tr46-0.0.3.tgz",
      "integrity": "sha512-N3WMsuqV66lT30CrXNbEjx4GEwlow3v6rr4mCcv6prnfwhS01rkgyFdjPNBYd9br7LpXV1+Emh01fHnq2Gdgrw=="
    },
    "tunnel-agent": {
      "version": "0.6.0",
      "resolved": "https://registry.npmjs.org/tunnel-agent/-/tunnel-agent-0.6.0.tgz",
      "integrity": "sha512-McnNiV1l8RYeY8tBgEpuodCC1mLUdbSN+CYBL7kJsJNInOP8UjDDEwdk6Mw60vdLLrr5NHKZhMAOSrR2NZuQ+w==",
      "requires": {
        "safe-buffer": "^5.0.1"
      }
    },
    "tweetnacl": {
      "version": "0.14.5",
      "resolved": "https://registry.npmjs.org/tweetnacl/-/tweetnacl-0.14.5.tgz",
      "integrity": "sha512-KXXFFdAbFXY4geFIwoyNK+f5Z1b7swfXABfL7HXCmoIWMKU3dmS26672A4EeQtDzLKy7SXmfBu51JolvEKwtGA=="
    },
    "type-is": {
      "version": "1.6.18",
      "resolved": "https://registry.npmjs.org/type-is/-/type-is-1.6.18.tgz",
      "integrity": "sha512-TkRKr9sUTxEH8MdfuCSP7VizJyzRNMjj2J2do2Jr3Kym598JVdEksuzPQCnlFPW4ky9Q+iA+ma9BGm06XQBy8g==",
      "requires": {
        "media-typer": "0.3.0",
        "mime-types": "~2.1.24"
      }
    },
    "unbox-primitive": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/unbox-primitive/-/unbox-primitive-1.0.2.tgz",
      "integrity": "sha512-61pPlCD9h51VoreyJ0BReideM3MDKMKnh6+V9L08331ipq6Q8OFXZYiqP6n/tbHx4s5I9uRhcye6BrbkizkBDw==",
      "requires": {
        "call-bind": "^1.0.2",
        "has-bigints": "^1.0.2",
        "has-symbols": "^1.0.3",
        "which-boxed-primitive": "^1.0.2"
      }
    },
    "unbzip2-stream": {
      "version": "1.4.3",
      "resolved": "https://registry.npmjs.org/unbzip2-stream/-/unbzip2-stream-1.4.3.tgz",
      "integrity": "sha512-mlExGW4w71ebDJviH16lQLtZS32VKqsSfk80GCfUlwT/4/hNRFsoscrF/c++9xinkMzECL1uL9DDwXqFWkruPg==",
      "requires": {
        "buffer": "^5.2.1",
        "through": "^2.3.8"
      }
    },
    "unpipe": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/unpipe/-/unpipe-1.0.0.tgz",
      "integrity": "sha512-pjy2bYhSsufwWlKwPc+l3cN7+wuJlK6uz0YdJEOlQDbl6jo/YlPi4mb8agUkVC8BF7V8NuzeyPNqRksA3hztKQ=="
    },
    "uri-js": {
      "version": "4.4.1",
      "resolved": "https://registry.npmjs.org/uri-js/-/uri-js-4.4.1.tgz",
      "integrity": "sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==",
      "requires": {
        "punycode": "^2.1.0"
      }
    },
    "util": {
      "version": "0.12.5",
      "resolved": "https://registry.npmjs.org/util/-/util-0.12.5.tgz",
      "integrity": "sha512-kZf/K6hEIrWHI6XqOFUiiMa+79wE/D8Q+NCNAWclkyg3b4d2k7s0QGepNjiABc+aR3N1PAyHL7p6UcLY6LmrnA==",
      "requires": {
        "inherits": "^2.0.3",
        "is-arguments": "^1.0.4",
        "is-generator-function": "^1.0.7",
        "is-typed-array": "^1.1.3",
        "which-typed-array": "^1.1.2"
      }
    },
    "util-deprecate": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz",
      "integrity": "sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw=="
    },
    "utils-merge": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/utils-merge/-/utils-merge-1.0.1.tgz",
      "integrity": "sha512-pMZTvIkT1d+TFGvDOqodOclx0QWkkgi6Tdoa8gC8ffGAAqz9pzPTZWAybbsHHoED/ztMtkv/VoYTYyShUn81hA=="
    },
    "uuid": {
      "version": "3.4.0",
      "resolved": "https://registry.npmjs.org/uuid/-/uuid-3.4.0.tgz",
      "integrity": "sha512-HjSDRw6gZE5JMggctHBcjVak08+KEVhSIiDzFnT9S9aegmp85S/bReBVTb4QTFaRNptJ9kuYaNhnbNEOkbKb/A=="
    },
    "vary": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/vary/-/vary-1.1.2.tgz",
      "integrity": "sha512-BNGbWLfd0eUPabhkXUVm0j8uuvREyTh5ovRa/dyow/BqAbZJyC+5fU+IzQOzmAKzYqYRAISoRhdQr3eIZ/PXqg=="
    },
    "verror": {
      "version": "1.10.0",
      "resolved": "https://registry.npmjs.org/verror/-/verror-1.10.0.tgz",
      "integrity": "sha512-ZZKSmDAEFOijERBLkmYfJ+vmk3w+7hOLYDNkRCuRuMJGEmqYNCNLyBBFwWKVMhfwaEF3WOd0Zlw86U/WC/+nYw==",
      "requires": {
        "assert-plus": "^1.0.0",
        "core-util-is": "1.0.2",
        "extsprintf": "^1.2.0"
      },
      "dependencies": {
        "core-util-is": {
          "version": "1.0.2",
          "resolved": "https://registry.npmjs.org/core-util-is/-/core-util-is-1.0.2.tgz",
          "integrity": "sha512-3lqz5YjWTYnW6dlDa5TLaTCcShfar1e40rmcJVwCBJC6mWlFuj0eCHIElmG1g5kyuJ/GD+8Wn4FFCcz4gJPfaQ=="
        }
      }
    },
    "webidl-conversions": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/webidl-conversions/-/webidl-conversions-3.0.1.tgz",
      "integrity": "sha512-2JAn3z8AR6rjK8Sm8orRC0h/bcl/DqL7tRPdGZ4I1CjdF+EaMLmYxBHyXuKL849eucPFhvBoxMsflfOb8kxaeQ=="
    },
    "whatwg-url": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/whatwg-url/-/whatwg-url-5.0.0.tgz",
      "integrity": "sha512-saE57nupxk6v3HY35+jzBwYa0rKSy0XR8JSxZPwgLr7ys0IBzhGviA1/TUGJLmSVqs8pb9AnvICXEuOHLprYTw==",
      "requires": {
        "tr46": "~0.0.3",
        "webidl-conversions": "^3.0.0"
      }
    },
    "which-boxed-primitive": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/which-boxed-primitive/-/which-boxed-primitive-1.0.2.tgz",
      "integrity": "sha512-bwZdv0AKLpplFY2KZRX6TvyuN7ojjr7lwkg6ml0roIy9YeuSr7JS372qlNW18UQYzgYK9ziGcerWqZOmEn9VNg==",
      "requires": {
        "is-bigint": "^1.0.1",
        "is-boolean-object": "^1.1.0",
        "is-number-object": "^1.0.4",
        "is-string": "^1.0.5",
        "is-symbol": "^1.0.3"
      }
    },
    "which-typed-array": {
      "version": "1.1.9",
      "resolved": "https://registry.npmjs.org/which-typed-array/-/which-typed-array-1.1.9.tgz",
      "integrity": "sha512-w9c4xkx6mPidwp7180ckYWfMmvxpjlZuIudNtDf4N/tTAUB8VJbX25qZoAsrtGuYNnGw3pa0AXgbGKRB8/EceA==",
      "requires": {
        "available-typed-arrays": "^1.0.5",
        "call-bind": "^1.0.2",
        "for-each": "^0.3.3",
        "gopd": "^1.0.1",
        "has-tostringtag": "^1.0.0",
        "is-typed-array": "^1.1.10"
      }
    },
    "wrappy": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz",
      "integrity": "sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ=="
    },
    "ws": {
      "version": "8.10.0",
      "resolved": "https://registry.npmjs.org/ws/-/ws-8.10.0.tgz",
      "integrity": "sha512-+s49uSmZpvtAsd2h37vIPy1RBusaLawVe8of+GyEPsaJTCMpj/2v8NpeK1SHXjBlQ95lQTmQofOJnFiLoaN3yw==",
      "requires": {}
    },
    "yallist": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz",
      "integrity": "sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A=="
    },
    "yauzl": {
      "version": "2.10.0",
      "resolved": "https://registry.npmjs.org/yauzl/-/yauzl-2.10.0.tgz",
      "integrity": "sha512-p4a9I6X6nu6IhoGmBqAcbJy1mlC4j27vEPZX9F4L4/vZT3Lyq1VkFHw/V/PUcB9Buo+DG3iHkT0x3Qya58zc3g==",
      "requires": {
        "buffer-crc32": "~0.2.3",
        "fd-slicer": "~1.1.0"
      }
    }
  }
}

---
| package.json
{
  "name": "anmasoftv3",
  "version": "3.0.0",
  "description": "Anmasoft V3 with telegram Support. Cleaned and fixed up.",
  "main": "app.js",
  "scripts": {
    "fireball": "NODE_ENV=fireball node app.js",
    "fourseasons": "NODE_ENV=fourseasons node app.js",
    "fourseasons2": "NODE_ENV=fourseasons2 node app.js",
    "winter": "NODE_ENV=winter node app.js",
    "winter2": "NODE_ENV=winter2 node app.js",
    "rakoon": "NODE_ENV=rakoon node app.js",
    "botazon-server": "NODE_ENV=botazon-server node --trace-warnings app.js",
    "botazon-local": "NODE_ENV=botazon-local node app.js"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/max0783/AnmaSoftV3.git"
  },
  "author": "Max",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/max0783/AnmaSoftV3/issues"
  },
  "homepage": "https://github.com/max0783/AnmaSoftV3#readme",
  "dependencies": {
    "amazon-sp-api": "^0.8.0",
    "cron": "^2.1.0",
    "dotenv": "^16.0.3",
    "express": "^4.18.2",
    "md5": "^2.3.0",
    "mysql2": "^2.3.3",
    "node-telegram-bot-api": "^0.60.0",
    "puppeteer": "18.2.1",
    "util": "^0.12.5"
  }
}

---
| preciosJson.json
{
  "SKU": "GITA0000877SL",
  "status": "Success",
  "ItemCondition": "New",
  "Identifier": {
    "MarketplaceId": "ATVPDKIKX0DER",
    "ItemCondition": "New",
    "SellerSKU": "GITA0000877SL"
  },
  "Summary": {
    "LowestPrices": [
      {
        "condition": "new",
        "fulfillmentChannel": "Amazon",
        "LandedPrice": { "CurrencyCode": "USD", "Amount": 6.99 },
        "ListingPrice": { "CurrencyCode": "USD", "Amount": 6.99 },
        "Shipping": { "CurrencyCode": "USD", "Amount": 0 }
      },
      {
        "condition": "new",
        "fulfillmentChannel": "Merchant",
        "LandedPrice": { "CurrencyCode": "USD", "Amount": 9.99 },
        "ListingPrice": { "CurrencyCode": "USD", "Amount": 9.99 },
        "Shipping": { "CurrencyCode": "USD", "Amount": 0 }
      }
    ],
    "BuyBoxPrices": [
      {
        "condition": "new",
        "LandedPrice": { "CurrencyCode": "USD", "Amount": 6.99 },
        "ListingPrice": { "CurrencyCode": "USD", "Amount": 6.99 },
        "Shipping": { "CurrencyCode": "USD", "Amount": 0 }
      }
    ],
    "NumberOfOffers": [
      { "condition": "new", "fulfillmentChannel": "Amazon", "OfferCount": 22 },
      { "condition": "new", "fulfillmentChannel": "Merchant", "OfferCount": 2 }
    ],
    "BuyBoxEligibleOffers": [
      { "condition": "new", "fulfillmentChannel": "Amazon" },
      { "condition": "new", "fulfillmentChannel": "Merchant" }
    ],
    "SalesRankings": [
      { "ProductCategoryId": "fashion_display_on_website", "Rank": 228148 },
      { "ProductCategoryId": "378531011", "Rank": 135 }
    ],
    "TotalOfferCount": 24
  },
  "Offers": [
    {
      "Shipping": { "CurrencyCode": "USD", "Amount": 0 },
      "ListingPrice": { "CurrencyCode": "USD", "Amount": 6.99 },
      "ShippingTime": {
        "maximumHours": 0,
        "minimumHours": 0,
        "availabilityType": "NOW"
      },
      "SellerFeedbackRating": {
        "FeedbackCount": 1106,
        "SellerPositiveFeedbackRating": 99
      },
      "ShipsFrom": { "Country": "US" },
      "PrimeInformation": { "IsPrime": true, "IsNationalPrime": true },
      "SubCondition": "new",
      "SellerId": "A2G8RGF84BCS13",
      "IsFeaturedMerchant": true,
      "IsBuyBoxWinner": false,
      "MyOffer": false,
      "IsFulfilledByAmazon": true
    },
    {
      "Shipping": { "CurrencyCode": "USD", "Amount": 0 },
      "ListingPrice": { "CurrencyCode": "USD", "Amount": 6.99 },
      "ShippingTime": {
        "maximumHours": 0,
        "minimumHours": 0,
        "availabilityType": "NOW"
      },
      "SellerFeedbackRating": {
        "FeedbackCount": 1106,
        "SellerPositiveFeedbackRating": 99
      },
      "ShipsFrom": { "Country": "US" },
      "PrimeInformation": { "IsPrime": true, "IsNationalPrime": true },
      "SubCondition": "new",
      "SellerId": "A2G8RGF84BCS13",
      "IsFeaturedMerchant": true,
      "IsBuyBoxWinner": true,
      "MyOffer": false,
      "IsFulfilledByAmazon": true
    },
    {
      "Shipping": { "CurrencyCode": "USD", "Amount": 0 },
      "ListingPrice": { "CurrencyCode": "USD", "Amount": 7 },
      "ShippingTime": {
        "maximumHours": 0,
        "minimumHours": 0,
        "availabilityType": "NOW"
      },
      "SellerFeedbackRating": {
        "FeedbackCount": 1106,
        "SellerPositiveFeedbackRating": 99
      },
      "ShipsFrom": { "Country": "US" },
      "PrimeInformation": { "IsPrime": true, "IsNationalPrime": true },
      "SubCondition": "new",
      "SellerId": "A2G8RGF84BCS13",
      "IsFeaturedMerchant": true,
      "IsBuyBoxWinner": false,
      "MyOffer": false,
      "IsFulfilledByAmazon": true
    },
    {
      "Shipping": { "CurrencyCode": "USD", "Amount": 0 },
      "ListingPrice": { "CurrencyCode": "USD", "Amount": 7 },
      "ShippingTime": {
        "maximumHours": 0,
        "minimumHours": 0,
        "availabilityType": "NOW"
      },
      "SellerFeedbackRating": {
        "FeedbackCount": 1717,
        "SellerPositiveFeedbackRating": 100
      },
      "ShipsFrom": { "Country": "US" },
      "PrimeInformation": { "IsPrime": true, "IsNationalPrime": true },
      "SubCondition": "new",
      "SellerId": "A3U5I0CQGTN82P",
      "IsFeaturedMerchant": true,
      "IsBuyBoxWinner": false,
      "MyOffer": true,
      "IsFulfilledByAmazon": true
    },
    {
      "Shipping": { "CurrencyCode": "USD", "Amount": 0 },
      "ListingPrice": { "CurrencyCode": "USD", "Amount": 7.09 },
      "ShippingTime": {
        "maximumHours": 0,
        "minimumHours": 0,
        "availabilityType": "NOW"
      },
      "SellerFeedbackRating": {
        "FeedbackCount": 1106,
        "SellerPositiveFeedbackRating": 99
      },
      "ShipsFrom": { "Country": "US" },
      "PrimeInformation": { "IsPrime": true, "IsNationalPrime": true },
      "SubCondition": "new",
      "SellerId": "A2G8RGF84BCS13",
      "IsFeaturedMerchant": true,
      "IsBuyBoxWinner": false,
      "MyOffer": false,
      "IsFulfilledByAmazon": true
    },
    {
      "Shipping": { "CurrencyCode": "USD", "Amount": 0 },
      "ListingPrice": { "CurrencyCode": "USD", "Amount": 7.1 },
      "ShippingTime": {
        "maximumHours": 0,
        "minimumHours": 0,
        "availabilityType": "NOW"
      },
      "SellerFeedbackRating": {
        "FeedbackCount": 386,
        "SellerPositiveFeedbackRating": 98
      },
      "ShipsFrom": { "Country": "BG" },
      "PrimeInformation": { "IsPrime": true, "IsNationalPrime": true },
      "SubCondition": "new",
      "SellerId": "A1UHXY4BW6Q3ZM",
      "IsFeaturedMerchant": true,
      "IsBuyBoxWinner": false,
      "MyOffer": false,
      "IsFulfilledByAmazon": true
    },
    {
      "Shipping": { "CurrencyCode": "USD", "Amount": 0 },
      "ListingPrice": { "CurrencyCode": "USD", "Amount": 7.1 },
      "ShippingTime": {
        "maximumHours": 0,
        "minimumHours": 0,
        "availabilityType": "NOW"
      },
      "SellerFeedbackRating": {
        "FeedbackCount": 1106,
        "SellerPositiveFeedbackRating": 99
      },
      "ShipsFrom": { "Country": "US" },
      "PrimeInformation": { "IsPrime": true, "IsNationalPrime": true },
      "SubCondition": "new",
      "SellerId": "A2G8RGF84BCS13",
      "IsFeaturedMerchant": true,
      "IsBuyBoxWinner": false,
      "MyOffer": false,
      "IsFulfilledByAmazon": true
    },
    {
      "Shipping": { "CurrencyCode": "USD", "Amount": 0 },
      "ListingPrice": { "CurrencyCode": "USD", "Amount": 7.1 },
      "ShippingTime": {
        "maximumHours": 0,
        "minimumHours": 0,
        "availabilityType": "NOW"
      },
      "SellerFeedbackRating": {
        "FeedbackCount": 1106,
        "SellerPositiveFeedbackRating": 99
      },
      "ShipsFrom": { "Country": "US" },
      "PrimeInformation": { "IsPrime": true, "IsNationalPrime": true },
      "SubCondition": "new",
      "SellerId": "A2G8RGF84BCS13",
      "IsFeaturedMerchant": true,
      "IsBuyBoxWinner": false,
      "MyOffer": false,
      "IsFulfilledByAmazon": true
    },
    {
      "Shipping": { "CurrencyCode": "USD", "Amount": 0 },
      "ListingPrice": { "CurrencyCode": "USD", "Amount": 7.1 },
      "ShippingTime": {
        "maximumHours": 0,
        "minimumHours": 0,
        "availabilityType": "NOW"
      },
      "SellerFeedbackRating": {
        "FeedbackCount": 1106,
        "SellerPositiveFeedbackRating": 99
      },
      "ShipsFrom": { "Country": "US" },
      "PrimeInformation": { "IsPrime": true, "IsNationalPrime": true },
      "SubCondition": "new",
      "SellerId": "A2G8RGF84BCS13",
      "IsFeaturedMerchant": true,
      "IsBuyBoxWinner": false,
      "MyOffer": false,
      "IsFulfilledByAmazon": true
    },
    {
      "Shipping": { "CurrencyCode": "USD", "Amount": 0 },
      "ListingPrice": { "CurrencyCode": "USD", "Amount": 7.1 },
      "ShippingTime": {
        "maximumHours": 0,
        "minimumHours": 0,
        "availabilityType": "NOW"
      },
      "SellerFeedbackRating": {
        "FeedbackCount": 1106,
        "SellerPositiveFeedbackRating": 99
      },
      "ShipsFrom": { "Country": "US" },
      "PrimeInformation": { "IsPrime": true, "IsNationalPrime": true },
      "SubCondition": "new",
      "SellerId": "A2G8RGF84BCS13",
      "IsFeaturedMerchant": true,
      "IsBuyBoxWinner": false,
      "MyOffer": false,
      "IsFulfilledByAmazon": true
    },
    {
      "Shipping": { "CurrencyCode": "USD", "Amount": 0 },
      "ListingPrice": { "CurrencyCode": "USD", "Amount": 7.1 },
      "ShippingTime": {
        "maximumHours": 0,
        "minimumHours": 0,
        "availabilityType": "NOW"
      },
      "SellerFeedbackRating": {
        "FeedbackCount": 1106,
        "SellerPositiveFeedbackRating": 99
      },
      "ShipsFrom": { "Country": "US" },
      "PrimeInformation": { "IsPrime": true, "IsNationalPrime": true },
      "SubCondition": "new",
      "SellerId": "A2G8RGF84BCS13",
      "IsFeaturedMerchant": true,
      "IsBuyBoxWinner": false,
      "MyOffer": false,
      "IsFulfilledByAmazon": true
    },
    {
      "Shipping": { "CurrencyCode": "USD", "Amount": 0 },
      "ListingPrice": { "CurrencyCode": "USD", "Amount": 7.1 },
      "ShippingTime": {
        "maximumHours": 0,
        "minimumHours": 0,
        "availabilityType": "NOW"
      },
      "SellerFeedbackRating": {
        "FeedbackCount": 1106,
        "SellerPositiveFeedbackRating": 99
      },
      "ShipsFrom": { "Country": "US" },
      "PrimeInformation": { "IsPrime": true, "IsNationalPrime": true },
      "SubCondition": "new",
      "SellerId": "A2G8RGF84BCS13",
      "IsFeaturedMerchant": true,
      "IsBuyBoxWinner": false,
      "MyOffer": false,
      "IsFulfilledByAmazon": true
    },
    {
      "Shipping": { "CurrencyCode": "USD", "Amount": 0 },
      "ListingPrice": { "CurrencyCode": "USD", "Amount": 7.1 },
      "ShippingTime": {
        "maximumHours": 0,
        "minimumHours": 0,
        "availabilityType": "NOW"
      },
      "SellerFeedbackRating": {
        "FeedbackCount": 1106,
        "SellerPositiveFeedbackRating": 99
      },
      "ShipsFrom": { "Country": "US" },
      "PrimeInformation": { "IsPrime": true, "IsNationalPrime": true },
      "SubCondition": "new",
      "SellerId": "A2G8RGF84BCS13",
      "IsFeaturedMerchant": true,
      "IsBuyBoxWinner": false,
      "MyOffer": false,
      "IsFulfilledByAmazon": true
    },
    {
      "Shipping": { "CurrencyCode": "USD", "Amount": 0 },
      "ListingPrice": { "CurrencyCode": "USD", "Amount": 7.1 },
      "ShippingTime": {
        "maximumHours": 0,
        "minimumHours": 0,
        "availabilityType": "NOW"
      },
      "SellerFeedbackRating": {
        "FeedbackCount": 1106,
        "SellerPositiveFeedbackRating": 99
      },
      "ShipsFrom": { "Country": "US" },
      "PrimeInformation": { "IsPrime": true, "IsNationalPrime": true },
      "SubCondition": "new",
      "SellerId": "A2G8RGF84BCS13",
      "IsFeaturedMerchant": true,
      "IsBuyBoxWinner": false,
      "MyOffer": false,
      "IsFulfilledByAmazon": true
    },
    {
      "Shipping": { "CurrencyCode": "USD", "Amount": 0 },
      "ListingPrice": { "CurrencyCode": "USD", "Amount": 7.1 },
      "ShippingTime": {
        "maximumHours": 0,
        "minimumHours": 0,
        "availabilityType": "NOW"
      },
      "SellerFeedbackRating": {
        "FeedbackCount": 1106,
        "SellerPositiveFeedbackRating": 99
      },
      "ShipsFrom": { "Country": "US" },
      "PrimeInformation": { "IsPrime": true, "IsNationalPrime": true },
      "SubCondition": "new",
      "SellerId": "A2G8RGF84BCS13",
      "IsFeaturedMerchant": true,
      "IsBuyBoxWinner": false,
      "MyOffer": false,
      "IsFulfilledByAmazon": true
    },
    {
      "Shipping": { "CurrencyCode": "USD", "Amount": 0 },
      "ListingPrice": { "CurrencyCode": "USD", "Amount": 7.1 },
      "ShippingTime": {
        "maximumHours": 0,
        "minimumHours": 0,
        "availabilityType": "NOW"
      },
      "SellerFeedbackRating": {
        "FeedbackCount": 1106,
        "SellerPositiveFeedbackRating": 99
      },
      "ShipsFrom": { "Country": "US" },
      "PrimeInformation": { "IsPrime": true, "IsNationalPrime": true },
      "SubCondition": "new",
      "SellerId": "A2G8RGF84BCS13",
      "IsFeaturedMerchant": true,
      "IsBuyBoxWinner": false,
      "MyOffer": false,
      "IsFulfilledByAmazon": true
    },
    {
      "Shipping": { "CurrencyCode": "USD", "Amount": 0 },
      "ListingPrice": { "CurrencyCode": "USD", "Amount": 7.1 },
      "ShippingTime": {
        "maximumHours": 0,
        "minimumHours": 0,
        "availabilityType": "NOW"
      },
      "SellerFeedbackRating": {
        "FeedbackCount": 410,
        "SellerPositiveFeedbackRating": 98
      },
      "ShipsFrom": { "Country": "CN" },
      "PrimeInformation": { "IsPrime": true, "IsNationalPrime": true },
      "SubCondition": "new",
      "SellerId": "A3SXSGELLLKOSS",
      "IsFeaturedMerchant": true,
      "IsBuyBoxWinner": false,
      "MyOffer": false,
      "IsFulfilledByAmazon": true
    },
    {
      "Shipping": { "CurrencyCode": "USD", "Amount": 0 },
      "ListingPrice": { "CurrencyCode": "USD", "Amount": 7.2 },
      "ShippingTime": {
        "maximumHours": 0,
        "minimumHours": 0,
        "availabilityType": "NOW"
      },
      "SellerFeedbackRating": {
        "FeedbackCount": 386,
        "SellerPositiveFeedbackRating": 98
      },
      "ShipsFrom": { "Country": "BG" },
      "PrimeInformation": { "IsPrime": true, "IsNationalPrime": true },
      "SubCondition": "new",
      "SellerId": "A1UHXY4BW6Q3ZM",
      "IsFeaturedMerchant": true,
      "IsBuyBoxWinner": false,
      "MyOffer": false,
      "IsFulfilledByAmazon": true
    },
    {
      "Shipping": { "CurrencyCode": "USD", "Amount": 0 },
      "ListingPrice": { "CurrencyCode": "USD", "Amount": 9.99 },
      "ShippingTime": {
        "maximumHours": 48,
        "minimumHours": 24,
        "availabilityType": "NOW"
      },
      "SellerFeedbackRating": {
        "FeedbackCount": 2265,
        "SellerPositiveFeedbackRating": 94
      },
      "ShipsFrom": { "Country": "US" },
      "PrimeInformation": { "IsPrime": false, "IsNationalPrime": false },
      "SubCondition": "new",
      "SellerId": "A1IU3YX86SW5NC",
      "IsFeaturedMerchant": true,
      "IsBuyBoxWinner": false,
      "MyOffer": false,
      "IsFulfilledByAmazon": false
    },
    {
      "Shipping": { "CurrencyCode": "USD", "Amount": 0 },
      "ListingPrice": { "CurrencyCode": "USD", "Amount": 9.99 },
      "ShippingTime": {
        "maximumHours": 48,
        "minimumHours": 24,
        "availabilityType": "NOW"
      },
      "SellerFeedbackRating": {
        "FeedbackCount": 2265,
        "SellerPositiveFeedbackRating": 94
      },
      "ShipsFrom": { "Country": "US" },
      "PrimeInformation": { "IsPrime": false, "IsNationalPrime": false },
      "SubCondition": "new",
      "SellerId": "A1IU3YX86SW5NC",
      "IsFeaturedMerchant": true,
      "IsBuyBoxWinner": false,
      "MyOffer": false,
      "IsFulfilledByAmazon": false
    }
  ],
  "marketplaceId": "ATVPDKIKX0DER"
}

---
public/
| README.md
[ README.md ]
# AnmaSoftV3
 AnmaSoft V3 with telegram Support. Several fixes and code cleaning. 
 Saves into a MySQL database. No front end (yet) since I'm migrating from an old script.

MAIN FEATURES:
- Calculates zero-profit costs for all items in FBA. 
- Track your supplier's payments.  - (UNDER DEV)
- Track the amount of stock you have based on the cost and FBA information. 
- Estimate how many days in stock you've got. 
- Download and show inventory. 
- Download, update and calculate orders. 
- Calculate Customer Refunds
- Download Shipment Information (UNDER DEV)
- Calculate Profits on a Supplier's Pricelist. 
- Advisor on which items to make S&L on FBA. 
- Get all that information on a telegram bot. (UNDER DEV BUT WORKING)

----------------------------------------------------------------
Interested on collaborating? Give me a shout. 

---

routes/
| | log.js
const express = require('express');
const router = express.Router();

/**
 * 
 * SORRY
 * LOGS WERE
 * DEPRECATED
 * 
 */



///* --------------------------------------------------------- */
///* ---------------------ROUTES------------------------------ */
///* --------------------------------------------------------- */
//
///* ---------------------BASICS------------------------------ */
//
//router.get('/', (req, res) => {
//    res.sendFile(path.resolve('public/verLogs.html'));;
//});
//
///* -----------------INVENTORY REPORTS--------------------- */
//
//router.get("/createInventoryReportLog/",(req, res)=> {
//    res.sendFile(path.resolve('logs/createInventoryReport.log'));
//});
//
//router.get("/getInventoryReportLog/",(req, res)=> {
//    res.sendFile(path.resolve('logs/getInventoryReport.log'));
//});
//
//router.get('/updateInventoryInfoLog/', (req, res) => {
//    res.sendFile(path.resolve('logs/updateInventoryInfo.log'))
//});
//
///* -------------------ORDER REPORTS----------------------- */
//
//router.get("/createOrdersReportLog",(req, res)=> {
//    res.sendFile(path.resolve('logs/createOrdersReport.log'));
//});
//
//router.get("/createOrdersReportYesLog",(req, res)=> {
//    res.sendFile(path.resolve('logs/createOrdersReportYes.log'));
//});
//
//router.get("/createOrdersReportLMLog",(req, res)=> {
//    res.sendFile(path.resolve('logs/createOrdersReportLM.log'));
//});
//
//router.get("/getOrdersReportLog",(req, res)=>{
//    res.sendFile(path.resolve('logs/getOrdersReport.log'));
//});
//
//router.get("/updateMissingOrdersLog",(req, res)=> {
//    res.sendFile(path.resolve('logs/updateMissingOrders.log'));
//});
//
//router.get('/estimateOrdersLog',(req, res)=>{
//    res.sendFile(path.resolve('logs/estimateOrders.log'));
//});
//
///* -------------------RETURN REPORTS----------------------- */
//
//router.get("/createReturnsReportLog",(req, res)=>{
//    res.sendFile(path.resolve('logs/createReturnsReport.log'));
//});
//
//router.get("/createReturnsReportYesLog",(req, res)=> {
//    res.sendFile(path.resolve('logs/createReturnsReportYes.log'));
//});
//
//router.get("/getReturnsReportLog",(req, res)=>{
//    res.sendFile(path.resolve('logs/getReturnsReport.log'));
//});
//
///* -------------------CALCULAR CEROS----------------------- */
//
//router.get('/calcularCostosLog', (req, res)=> {
//    res.sendFile(path.resolve('logs/calcularCostos.log'));
//});
//
///* ---------------------TOOLS------------------------------ */
//
//router.get('/smallAndLightLog', (req, res)=> {
//    res.sendFile(path.resolve('logs/smallAndLight.log'));
//});
//
///* ----------------- FOREVER -------------------------------*/
//router.get('/forever1', (req, res)=> {
//    res.sendFile(path.resolve('/root/.forever/qpT_.log'));
//});
//
//router.get('/forever2', (req, res)=> {
//    res.sendFile(path.resolve('/root/.forever/fyim.log'));
//});
//
//router.get('/forever3', (req, res)=> {
//    res.sendFile(path.resolve('/root/.forever/Reip.log'));
//});
//
//
//
module.exports = router;
---
| | routes.js
const express = require('express');
const router = express.Router();
var path = require('path');


/* --------------------------------------------------------- */
/* ---------------------REQUIREMENTS------------------------ */
/* --------------------------------------------------------- */

/* ------------------INVENTORY REPORTS---------------------- */

const inventoryUpdater = require('../src/inventory/updateInventory');
const {calcularStock} = require('../src/inventory/stock/calcularStock')
const {select} = require('../src/shipments/shipmentAdvisor');

/* --------------------ORDER REPORTS------------------------ */

const {orderHandler} = require('../src/orders/orderHandler');
const {profitCalc} = require('../src/orders/profitCalculator');

///* -------------------RETURN REPORTS----------------------- */

const {refundHandler} = require('../src/refunds/refundHandler');

///* -------------------CALCULAR CEROS----------------------- */

const {calcularCostos} = require('../src/finances/calcularCostos.js');

///* ---------------------TOOLS------------------------------ */

const {smallAndLightTool} = require('../src/tools/smallAndLight.js');
const {telebot} = require ('../src/telegramBot')
const {restockCalculator} = require('../src/inventory/stock/restock');
const {feedbackReport} = require ('../src/tools/feedback')

/* --------------------------------------------------------- */
/* ---------------------ROUTES------------------------------ */
/* --------------------------------------------------------- */

/* ---------------------BASICS------------------------------ */

router.get('/', (req, res) => {
    res.send(`Panel de control`);
});

router.get('/controlPanel', (req, res) => {
    
    res.sendFile(path.resolve('public/controlPanel.html'));
});

/* -----------------INVENTORY REPORTS--------------------- */

router.get("/inventory/",(req, res)=> {
    inventoryUpdater.inventory();
    res.send('Lanzado inventory');
});

router.get("/calcularStock/",(req, res)=> {
    calcularStock();
    restockCalculator();
    res.send('Lanzado Calcular Stock y Restock');
});

/* -------------------ORDER REPORTS----------------------- */

router.get("/orderHandler/",(req, res)=> {
    orderHandler();
    res.send('Lanzado Order Handler');
});

router.get("/profitCalculator/",(req, res)=> {
    profitCalc();
    res.send('Lanzado Profit Calculator');
});

/* -------------------RETURN REPORTS----------------------- */

router.get("/refundHandler/",(req, res)=> {
    refundHandler();
    res.send('Lanzado Refund Handler');
});

/* -------------------CALCULAR CEROS----------------------- */

router.get('/calcularCostos', (req, res)=> {
    calcularCostos();
    res.send(`Se estan calculando costos.`);
});

/* -------------------SHIPMENT TOOLS----------------------- */

router.get('/shipments', (req, res)=> {
    select();
    res.send(`Probando shipments.`);
});

/* ---------------------TOOLS------------------------------ */

router.get('/smallAndLightTool', (req, res)=> {
    smallAndLightTool();
    res.send(`Reporte de Small and Light en proceso. Ver LOG!.`);
});

router.get('/restock', (req, res)=> {
    restockCalculator();
    res.send(`Restock a la vista..`);
});

router.get('/feedback', (req, res)=> {
    feedbackReport();
    res.send(`Feedback stuff`);
});


module.exports = router;
---
src/
| | basicReq.js
//requests for mysql and SP-API, promises, telegram bot. This

const mysql = require('mysql2');
require('dotenv').config({path: `.env.${process.env.NODE_ENV}`})
const util = require('util');

const pool = mysql.createPool({
  connectionLimit : 50, //important
  host     : process.env.DBHOST,
  user     : process.env.DBUSER,
  password : process.env.DBPASSWORD,
  database : process.env.DBDATABASE,
  debug    :  false
},()=>console.log('Connected!'));

let query = util.promisify(pool.query).bind(pool);

module.exports = {query}
---
| | cronjobs.js
const CronJob = require("cron").CronJob;
const { calcularCostos } = require("./finances/calcularCostos");
const { updInventory } = require("./inventory/updateInventory");
const { calcularStock } = require("./inventory/stock/calcularStock");
const { orderHandler } = require("./orders/orderHandler");
const { profitCalc } = require("./orders/profitCalculator");
const { refundHandler } = require("./refunds/refundHandler");
const { feedbackHandler } = require("./telegramBot");
const { updateStorageFees } = require("./finances/calcularStorage");
const {query} = require("./basicReq");

//EVERY 30 MINUTES:
const cron30min = new CronJob(
  "*/30 * * * *",
  () => {
    feedbackHandler();
    calcularCostos();
    console.log("cron30min iniciado");
  },
  null,
  true,
  "Atlantic/St_Helena"
);

//EVERY 2 HOURS:

const cron2hs1 = new CronJob(
  "00 */2 * * *",
  () => {
    orderHandler();
    console.log("cron2hs1 iniciado");
  },
  null,
  true,
  "Atlantic/St_Helena"
);

const cron2hs2 = new CronJob(
  "10 */2 * * *",
  () => {
    profitCalc();
    console.log("cron2hs2 iniciado");
  },
  null,
  true,
  "Atlantic/St_Helena"
);

//EVERY 4 HOURS:

const cron4hs1 = new CronJob(
  "04 */4 * * *",
  () => {
    updInventory();
    console.log("cron4hs1 iniciado");
  },
  null,
  true,
  "Atlantic/St_Helena"
);

const cron4hs2 = new CronJob(
  "15 */4 * * *",
  () => {
    calcularStock();
    console.log("cron4hs2 iniciado");
  },
  null,
  true,
  "Atlantic/St_Helena"
);

const cron4hs3 = new CronJob(
  "08 */4 * * *",
  () => {
    refundHandler();
    console.log("cron4hs1 iniciado");
  },
  null,
  true,
  "Atlantic/St_Helena"
);

//EVERYDAY:

const cronEveryday = new CronJob(
  "30 0 * * *",
  async () => {
    await query("UPDATE datos_pos SET needs_update = 1 WHERE active = 1");
    updateStorageFees();
    console.log("cronEveryday iniciado");
  },
  null,
  true,
  "Atlantic/St_Helena"
);


---
| finances/
| | | calcularCostos.js
//getMyFeesEstimateForSKU

const {query} = require('../basicReq');

let sellingPartner  = require (`../sellerApiReq`);


class precioItem {
    constructor(sku,precio,fee,costo,cero,offset,last_update,supplierId,buyerId) {
        this.sku = sku;
        this.precio = precio;
        this.fee = fee;
        this.costo = costo;
        this.cero = cero;
        this.offset = offset;
        this.last_update = last_update;
        this.supplierId = supplierId;
        this.buyerId = buyerId;
    }
}

itemsList = [];

async function queryDB(){
    let res = await query(`SELECT * FROM datos_pos WHERE active = '1' AND needs_update = '1' GROUP BY sku ORDER BY sku`);
    let res2 = await query(`SELECT * FROM datos_costos`);
    let i = 0;
    let skuList = [];
    //console.log(res.length);
    while (i < res.length) {
        let lpm = new precioItem(res[i].sku,100,0,res[i].total_cost,100,100,null,res[i].provider_id,res[i].buyer_id);  
            for (let j=1;j<res.length;j++){
                if (typeof res[j]?.length != 'undefined'){
                if (res[i].sku == res2[j].sku){
                    lpm.cero = parseFloat(res2[j].cero).toFixed(3); 
                    lpm.precio = parseFloat(res2[j].cero).toFixed(3); 
                }
                else
                break;
            }
        }
        skuList.push(lpm);
        i++;
        }
        if (i> 0){
            console.log(`Son ${i} SKUs`);
        return skuList;
        }
    else
    {
        console.log('No hay skus pendientes');
        return 0;
    }
}


async function calcularFee(id){
    let res = await sellingPartner.callAPI({
        operation:'getMyFeesEstimateForSKU',
        endpoint:'productFees',
        body:{
            FeesEstimateRequest: {
                MarketplaceId: 'ATVPDKIKX0DER',
                IsAmazonFulfilled: true,
                PriceToEstimateFees:{
                ListingPrice:{
                    Amount: id.precio,
                    CurrencyCode: 'USD',
                },
                },
                Identifier: id.sku,
                }
            },
                
        path: {
                SellerSKU: id.sku
                }
                }
);
//console.log(res);
    if(typeof res.FeesEstimateResult?.FeesEstimate == 'undefined' || res.FeesEstimateResult?.Status == 'ClientError'){
        console.log(`Error por status ${res?.FeesEstimateResult?.Status} ${res.toString()}`);
        console.table(res?.FeesEstimateResult?.Error)
        return 0;
    }
    console.log(res.FeesEstimateResult?.FeesEstimate?.TotalFeesEstimate?.Amount)
    id.fee = res.FeesEstimateResult?.FeesEstimate?.TotalFeesEstimate?.Amount;
    return (id);
}


function calcularOffset(id){
    let fee = id.fee;
    let retorno = id;
    let offset = retorno.precio - fee - retorno.costo;

    if ((offset > 0.02) || (offset < 0.02))
{
    if (retorno.last_update == null)
    console.log(`Primera vuelta de ${retorno.sku}`);
        retorno.precio -= offset;
        retorno.offset = offset;
        retorno.fee = fee;
        retorno.last_update = new Date().toISOString().slice(0,19) + '+00:00';
        //console.log(retorno);
        return retorno;
}
else
//console.log(retorno);
console.log(`Todo sigue igual.`)
}

async function actualizarDB(id){
    //Check if exists
    res = await query (`SELECT * FROM datos_costos WHERE sku = '${id.sku}'`);
    if (res.length > 0)
    {
        await query (`UPDATE datos_costos SET cero = '${id.cero}',check_cero = '${id.offset}',last_updated = '${id.last_update}' WHERE sku = '${id.sku}'`);
        await query (`UPDATE datos_pos SET needs_update = 0 WHERE sku = '${id.sku}'`);
        console.log(`SKU ${id.sku} Actualizado.`);
    }
    else 
    {
        await query (`INSERT INTO datos_costos (sku,costo,cero,profit30,profit50,check_cero,last_updated,hard_top,hard_low_MAP,buyerId,supplierId) VALUES ('${id.sku}','${id.costo}','${id.cero}','0','0','${id.offset}','${id.last_update}','0','0','${id.buyerId}','${id.supplierId}')`);
        await query (`UPDATE datos_pos SET needs_update = 0 WHERE sku = '${id.sku}'`);
        console.log(`SKU: ${id.sku} Agregado.`)
    }
    
}


async function calcularCostos(){
    let item = await queryDB();
        //console.log(item);
        if (typeof item === 'undefined'){
            return 0;
        }
   for (let i = 0; i < item.length; i++) {
    console.log(`Actualizando ${item[i].sku}`);
        let vuelta1 = await calcularFee(item[i]);
        if (vuelta1 == 0){
            console.log(`ERROR CATASTROFICO ${item[i].sku}`)
            continue;
        }
        let vuelta2 = calcularOffset(vuelta1);
        while (vuelta2?.offset >0.02)
        {
            vuelta1 = await calcularFee(vuelta2);
            vuelta2 = calcularOffset(vuelta1);
        };
        test = vuelta2;
        if (!test) continue;
        test.cero = test?.precio;
        console.log(`El precio se ha actualizado. Ahora es ${test?.cero}`);
        await actualizarDB(test); 
        }        
    }

module.exports = {calcularCostos};

---
| | | calcularStorage.js
const {query} = require('../basicReq');

const feetToInches = 1/12;

async function getItems(){
    return await query(`SELECT * FROM datos_items WHERE weight > 0`);
}

async function getPos(sku) {
    return await query(`SELECT * FROM datos_pos WHERE sku = '${sku}'`);
}

async function updateStorageFees() {
    const fecha = new Date().getMonth();
    let items = await getItems();
    if (items.length > 0) {
        for (const item of items){
    let width = item.width * feetToInches;
    let length = item.length * feetToInches;
    let height = item.height * feetToInches;
    let weight = item.weight * feetToInches;
    let cubicFeet = width * height * length;
    let tipo ="";
    let storage = 0;
    if (length > 18 || width > 14 || height > 8 || weight > 20){
        if (fecha >= 10){
            tipo = 'OVERSIZE - Q4';
            storage = cubicFeet * 1.20;
        }
        else
        {
            tipo = 'OVERSIZE - Q1/2/3';
            storage = cubicFeet * 0.48;
        }
    }
    else
    {
        if (fecha>= 10){
            tipo = 'STANDARD - Q4';
            storage = cubicFeet * 2.4;
        }
        else
        {
            tipo = 'STANDARD - Q1/2/3';
            storage = cubicFeet * 0.75;
        }
    }
    let todo = await getPos(item.sku);
        todo.forEach(itemEnPo=>{
            //console.log(itemEnPo.cost ," ",itemEnPo.label ," ", itemEnPo.shipment ," ", storage ," ", itemEnPo.manualfee);
            let totalcost = itemEnPo.cost + itemEnPo.label + itemEnPo.shipment + storage + itemEnPo.manualfee;
            totalcost = parseFloat(totalcost.toFixed(3));
            saveItem({storage: storage,totalcost:totalcost,id:itemEnPo.id});
            console.log(`Saved: ${item.sku} antes: ${itemEnPo.monthlyfee?.toFixed(3)} y ahora: ${storage.toFixed(3)}.`);
        })    
}
}
console.log(`Actualizado Strorage Fee. Procediendo a actualizar los monthly en suma.`);
await updateMonthlyStorageFees();

}

async function saveItem(item){
    await query(`UPDATE datos_pos SET monthlyfee = '${item.storage.toFixed(3)}', total_cost = ${parseFloat(item.totalcost).toFixed(3)} WHERE id = '${item.id}'`);
}

async function getAllPOs(){
    return await query (`SELECT * FROM datos_pos WHERE date_po != '-'`);
}


async function updateMonthlyStorageFees(){
let hoy = new Date();
let pos = await getAllPOs();
for (let item of pos){
    let fecha = new Date (item.date_po);
    let meses = Math.ceil(Math.abs(fecha-hoy) / (1000 * 60 * 60 * 24 * 30));
    let monthlyNuevo = parseFloat(item.monthlyfee * meses).toFixed(3);
    let totalcost = item.cost + item.label + item.shipment + item.manualfee + monthlyNuevo;
    await saveNewMonthly(monthlyNuevo,totalcost,item.id);
    console.log(`Saved ${item.sku} de ${item.monthlyfee_total} a ${monthlyNuevo}`);
}
console.log(`monthlyfee total actualizado.`)
}
async function saveNewMonthly(mft,tc,id){
    mft = parseFloat(mft).toFixed(3);
    tc = parseFloat(tc).toFixed(3);
    await query (`UPDATE datos_pos SET monthlyfee_total = '${mft}', total_cost = '${tc}' WHERE id = ${id}`);
}

module.exports = {updateStorageFees};
---
| | ganancias/
| | | | calcularGanancias.js
const {query} = require('../basicReq');

let sellingPartner  = require (`../sellerApiReq`);


---
| | payments/
| | | | payments.js
/*

UNDER DEVELOPMENT


Bueno, me la re complique al pedo. Si es un pago parcial que se maneje. 
Si es un pago de una PO, se paga la PO, si es un expense, se maneja sin PO. 
Si es pago parcial, se paga parcial y se deja ahi boyando. UN SOLO PAGO. no subpagos. 
*/
/*
UN PAGO CONTIENE: 
    this.id; //PAYMENT ID.
    this.type = type; //Supplier - Expense - Settlement - Refund - Sale
    this.amount = amount; //Amount PAID.
    this.description = description; //Some reference.
    this.supplierId = supplierId; // Supplier Tied to
    this.invoiceId = invoiceId; //Invoice Id for search
    this.netTerms = netTerms; //Terms. (EN DIAS)
    this.paymentDate = paymentDate; //When we paid
    this.dueDate = dueDate; //When should have been paid by
    this.poNumber = poNumber; // PO


----------------------------------------------------------------*/

const {query} = require('../../basicReq');

class Payment { 
    constructor(type,amount,description,supplierId,invoiceId,netTerms,paymentDate,dueDate,poNumber,id){
    if (typeof id !== 'undefined')
        this.id = id; //PAYMENT ID.
        else
        this.id;
    this.type = type; //Supplier - Expense - Settlement - Refund - Sale
    this.amount = amount; //Amount PAID.
    this.description = description; //Some reference.
    this.supplierId = supplierId; // Supplier Tied to
    this.invoiceId = invoiceId; //Invoice Id for search
    console.log(`Acabo de guardar como invoice id: ${this.invoiceId} que vino como ${invoiceId}`);
    this.netTerms = netTerms; //Terms. (EN DIAS)
    this.paymentDate = paymentDate; //When we paid
    this.dueDate = dueDate; //When should have been paid by
    this.poNumber = poNumber; // PO
    }

    
static async loadPayment(id) {
    //if the idea is to update a payment, I can load it just for you.
    try {
        let pago = await query(`SELECT * FROM payments WHERE id = '${id}'`);
    if (typeof pago !== 'undefined') { 
        return new Payment (pago[0].type, pago[0].amount, pago[0].description,pago[0].supplierId,pago[0].invoiceId,pago[0].netTerms,pago[0].paymentDate,pago[0].dueDate,pago[0].poNumber,pago[0].id);
    }
    else {console.warn(`Payment ID: ${id} not found`); return 0;}}
    catch (e) {
        console.warn(`Catched! `,e);
        return -1;
    }
}
async savePayment(){
    //Once everything's said and done, save the payment, and save the payment into said PO. 
    try {
        if (typeof this.id == 'undefined') {
            query(`INSERT INTO payments (type,amount,description,supplierId,invoiceId,netTerms,paymentDate,dueDate,poNumber) VALUES ('${this.type}','${this.amount}','${this.description}','${this.supplierId}','${this.invoiceId}','${this.netTerms}','${this.paymentDate}','${this.dueDate}','${this.poNumber}')`); //INSERTS NEW ROW 
        }
        else{
            query(`REPLACE INTO payments (id,type,amount,description,supplierId,invoiceId,netTerms,paymentDate,dueDate,poNumber) VALUES ('${this.id}','${this.type}','${this.amount}','${this.description}','${this.supplierId}','${this.invoiceId}','${this.netTerms}','${this.paymentDate}','${this.dueDate}','${this.poNumber}')`); //TRIES TO UPDATE DB
        }
    }
    catch (e){
        console.warn(`Catched! `,e);
        return -1; // ERROR CODE -1
    }
    return true; //EVERYTHING WELL
}


async paymentPOVerification(poNumber){
    //te dice si hay un pago para esta PO.
    let res = await query(`SELECT * FROM payments WHERE poNumber = '${poNumber}'`)
    if ( typeof res != 'undefined')
    {   //hay un pago. Devolver id
        return res[0].id;
    }
    return 0;
}

pay(amount){
    this.amount += amount;
    this.paymentDate = new Date ().toISOString();
}

static async payByPO(poNumber,amount){
    //PO Number es obvio, el numero de PO. Amount, cuanto se paga / agrega si ya existe.
    //Hay que ver si existe... 
    let pago;
    let id = await this.paymentPOVerification(poNumber);
    if (id != 0 || typeof id != 'undefined'){ 
        //Si existe, cargo el pago.
        pago = await Payment.loadPayment(pago.id);
        //Cargado el pago, ahora le sumo el amount.
        if (pago != -1){
            pago.pay(amount);
        return await pago.savePayment() // TRUE O ERROR DE SAVE
        }
        return -1; //PAGO MAL CARGADO.
    }
    return 0; //ERROR DE PAYBYPO. No existe la PO. 
}

static async telePayment (obj){
    //Recibo un pago de Telegram. Subo al toque. 
    let newTelePay = new Payment (obj.type,obj.amount,obj.description,obj.supplierId, obj.invoiceId ,obj.netTerms,obj.paymentDate,obj.dueDate,obj.poNumber,obj.id);
    let res = newTelePay.savePayment();
    return res;
}

}


module.exports = Payment;


---
| inventory/
| | | newUpdateInvInfo.js
//Updates the images, dimensions and weight of an item once a day. 

const {query} = require('../basicReq');

let sellingPartner  = require (`../sellerApiReq`);

async function cleanResponse(someRes){
    let cmtoi = 1 / 2.54;
    let length,width,height,weight = 0;
   if (someRes?.attributes?.item_package_dimensions){
    if (someRes.attributes.item_package_dimensions[0]?.length?.unit == 'centimeters'){
        length = someRes.attributes.item_package_dimensions[0]?.length?.value * cmtoi;
        width = someRes.attributes.item_package_dimensions[0]?.width?.value * cmtoi;
        height = someRes.attributes.item_package_dimensions[0]?.height?.value * cmtoi;
    }
    else
    {console.log(`HAY UNO QUE NO TRAIA CMS`)}
    if (someRes?.attributes?.item_package_weight[0]?.unit == 'kilograms'){
        weight = someRes?.attributes?.item_package_weight[0]?.value * 2.205;
    }
    else if(someRes?.attributes?.item_package_weight[0]?.unit == 'pounds'){
        weight = someRes?.attributes?.item_package_weight[0]?.value;
    }
    else
    console.log(`HAY UNO QUE NO TRAIA KG NI LB!!!`)
    if (!length || !height || !width || !weight){
        console.log(`Error en alguno.`)
        return 0;
    }
    else
    {
        length = parseFloat(length.toFixed(3));
        height = parseFloat(height.toFixed(3));
        width = parseFloat(width.toFixed(3));
        weight = parseFloat(weight.toFixed(3))
        return {width:width,height:height,length:length,weight:weight}
    }
   };
}

async function getListingsItem(sku){
    try {
        let res = await sellingPartner.callAPI({
            operation:'getListingsItem',
            endpoint:'listingsItems',
            query:     
            {
             marketplaceIds : process.env.market_id,
             //includedData : includedData
            },
            path: {
                    sku: sku,
                    sellerId: process.env.sellerId,
                    }
                    }
    );
        //console.log(res.summaries[0]?.mainImage?.link)
        return res.summaries[0]?.mainImage?.link;
    }
    catch (e){
        e.code=='NOT_FOUND'?console.log('No estaba la imagen'):console.log(e);
        return 'https://static8.depositphotos.com/1009634/988/v/450/depositphotos_9883921-stock-illustration-no-user-profile-picture.jpg';
    }
}

async function saveItem(item){
    try{
    await query (`UPDATE datos_items SET height = '${item.height}', width ='${item.width}', length = '${item.length}', weight = '${item.weight}',imageurl = '${item.url}' WHERE 'sku' = '${item.sku}'`)
    }
    catch (e){
        console.log(e)
    }
}

async function getCatalogItem(asin) {
    try {
        let res = await sellingPartner.callAPI({
            operation:'getCatalogItem',
            endpoint: 'catalogItems',
            query: {
                marketplaceIds: ['ATVPDKIKX0DER'],
                includedData: ['attributes'],
            },
            path: {
                asin: asin
            },
            options:{
                version:'2020-12-01'
              }
        })
    //console.log(res.attributes.item_package_dimensions[0]);
    let clean = await cleanResponse(res);
    clean.asin = asin;
    return clean;
    }
    catch (e){
        e.code=='NOT_FOUND'?console.log('No existe mas el item'):console.log(e);
        return 0;
    }
}

async function getAllItems(){
    let e = await query(`SELECT * FROM datos_items WHERE 'ignorar' = 0`);
    return (e.length > 0)?e:0;
}

async function ignoreItem(asin){
    await query (`UPDATE datos_items SET ignorar = 1 WHERE asin = '${asin}'`);
}

async function updateItemInfo (){
    let items = await getAllItems();
    for (let item of items){ 
        let catItem = await getCatalogItem(item.asin);
        if (catItem != 0){
            catItem.url = await getListingsItem(item.sku);
            console.log(catItem.asin)
            saveItem(catItem);
        }
        else
        {
            console.log(`Error en ${item.asin}, posiblemente eliminado, lo ignoro de ahora en mas`);
            await ignoreItem(item.asin);
        }
    }
}


module.exports = {updateItemInfo}

---
| | stock/
| | | | calcularStock.js
//How much money a user (or admin) has in stock. (Doesn't yet include PAYMENTS, but it will.)


const {query} = require('../../basicReq');

async function pedirStock(){
    let stock = await query (`SELECT * FROM datos_items WHERE afnfulfillablequantity > 0`);
    let pureStock = [];
    for (let i = 0; i < stock.length; i++){
        let productoEnStock = {sku: stock[i].sku, cantidad: stock[i].afnfulfillablequantity, comprador: 0, user: '', cost: 0,total: 0,fnsku: stock[i].fnsku,userid:0};
        pureStock.push(productoEnStock);
    };
    //console.log(pureStock);
    return pureStock;
}

async function pedirPagos(){
    //Pedir Pagos Pendientes de envio. Por ahora, ponemos esto en 0
    return 0;
}

async function pedirPOs(){
    //Pedir POs General
    let POs = await query (`SELECT * FROM datos_pos WHERE active = 1`);
    let purePOs = [];
    for (let i = 0; i < POs.length; i++){
        let producto = {sku: POs[i].sku, cost: POs[i].cost, comprador: POs[i].buyer_id}
        purePOs.push(producto);
    }
    //console.log(purePOs);
    return purePOs;
}

async function pedirOrdenesReceivingMissing(){
    //Pedir Pagos Pendientes de envio. Por ahora, ponemos esto en 0
    return 0;
}

async function pedirCompradores(){
    let compradores = await query (`SELECT * FROM usuarios`);
    let pureCompradores = [];
    for (let i = 0; i < compradores.length; i++){
        let comprador = {id: compradores[i].id, user: compradores[i].user};
        pureCompradores.push(comprador);
    }
    //console.log(pureCompradores);
    return pureCompradores;
}

async function unirInventario(){
    //Calcular el valor del inventario, y ponerlo en un array con item, comprador, precio, stock, total.
    let stock = await pedirStock();
    let compradores = await pedirCompradores();
    let POs = await pedirPOs();
    console.log(`Informacion servida, calculando...`);
    //let costoTotal = 0;

    stock.forEach((product)=> {
        let costoProducto = POs.find(item => item.sku == product.sku);
        if (typeof costoProducto == 'undefined'){
            console.log(`${product.sku} no tiene costo, COSTO 0 REVISAR!!`);
            //console.log(`Para el prod. ${product.sku} el costo es: 0`)
            product.cost = 0;
        }
        else
        {
        //console.log(`Para el prod. ${product.sku} el costo es: ${costoProducto.cost}`)
        product.cost = costoProducto.cost;
        //console.log(`El comprador es: ${costoProducto.comprador}`)
        product.comprador = costoProducto.comprador;
        }
        let datosComprador = compradores.find(buyer => buyer.id == product.comprador);
        if (typeof datosComprador === 'undefined'){
            //console.log(`El user es indefinido. Se usa 666`)
            product.user = 666;
            product.userid = 666;
        }
        else{
            //console.log(`El user es: ${datosComprador.user}`)
            product.userid = datosComprador.id;
        }
        product.total = product.cost * product.cantidad;
        console.log(`Prod: ${product.sku} tiene asignado: ${product.total}`);
    })
    return stock;
}

async function calcularStock(){
    let stock = await unirInventario();
    let buyers = new Set ();
    stock.forEach(product => {
        buyers.add(product.userid);
    })
    buyers = Array.from(buyers); //tengo set con id de compradores.
    buyersStock = []; //Array de compradores y su stock.
    buyers.forEach(buyer => {
        let inHand = {buyerid: buyer, stock: 0}
        stock.forEach(product => {
            if (product.userid == buyer){
                inHand.stock +=product.total;
            }
            
        }) 
        buyersStock.push(inHand);
    });
    buyersStock.forEach(buyer => {
        query(`REPLACE INTO botazonStock (id,lastUpdated,amount) VALUES (${buyer.buyerid},'${new Date().toISOString()}',${buyer.stock})`);
    })
}

module.exports = {calcularStock}
---
| | | | restock.js
//Obtener ventas last 30 days. 
//Calcular promedio 30 D.
//Calcular Promedio 15 D.
//Calcular Promedio 7 D.

const {query} = require('../../basicReq');

async function queryOrdenes(){
    let res = await query(`SELECT * FROM reporte_prueba WHERE confirmed = 1`);
        if (res.length > 0 || res.length != 'undefined'){
            return res;
        }
        else
        {
            console.log('No hay ordenes');
            return 0;
        }
}

async function queryInventory(){
    let res = await query(`SELECT * FROM datos_items`);
    if (res.length > 0 || res.length != 'undefined'){
        return res;
    }
    else
    {
        console.log('No hay items');
        return 0;
    }
}

async function getInventory(){
    let inventory = await queryInventory();
    let cleanInv = []
    if (inventory == 0){
        return 0;
    }
    inventory.forEach(item => {
        let pusheable = {sku: item.sku, quantity: item.afnfulfillablequantity}
        cleanInv.push(pusheable);
    })
    //console.log(cleanInv);
    return cleanInv;
}

var today = new Date();
var last30 = new Date(new Date().setDate(today.getDate() - 30));

async function getOrders(){
    let orders = await queryOrdenes();
    if (orders == 0){ return 0;}
    last30orders = [];
    orders.forEach(order => {
        if (new Date (order.order_date) > last30){
            //console.log(`${new Date(order.order_date).toISOString()} es mayor a ${last30.toISOString()}`)
            last30orders.push(order);
        }
    })
    let skus = new Set ();
    last30orders.forEach(order => {
        skus.add(order.sku);
    })
    //
    skus = Array.from(skus); //tengo set con skus.
    soldOneMonth = []; //Array de skus y su qty, con su comprador.
    skus.forEach(sku => {
        let sold = {sku: sku, sold: 0,comprador: 0}
        last30orders.forEach(order => {
            if (order.sku == sku){
                sold.sold +=order.quantity;
                sold.comprador = order.id_comprador;
            }
        }) 
        soldOneMonth.push(sold);
    });
    //console.log(soldOneMonth); //Todo finalizado.
    return soldOneMonth;
}

async function saveRestock(res){
    await query (`REPLACE INTO datosRestock (sku,sold,comprador,supplierDelay,currentStock,daysInStock) VALUES ('${res.sku}','${res.sold}','${res.comprador}','0','${res.inStock}','${res.days}')`);
}

async function restockCalculator(){
    console.log('RestockCalculator in action')
    //Aca va a ir la funcion que da todo. Para no cambiar routes.
    let lastMonthOrders = await getOrders();
    let currentInventory = await getInventory();
    console.log(`Tengo la primera tanda`)
    let stockNotifications = [];
    currentInventory.forEach(item => {
        let notif = {sku: item.sku, sold: 0,inStock: 0,comprador: 0,days: 0}
        lastMonthOrders.forEach(order => {
            if (item.sku == order.sku){
                notif.comprador = order.comprador;
                notif.sold = order.sold;
                notif.inStock = item.quantity;
                notif.days = Math.floor(item.quantity * 30 / notif.sold);
                //console.log(notif);
                stockNotifications.push(notif);
            }
        })
    })
    console.log(`Guardando restock`);
    await query(`TRUNCATE TABLE datosRestock`);
    for (let i = 0; i < stockNotifications.length; i++) {
        await saveRestock(stockNotifications[i]);
    }
    console.log('done.')
}



module.exports = {restockCalculator}
---
| | | updateInventory.js
//Inventory.js should be able to handle all requests at once, wait, udpate, without the usage of any further files other than includes to subfunctions. 

let sellingPartner  = require (`../sellerApiReq`);

const {query} = require('../basicReq');
const {updateItemInfo} = require('./newUpdateInvInfo')

class item {
  constructor(sku,fnsku,asin,productName,condition,yourprice,afnlistingexists,afnwarehousequantity,afnfulfillablequantity,afnunsellablequantity,afnreservedquantity,afntotalquantity,afnperunitvolume,afninboundworkingquantity,afninboundshippedquantity,afninboundreceivingquantity,afnresearchingquantity){
  this.sku = sku;
  this.fnsku = fnsku;
  this.asin = asin;
  this.productName = productName;
  this.condition = condition;
  this.yourprice = yourprice;
  this.afnlistingexists = afnlistingexists;
  this.afnwarehousequantity = afnwarehousequantity;
  this.afnfulfillablequantity = afnfulfillablequantity;
  this.afnunsellablequantity = afnunsellablequantity;
  this.afnreservedquantity = afnreservedquantity;
  this.afntotalquantity = afntotalquantity;
  this.afnperunitvolume = afnperunitvolume;
  this.afninboundworkingquantity = afninboundworkingquantity;
  this.afninboundshippedquantity = afninboundshippedquantity;
  this.afninboundreceivingquantity = afninboundreceivingquantity;
  this.afnresearchingquantity = afnresearchingquantity;
  this.isEnrolledSL;
  }
};

async function crearReporteAmazon()
{
    try {  
        let res = await sellingPartner.callAPI({
          operation:'createReport',
          endpoint:'reports',
          body:{
        reportType:'GET_FBA_MYI_ALL_INVENTORY_DATA',
        marketplaceIds:['ATVPDKIKX0DER']
      }
    })
      console.log(`El report ID es ${res.reportId}`);
        return res;
      } catch(e){
        console.log(e);
      }
}

async function getReport(id){
  try {
      let report_document = await sellingPartner.callAPI({
    operation:'getReport',
    endpoint:'reports',
    path:{
      reportId: id 
    }
  });
  return (report_document);
    } catch(e){
      console.log(e);
    }
  };

async function getReportDocuments(report){
  try {
    let report_document = await sellingPartner.callAPI({
    operation:'getReportDocument',
    endpoint:'reports',
    path:{
      reportDocumentId: report
    }
  });
  console.log(report_document);
    return (report_document);
    } catch(e){
      console.log(e);
    }
};

async function downloadReport (finalfinal) {
  try {
    let sellingPartner = new SellingPartnerAPI({
      region:'na',
      refresh_token:process.env.AmzToken });
      let report = await sellingPartner.download(finalfinal, {
        json:true,
        });
      //log(report);
      return report;
      } 
      catch(e)
      {
        console.log(e);
      }
};


async function actualizarDB(datos){
  console.log('Arranco a Actualizar...');
  let list = [];
  for (let i = 0; i < datos.length; i++){
    console.log(`item ${i}`);
      sku = datos[i].sku;
      fnsku = datos[i].fnsku;
      asin = datos[i].asin;
      productName = datos[i]['product-name'].replace(/[&\/\\#,+()$~%.'":*?<>{}]/g, "");
      condition = datos[i].condition;
      yourprice = datos[i]['your-price'];
      afnlistingexists = datos[i]['afn-listing-exists'];
      afnwarehousequantity = datos[i]['afn-warehouse-quantity'];
      afnfulfillablequantity = datos[i]['afn-fulfillable-quantity'];
      afnunsellablequantity = datos[i]['afn-unsellable-quantity'];
      afnreservedquantity =  datos[i]['afn-reserved-quantity'];
      afntotalquantity = datos[i]['afn-total-quantity'];
      afnperunitvolume = datos[i]['per-unit-volume'];
      afninboundworkingquantity = datos[i]['afn-inbound-working-quantity'];
      afninboundshippedquantity = datos[i]['afn-inbound-shipped-quantity'];
      afninboundreceivingquantity = datos[i]['afn-inbound-receiving-quantity'];
      afnresearchingquantity = datos[i]['afn-researching-quantity'];
      let Producto = new item (sku,fnsku,asin,productName,condition,yourprice,afnlistingexists,afnwarehousequantity,afnfulfillablequantity,afnunsellablequantity,afnreservedquantity,afntotalquantity,afnperunitvolume,afninboundworkingquantity,afninboundshippedquantity,afninboundreceivingquantity,afnresearchingquantity);
      list.push(Producto);
  }
  list.forEach(x => {(async() =>{
    x.isEnrolledSL = await isSL(x.sku);
    console.log(`${x.sku} status${x.isEnrolledSL}`);
    let existencia = await verificarExistencia(x.sku);
    if (existencia)
    await updateRow(x);
    else
    await createRow(x);
  })()    
  })
};

async function isSL(sku){
  try {
    let sellingPartner = new SellingPartnerAPI({
        region:'na', // The region to use for the SP-API endpoints ("eu", "na" or "fe")
        refresh_token:process.env.AmzToken // The refresh token of your app user
      });
  let res = await sellingPartner.callAPI({
    operation:'getSmallAndLightEnrollmentBySellerSKU',
    endpoint:'fbaSmallAndLight',
    path: {sellerSKU: sku},
    query:{marketplaceIds: 'ATVPDKIKX0DER'}
            });
      if (res.status == 'ENROLLED')
      return 1;
      else
      return 0;   
    } catch(e){
      console.log(e);
    }
}

async function updateRow(item){
  console.log(`EXISTE ${item.sku}`);
  await query (`UPDATE datos_items SET fnsku = '${item.fnsku}' ,asin = '${item.asin}', name = '${item.productName}', item_condition = '${item.condition}' , yourprice = '${item.yourprice}' , afnlistingexists = '${item.afnlistingexists}' , afnwarehousequantity = '${item.afnwarehousequantity}' , afnfulfillablequantity = '${item.afnfulfillablequantity}' , afnunsellablequantity = '${item.afnunsellablequantity}' , afnreservedquantity = '${item.afnreservedquantity}' , afntotalquantity = '${item.afntotalquantity}' , perunitvolume = '${item.afnperunitvolume}' , afninboundworkingquantity = '${item.afninboundworkingquantity}' , afninboundshippedquantity = '${item.afninboundshippedquantity}' , afninboundreceivingquantity = '${item.afninboundreceivingquantity}',afnresearchingquantity = '${item.afnresearchingquantity}', isEnrolledSL = '${item.isEnrolledSL}' WHERE sku = '${item.sku}'`);
  console.log(`Contenido de ${item.sku} actualizado.`);
};

async function createRow(item){
  console.log(`NO EXISTE ${item.sku}`);
  await query (`INSERT INTO datos_items (sku,fnsku,asin,name,item_condition,yourprice,afnlistingexists,afnwarehousequantity,afnfulfillablequantity,afnunsellablequantity,afnreservedquantity,afntotalquantity,perunitvolume,afninboundworkingquantity,afninboundshippedquantity,afninboundreceivingquantity,afnresearchingquantity,isEnrolledSL) VALUES ('${item.sku}','${item.fnsku}','${item.asin}','${item.productName}','${item.condition}','${item.yourprice}','${item.afnlistingexists}','${item.afnwarehousequantity}','${item.afnfulfillablequantity}','${item.afnunsellablequantity}','${item.afnreservedquantity}','${item.afntotalquantity}','${item.afnperunitvolume}','${item.afninboundworkingquantity}','${item.afninboundshippedquantity}','${item.afninboundreceivingquantity}','${item.afnresearchingquantity}',${item.isEnrolledSL})`);
  console.log(`Contenido de ${item.sku} agregado.`);
};

async function verificarExistencia(sku) {
  console.log(`Verificar Existencia ${sku}`);
  existencia = await query(`SELECT * FROM datos_items WHERE sku = '${sku}'`);
  if (typeof existencia[0] != 'undefined')
  return true;
  else
  return false;
};

async function updInventory(){
  let finalReport;
  let reportId = await crearReporteAmazon();
  let reportDocument = await getReport(reportId.reportId); //
  let status = reportDocument.processingStatus;
  while ((status == 'IN_QUEUE') || (status == 'IN_PROGRESS')){
    console.log(`Patience, my young padawan. ${reportDocument.processingStatus}`)
    reportDocument = await getReport(reportId.reportId);
    status = reportDocument.processingStatus;
    if (status == 'DONE'){
      break;
      }
      else if (status == 'CANCELLED' || status == 'FATAL'){
        console.log('exploto todo.');
      }
  }
  if (status == 'DONE'){
    let downloadUrl = await getReportDocuments(reportDocument.reportDocumentId);
    finalReport = await downloadReport(downloadUrl);
    await actualizarDB(finalReport);
  }
  else
  {
    if (status == 'IN_PROGRESS' || status == ('IN_QUEUE')){
      console.log(`No deberia estar aca... por que saliste?! Si tu status no era DONE?? ${status}`)
    }
    else
    if (status == 'FATAL' || status == 'CANCELLED'){
      console.log(`Algo salio terriblemente mal. Reporte ${status}`)
    }
  }
  updateItemInfo();
}

module.exports = {updInventory};
---
| orders/
| | | orderHandler.js
/*This should replace the old order script that works like ass. 
Every Day, ask for a createdAfter for the last 2h. 
Every 2 hs. We'll ask for the orders for the last 2 hs. We should get all. And update the rest once we do. We 
*/

let sellingPartner  = require (`../sellerApiReq`);
const {query} = require('../basicReq');


async function crearReporteAmazon(){
    try {  
      let twoHoursBefore = new Date();
    twoHoursBefore.setHours(twoHoursBefore.getHours() - 2);
    let rightNow = new Date();
        let res = await sellingPartner.callAPI({
          operation:'createReport',
          endpoint:'reports',
          body:{
        reportType:'GET_FLAT_FILE_ALL_ORDERS_DATA_BY_ORDER_DATE_GENERAL',
        dataStartTime: twoHoursBefore.toISOString().slice(0,19) + '+00:00',
        dataEndTime: rightNow.toISOString().slice(0,19) + '+00:00',
        marketplaceIds:['ATVPDKIKX0DER']
        }
    })
    console.log(`El report ID es ${res.reportId}`);
        return res;
      } catch(e){
        console.log(e);
      }
}

async function getReportDocuments(report){
    try {
        let report_document = await sellingPartner.callAPI({
      operation:'getReportDocument',
      endpoint:'reports',
      path:{
        reportDocumentId: report.reportDocumentId // retrieve the reportDocumentId from a "getReport" operation (when processingStatus of report is "DONE")
      }
    });
    console.log(report_document);
        return (report_document);
      } catch(e){
        console.log(e);
      }
};

async function downloadReport (finalfinal) {
  try {
      let report = await sellingPartner.download(finalfinal, {
        json:true,
      });
      console.log(report);
      return report;
      } catch(e){
        console.log(e);
      }
};


class order {
    constructor(order_id,purchase_date,last_updated_date,status,saleschannel,fulfillment,asin,sku,quantity,principal,shipping,tax,shippingtax,promotion,order_total,nro_items,city,state,postal_code,procesado,error,missing_update,precargada,shipCountry,isBusinessOrder){
        this.order_id = order_id;
        this.purchase_date = purchase_date;
        this.last_updated_date = last_updated_date;
        this.status = status;
        this.saleschannel = saleschannel;
        this.fulfillment = fulfillment;
        this.asin = asin;
        this.sku = sku;
        this.quantity = quantity;
        this.principal = principal;
        this.shipping = 0;
        this.tax = 0;
        this.shippingtax = 0;
        this.promotion  = 0;
        this.order_total = order_total;
        this.nro_items = nro_items;
        this.city = city;
        this.state = state;
        this.postal_code = postal_code;
        this.procesado = procesado;
        this.error = error;
        this.missing_update = missing_update;
        this.precargada = precargada;
        this.shipCountry = shipCountry;
        this.isBusinessOrder = isBusinessOrder;

    }
};

async function getReport(id){
    try {
        let report_document = await sellingPartner.callAPI({
      operation:'getReport',
      endpoint:'reports',
      path:{
        reportId: id // retrieve the reportDocumentId from a "getReport" operation (when processingStatus of report is "DONE")
      }
    });
    //log(report_document);
    return (report_document);
      } catch(e){
        console.log(e);
      }
    };

  async function orderHandler(){
  let finalReport;
  let reportId = await crearReporteAmazon();
  let reportDocument = await getReport(reportId.reportId); // - 
  let status = reportDocument.processingStatus;
  while ((status == 'IN_QUEUE') || (status == 'IN_PROGRESS')){
    console.log(`Patience, my young padawan. ${reportDocument.processingStatus}`)
    reportDocument = await getReport(reportId.reportId);
    status = reportDocument.processingStatus;
    if (status == 'DONE'){

      }
      else if (status == 'CANCELLED' || status == 'FATAL'){
        console.log('exploto todo.');
      }
  }
  if (status == 'DONE'){
    let downloadUrl = await getReportDocuments(reportDocument);
    finalReport = await downloadReport(downloadUrl);
  }
  else
  {
    if (status == 'IN_PROGRESS' || status == ('IN_QUEUE')){
      console.log(`No deberia estar aca... por que saliste?! Si tu status no era DONE?? ${status}`)
    }
    else
    if (status == 'FATAL' || status == 'CANCELLED'){
      console.log(`Algo salio terriblemente mal. Reporte ${status}`)
    }
  }
  await actualizarDB(finalReport);
  console.log(`Concluido, ahora me pongo a actualizar pendientes.`);
  await updateOrders();
  console.log ('AHORA SI. Fijate a ver.')
  }
  
  async function actualizarDB(datos){
    console.log('arranco a Actualizar...');
    for (let i = 0; i < datos.length; i++){
      console.log(`Order ${i}: ${datos[i]['amazon-order-id']}`);
        order_id = datos[i]['amazon-order-id'];
        purchase_date = datos[i]['purchase-date'];
        last_updated_date = datos[i]['last-updated-date'];
        elstatus = datos[i]['order-status'];
        saleschannel = datos[i]['sales-channel'];
        fulfillment = datos[i]['fulfillment-channel'];
        asin = datos[i]['asin'];
        sku = datos[i]['sku'];
        quantity = datos[i]['quantity'];
        principal = datos[i]['item-price'] / datos[i]['quantity'];
        shipping = 0;
        tax = 0;
        shippingtax = 0;
        promotion  = 0;
        order_total = datos[i]['item-price'];
        nro_items = 1;
        city = datos[i]['ship-city'].replace(/[&\/\\#,+()$~%.'":*?<>{}]/g, "");
        state = datos[i]['ship-state'].replace(/[&\/\\#,+()$~%.'":*?<>{}]/g, "");
        postal_code = datos[i]['ship-postal-code'].replace(/[&\/\\#,+()$~%.'":*?<>{}]/g, "");
        procesado = 0;
        error = 0;
        missing_update = 1;
        precargada = 0;
        shipCountry = datos[i]['ship-country'].replace(/[&\/\\#,+()$~%.'":*?<>{}]/g, "");
        isBusinessOrder = datos[i]['is-business-order'];
        let producto = new order(order_id,purchase_date,last_updated_date,elstatus,saleschannel,fulfillment,asin,sku,quantity,principal,shipping,tax,shippingtax,promotion,order_total,nro_items,city,state,postal_code,procesado,error,missing_update,precargada,shipCountry,isBusinessOrder);

            await createRow(producto);
    }
    
};


async function createRow(producto){
  console.log(`Agreagando orden ${producto.order_id}`);
    await query (`INSERT INTO datos_ordenes (order_id,purchase_date,last_updated_date,status,saleschannel,fulfillment,asin,sku,quantity,principal,shipping,tax,shippingtax,promotion,order_total,nro_items,city,state,postalcode,procesado,error,missing_update,precargada,shipCountry,isBusinessOrder) VALUES ('${producto.order_id}','${producto.purchase_date}','${producto.last_updated_date}','${producto.status}','${producto.saleschannel}','${producto.fulfillment}','${producto.asin}','${producto.sku}','${producto.quantity}','${producto.principal}','${producto.shipping}','${producto.tax}','${producto.shippingtax}','${producto.promotion}','${producto.order_total}','${producto.nro_items}','${producto.city}','${producto.state}','${producto.postal_code}','${producto.procesado}','${producto.error}','${producto.missing_update}','${producto.precargada}','${producto.shipCountry}','${producto.isBusinessOrder==true?1:0}')`);
    console.log(`Contenido de ${producto.order_id} agregado.`);
};

function chunk (arr, len) {
    let chunks = [],
        i = 0,
        n = arr.length;
    while (i < n) {
      chunks.push(arr.slice(i, i += len));
    }
    console.log(chunks);
    return chunks;
  }

  async function atraparPendientes(){
    let res = await query(`SELECT * FROM datos_ordenes WHERE status = 'Pending'`);
      var orderList = new Set();
      let i = 0;
      while (i < res.length) {
          orderList.add(res[i].order_id);
          i++;
          }
      if (i> 0)
      console.log(`Las ordenes son: ${orderList}`);
      else
      console.log('No hay ordenes pendientes');
      return Array.from(orderList);
      }

async function updateOrders(){
    let res = await atraparPendientes();
    if (res.length > 0){
      console.log(`Actualizando...`)
      await actualizarPendientes(res);
    }
    else
    {
      console.log (`Nada para actualizar...`)
    }
}

async function getOrders(list){
  let res = await sellingPartner.callAPI({
    operation:'getOrders',
    endpoint:'orders',
    query:{
                MarketplaceIds: 'ATVPDKIKX0DER',
                AmazonOrderIds: list
              }
});
return res;
}

async function escribirDB(orderId,status){
  // If block
  if(status == "Shipped")  {
      //Actualizamos el estado en los datos_ordenes y actualizamos a confirmado (1) el profit en reporte_prueba.
      await query(`UPDATE datos_ordenes SET status = '${status}' WHERE order_id = '${orderId}'`)
      console.log(`Status actualizado a ${status} : Shipped. OK`);
      await query(`UPDATE reporte_prueba SET confirmed = 1 WHERE order_id = '${orderId}'`);
      console.log("Profit actualizado. OK");
      return true;  
  }
  // else if block
  else if (status == "Canceled") {
    //Actualizamos el estado en los datos_ordenes y actualizamos a cancelado (2) el profit en reporte_prueba.
    await query(`UPDATE datos_ordenes SET status = '${status}' WHERE order_id = '${orderId}'`)
    console.log(`Status actualizado a ${status} : Canceled. OK`)
    await query(`UPDATE reporte_prueba SET confirmed = 2 WHERE order_id = '${orderId}'`)
    console.log("Profit actualizado. OK")
    return true;  
  }
  else if (status == "Pending") {
    //No hace nada!.
    //await query(`UPDATE reporte_prueba SET confirmed = 0 WHERE order_id = '${order_id}'`);
    //await query( `UPDATE datos_ordenes SET status = 'Pending_Tmp' WHERE order_id = '${order_id}'`);
    console.log("Orden pendiente, no se hace nada.");
    return true;
  }  
  else {
    console.log ('Error catastrofico');
  }
}
      
async function actualizarPendientes(orderList){   
  if (orderList.length > 0) {
    let listas;
    let single;
    if (orderList.length > 50){ //Si las ordenes son mas de 50 hago packs.
      listas = chunk(orderList,50);
      console.log(listas);
    }
    else
      single = true; //Mando una sola tirada.
      console.log(`Las ${orderList.length} ordenes a procesar son: ${orderList}`);
      let orderListFinal = [];
      if (single){ //Si es una sola, tiro una por una a actualizar.
        orderListFinal = await getOrders(orderList);
        console.log(`Only 1 set`);
        console.log(orderListFinal.length);
        for (let i=0; i < orderListFinal.Orders.length; i++){
          console.log(`Order Length es ${orderListFinal.Orders.length}`)
          let order_id = orderListFinal.Orders[i].AmazonOrderId;
          let status = orderListFinal.Orders[i].OrderStatus;
          console.log(order_id);
          console.log(status);
          if (!await escribirDB(order_id,status))
            console.log(`Error de escritura en DB`); //Mando a escribir.
        }
      }
      else //Hay mas de 50, a kilombear todo.
      {
      for (let i = 0; i < listas.length; i++){
        let res = await getOrders(listas[i]);
        orderListFinal.push(res);
        console.log(`OrderListFinal, ahora es: ` + orderListFinal)
      }
      console.log(orderListFinal.length);
      for (let t = 0; t < orderListFinal.length; t++){
        console.log(`Vuelta Numero ${t}`);
        for (let i=0; i < orderListFinal[t].Orders.length; i++){
          console.log(`Order Length for t i es ${orderListFinal[t].Orders.length}`)
          let order_id = orderListFinal[t].Orders[i].AmazonOrderId;
          let status = orderListFinal[t].Orders[i].OrderStatus;
          console.log(order_id);
          console.log(status);
          if (!await escribirDB(order_id,status))
            console.log(`Error de escritura en DB`)
          }
      }
}
}
else
{
  console.log(`No hay ordenes`);
}        
}


module.exports = {orderHandler}


---
| | | profitCalculator.js
//getMyFeesEstimateForSKU

let sellingPartner  = require (`../sellerApiReq`);
const {query} = require('../basicReq');


class orderProfit {
    constructor(sku,order_id,cost,quantity,pv,sandl,orderDate,feesDate,idComprador,sales_channel,errr){
        this.sku = sku;
        this.order_id = order_id;
        this.cost = cost;
        this.quantity = quantity;
        this.sandl = sandl;
        this.sales_channel = sales_channel;
        this.pv = pv;
        this.fee;
        this.ganancia;
        this.orderDate = orderDate;
        this.feesDate = feesDate;
        this.idComprador = idComprador;
        this.errr = errr;
        this.procesado = 0;
    }
    
}

async function queryDatosOrdenes(){
    let res = await query(`SELECT * FROM datos_ordenes WHERE status = 'Shipped' AND procesado = '0'`);
        if (res?.length > 0 || res?.length != 'undefined'){
            return res;
        }
        else
        {
            console.log('No hay skus pendientes');
            return 0;
        }
}

async function queryDatosPOs(){
    let res = await query(`SELECT * FROM datos_pos WHERE active = '1'`);
    // cantidad de resultados
        if (res?.length > 0 || res?.length != 'undefined'){
            return res;
        }
        else
        {
            console.log('No hay POs Activas');
            return 0;
        }
}

async function queryInventory(){
    let res = await query(`SELECT * FROM datos_items`);
        if (res?.length > 0 || res?.length != 'undefined'){
            return res;
        }
        
        else
        {
            console.log('No hay items en Inventory');
            return 0;
        }
}

async function calcularFee(id){
    console.log(`Enviando SKU: ${id.sku}, de precio ${id.precio} y SNL = ${id.ofc}`);
    if (id.ofc)
    ofc = 'FBA_SNL';
    else
    ofc = 'FBA_CORE';
    let res = await sellingPartner.callAPI({
        operation:'getMyFeesEstimateForSKU',
        endpoint:'productFees',
        body:{
            FeesEstimateRequest: {
                MarketplaceId: 'ATVPDKIKX0DER',
                IsAmazonFulfilled: true,
                PriceToEstimateFees:{
                ListingPrice:{
                    Amount: id.precio,
                    CurrencyCode: 'USD',
                },
                },
                Identifier: id.sku,
                OptionalFulfillmentProgram: ofc
                }
            },
                
        path: {
                SellerSKU: id.sku
                }
                }
);
    //log(res);
    if (res.message == 'Too Many Requests'){
        console.log(`Recalculando`)
        res = await calcularFee(id);
    }
            
    //console.table(res.FeesEstimateResult.FeesEstimate.FeeDetailList[3].IncludedFeeDetailList)
    if (typeof res?.FeesEstimateResult?.FeesEstimate !== 'undefined')
    return res?.FeesEstimateResult?.FeesEstimate?.TotalFeesEstimate?.Amount;
    else
    return 0;
    }

async function groupie(){
    let v1 = await queryDatosOrdenes();
    let v2 = await queryDatosPOs();
    let v3 = await queryInventory()
    
    let vtotal = await mergeItems(v1, v2, v3);
    /*  tengo items mergeados. Ahora necesito mapear la lista para calcular fees con Promise.all()
        let vtotalcfees = await Promise.all(vtotal.map(async (item) => {
            let id = {sku: item.sku, precio : item.pv, ofc : item.sandl};
            let fee = await calcularFee(id);
            item.fee = fee;
            item.ganancia = item.pv - fee - item.cost;
            return item;
        }))*/
    if (vtotal != 0){
        //Necesito hacer una lista de calculos, sin duplicados. Para eso, agrego el primero, y si el segundo es el mismo que el primero, en $$ y SKU,
        //entonces no lo agrego. Pero como comparo todo? 
        let listaParaProcesar = [];
        for (let i = 0; i < vtotal.length; i++){
            let id = {sku:vtotal[i].sku,precio: vtotal[i].pv, ofc: vtotal[i].sandl,fee: 0};
            listaParaProcesar.push(id);
        }
        listaParaProcesar = listaParaProcesar.filter((value, index, self) =>
        index === self.findIndex((t) => (
        t.sku === value.sku && t.pv === value.pv
  ))
)
console.log(listaParaProcesar)
        
        /*vtotalcfees = await Promise.all(listaParaProcesar.map(async (item) => {
            let fee = await calcularFee(item);
            item.fee = fee;
            //item.ganancia = item.pv - fee - item.cost;
            return item;
        }))
*/
        for (let i = 0; i < listaParaProcesar.length; i++)
        {
            //console.log(`Procesando ${listaParaProcesar[i].sku}, la concha de la lora item numero ${i}`)
            listaParaProcesar[i].fee = await calcularFee(listaParaProcesar[i]);
            if (listaParaProcesar[i].fee == 0){
                console.log(`NO ANDA EL FEEEEEEEEEEEEEEEEEEE`)
            }else
            console.log(`El fee es de: ${listaParaProcesar[i].fee}`)
        }
        vtotalcfees = listaParaProcesar;
        //console.log(vtotal);
        //Ahora uno de nuevo la lista vtotal con los procesados (vcfees)
        for (let i = 0; i < vtotal.length; i++){
            for (let j = 0; j < vtotalcfees.length; j++){
                if (vtotal[i].sku == vtotalcfees[j].sku && vtotal[i].pv == vtotalcfees[j].precio)
                {
                    vtotal[i].fee = vtotalcfees[j].fee;
                    if (vtotalcfees[j].fees !== 0)
                    vtotal[i].ganancia = vtotal[i].pv - vtotal[i].cost - vtotal[i].fee;
                    else
                    vtotal[i].ganancia = 0;
                }
            }
        }
        console.log(`Nuevo VTOTAL! `)
        //console.table(vtotal)
        return vtotal;
        
        /* 
                // tengo items mergeados. Ahora necesito mapear la lista para calcular fees con Promise.all()
               let vtotalcfees = await Promise.all(vtotal.map(async (item) => {
                    let id = {sku: item.sku, precio : item.pv, ofc : item.sandl};
                    let fee = await calcularFee(id);
                    item.fee = fee;
                    item.ganancia = item.pv - fee - item.cost;
                    return item;
                }))
                return vtotalcfees;
    */
   }
    else
    {
        console.log(`Hubo un error procesando mergeItems.`)
        return 0;
    }
}

async function mergeItems(ordenes,pos,inventory){
    //Necesito unir POs y Inventory, para hacer POs con SL.
    //Si cualquiera es erroneo, entonces cortamos y devolvemos 0.
    if ((typeof ordenes.length == 'undefined' || typeof pos.length == 'undefined' || typeof inventory.length == 0) || (( ordenes.length == 0 ||  pos.length == 0 || inventory.length == 0)))
    {console.log(`Hay al menos uno de los 3 que no esta definido. No puedo trabajar asi. RENUNCIO! (?`);
    console.log(`INV: ${inventory.length}, POS: ${pos.length}, ORDENES: ${ordenes.length}`);
    return 0;}
    else
    {
        let errr;
        let merged = [];
        for (var i = 0; i < ordenes.length; i++){
            let conversion = 1;
            let order_id = ordenes[i].order_id;
            console.log(`Procesando ${order_id}`);
            let sku = ordenes[i].sku;
            let saleschannel = ordenes[i].saleschannel;
            if (saleschannel == 'Amazon.com.mx'){
                let res = await query(`SELECT * FROM config WHERE id = 1`);
                conversion = res[0].mxn_to_usd * 0.97 ;
                if (typeof conversion == 'undefined')
                console.log(`La cagamo con la conversion 1 eh.`);
            }
            else if(saleschannel == 'Amazon.ca'){
                let res = await query(`SELECT * FROM config WHERE id = 1`);
                conversion = res[0].cad_to_usd * 0.97;
                if (typeof conversion == 'undefined')
                console.log(`La cagamo con la conversion 2 eh.`);
            }
            else if (saleschannel !== 'Amazon.com' && saleschannel !== 'Amazon.com.mx' && saleschannel !== 'Amazon.ca'){
                errr = true;
                console.log(`Esta orden, ${saleschannel}, no es procesable.`)
            }
            let pv = ordenes[i].principal * conversion;
            let quantity = ordenes[i].quantity;
            let orderDate = ordenes[i].purchase_date;
            let feesDate = new Date().toISOString().slice(0,19) + '+00:00'
            let cost = 0; //POs
            let sandl; //INVENTORY
            let fee; // CALCULO
            let ganancia; //CALCULO
            let idComprador; //POs
            errr = false;
            for (let j = 0; j < pos.length; j++) {
                if (sku == pos[j].sku){
                     cost = pos[j].total_cost;
                     idComprador = pos[j].buyer_id;
                     //break;
                }
                else
                {
                    if (j == pos.length -1 && cost == 0){
                        console.log(`Hubo un error: No se encontro item activo con SKU: ${sku}`);
                        errr = true;
                    }
                }
            for (let j = 0; j<inventory.length;j++){
                if (sku == inventory[j].sku){
                    sandl = inventory[j].isEnrolledSL;
                    //break;
                }
                else
                if (j == pos.length-1 && sandl == 'undefined')
                {console.log(`Hubo un error: No se encontro en Inventory el SKU: ${sku}`);
                 errr = true;}
            }   
            }
            //Ahora tenemos todo el item, casi llenito, falta fee y ganancia! Si no hay error...
            if (!errr){
            let ofc;
            if (sandl)
            ofc = 'FBA_SNL';
            else
            ofc = 'FBA_CORE';
            //let id = {sku: sku, precio : pv, ofc : ofc};
            //fee = await calcularFee(id);
            //ganancia = pv - fee - cost;
            let temp = new orderProfit(sku,order_id,cost,quantity,pv,/*fee,*/sandl,/*ganancia,*/orderDate,feesDate,idComprador,saleschannel,errr);
            //log(`Orden: ${temp.order_id} dio profit: ${temp.ganancia}`)
            merged.push(temp);
            }
            else
            {
                console.log(`Capturado error: ${errr} para Order: ${order_id} de SKU: ${sku}`);
            }
        }
        
        return merged;
    }

}

async function actualizarDB(id){
    if (typeof id.order_id === 'undefined' || id.errr){
        console.log(`No se que hace aca, me voy`);
        return 0;
    }
    else
    {
        await query(`INSERT INTO reporte_prueba (id_comprador,order_id,order_date,fees_date,sku,quantity,principal,fees,cost,ganancia,refunded,replaced,confirmed) VALUES ('${id.idComprador}','${id.order_id}','${id.orderDate}','${id.feesDate}','${id.sku}','${id.quantity}','${!isNaN(id.pv)||id.pv?id.pv:0}','${id.fee?id.fee:0}','${id.cost?id.cost:0}','${id.ganancia?id.ganancia:0}',0,0,1)`);
        await query(`UPDATE datos_ordenes SET procesado = 1 WHERE order_id = '${id.order_id}' AND sku = '${id.sku}'`);
        console.log(`DB Actualizada.`);
        return true;
    }
    
}


async function profitCalc(){

    let itemList = await groupie();
    
    if (itemList == 0){
        return 0;
    }
   for (let i = 0; i < itemList.length; i++) {
    console.log(`Actualizando ${itemList[i].order_id}`);
        if (itemList[i].errr)
        console.log('lidiaremos con esto despues')
        else
        {
            let t = await actualizarDB(itemList[i]);
            if (!t){
                console.log(`ERRORRRRRRRRRR WIU WIU WIU `)
            }
        }

        console.log(`El profit de ${i} se ha actualizado.`);
        
        }
        console.log(`Concluido todo.`)             
}

module.exports = {profitCalc};

//calcularFee({sku:'GIT00000869',precio:9.99,ofc:'FBA_SNL'})
---
| | | profitCalculator2.js
//getMyFeesEstimateForSKU

let sellingPartner = require(`../sellerApiReq`);
const { query } = require("../basicReq");

async function getOrdersFromDB() {
  let res = await query(
    `SELECT * FROM datos_ordenes WHERE status = 'Shipped' AND procesado = '0'`
  );
  if (res?.length > 0 || res?.length != "undefined") {
    return res;
  } else {
    console.log("No hay skus pendientes");
    return 0;
  }
}

async function getPOsFromDB() {
  let res = await query(`SELECT * FROM datos_pos WHERE active = '1'`);
  // cantidad de resultados
  if (res?.length > 0 || res?.length != "undefined") {
    return res;
  } else {
    console.log("No hay POs Activas");
    return 0;
  }
}

async function getInventoryFromDB() {
  let res = await query(`SELECT * FROM datos_items`);
  if (res?.length > 0 || res?.length != "undefined") {
    return res;
  } else {
    console.log("No hay items en Inventory");
    return 0;
  }
}

async function agruparInformacion(){
    let orders = await getOrdersFromDB();
    let pos = await getPOsFromDB();
    let inventory = await getInventoryFromDB();

    let listaDeOrdenes = [];
    /*
    Necesito: 
    A cada orden, ponerla en un campo. La orden tiene: 
    this.sku = sku; <- De orders
    this.order_id = order_id; <- De orders
    this.cost = cost; <- De POs
    this.quantity = quantity; <- De orders
    this.sandl = sandl; <- De Inventory
    this.sales_channel = sales_channel; <- De orders
    this.pv = pv; <- De orders
    this.fee; <- AUTO
    this.ganancia; <- AUTO
    this.orderDate = orderDate; <- De orders
    this.feesDate = feesDate; <- AUTO
    this.idComprador = idComprador; <- De POs
    this.errr = errr; <- Auto
    this.procesado = 0; <- Auto
    */
   let basicModel = {};
    orders.forEach(order =>{
        basicModel.sku = order.sku;
        basicModel.order_id = order.order_id;
        basicModel.quantity = order.quantity;
        basicModel.sales_channel = order.sales_channel;
        basicModel.pv = order.pv;
        basicModel.orderDate = order.orderDate;
    })
}

class OrderProfit {
  constructor(
    sku,
    order_id,
    cost,
    quantity,
    pv,
    sandl,
    orderDate,
    feesDate,
    idComprador,
    sales_channel,
    errr
  ) {
    this.sku = sku;
    this.order_id = order_id;
    this.cost = cost;
    this.quantity = quantity;
    this.sandl = sandl;
    this.sales_channel = sales_channel;
    this.pv = pv;
    this.fee;
    this.ganancia;
    this.orderDate = orderDate;
    this.feesDate = feesDate;
    this.idComprador = idComprador;
    this.errr = errr;
    this.procesado = 0;
  }
  async saveOrder() {}

  async calculateOrder() {
    if (!(this.sku || this.cost || this.quantity || this.pv || this.errr )){
        errr = true;
        console.log('Error en algun campo! ')
        return 0;
    }
    console.log(
      `Enviando SKU: ${this.sku}, de precio ${this.pv} y SNL = ${this.sandl}`
    );
    let ofc;
    if (this.sandl) ofc = "FBA_SNL";
    else ofc = "FBA_CORE";
    let res = await sellingPartner.callAPI({
      operation: "getMyFeesEstimateForSKU",
      endpoint: "productFees",
      body: {
        FeesEstimateRequest: {
          MarketplaceId: "ATVPDKIKX0DER",
          IsAmazonFulfilled: true,
          PriceToEstimateFees: {
            ListingPrice: {
              Amount: this.pv,
              CurrencyCode: "USD",
            },
          },
          Identifier: this.sku,
          OptionalFulfillmentProgram: ofc,
        },
      },

      path: {
        SellerSKU: this.sku,
      },
    });
    //log(res);
    if (res.message == "Too Many Requests") {
      console.log(`Recalculando`);
      res = await this.calculateOrder();
    }

    //console.table(res.FeesEstimateResult.FeesEstimate.FeeDetailList[3].IncludedFeeDetailList)
    if (typeof res?.FeesEstimateResult?.FeesEstimate !== "undefined"){
      this.fee =  res?.FeesEstimateResult?.FeesEstimate?.TotalFeesEstimate?.Amount;
      this.ganancia = this.pv - this.fee - this.cost;
      }
    else 
      this.err = true;
  }
}

---
| pos/
| prices/
| | | repricer.js
/*    

CAMBIO DE PLANES! 

La clase Repricer main super pro OP, va a ser un conglomerado de items que se estan repriceando. Cada una actua como un independiente, se manejan solitas para intentar evitar errores externos. 

La clase Repricer solamente comanda logicas dentro del repricer solo. EJ: 
Tiene 50 items activos, 300 inactivos.
Corre los 50, luego los 300.
Cuando termine, solamente agrega a activos / inactivos y actualiza activos. El cambio es por DB.

Cuando termina de dar vuelta los activos, vuelve a preguntar, y vuelve a empezar. Va a ser re intenso con "Repricer Help" via Telegram. Asi que voy a tener que ver algo para evitar enviar la MISMA notificacion dos veces. 

Si la notif. es igual a la anterior que se envio hace mas de 2h, no reenviar?

*/
const RepricerLogic = require('./repricerClasses')
const fs = require('fs');
const {query} = require('../basicReq')

async function log(msg){
    console.log(msg);
}

class Repricer {
    constructor(){
        this.activeSKUs = []; //live Skus.
        this.inactiveSKUs = [];//Skus that have no stock
        this.skusOwners = [];
        this.notificationLog = [];
        this.notifsSent = [];
        this.reviewNotifs = [];
    }
    async setup(){
        //Alta de items. Unica vez.
        await this.writeOwners();//Primera vuelta de escribir duenios.
        console.log(`Duenios done.`)
        await this.writeSkus();//Primera vuelta de SKUs.
        console.log(`SKUs agregados`);
        this.run();
        return true;
    }

    addNewNotif(notif) {
        this.notificationLog.push({notif:notif,date:new Date()})
        console.log(notif.myOffer,'y price',notif.price,'en ',notif.sku);
        if (notif.myOffer == notif.price)
        return 0;
        if (this.reviewNotifs.length > 0)
        this.reviewNotifs = this.reviewNotifs.filter(notifi => notif.sku != notifi.sku);
        this.reviewNotifs.push({sku: notif.sku,notif:notif});
    }

    returnNotifs (active = false){
        if (active){
            return this.reviewNotifs.filter(notif => notif.notif.active );
        }
        return this.reviewNotifs;
    }

    returnAllNotifs(){
        return this.notificationLog;
    }

    async run(){
        let runs = 0;
        setInterval(async ()=>{
            runs++; 
            //Ever running.
            //On every loop, we will be cleaning old notifs. 
            //Update active - inactive.
            await this.updateSKUs();
            await this.runActive(true);
            await this.runActive(false);
        },1000* 60 * 15)
          
        }

    async writeOwners(){
        //once a day. 
        let itemOwners = await query(`SELECT * FROM datos_costos`);
        let newOwners = [];
        itemOwners.forEach(item => {
            newOwners.push({sku: item.sku,owner:item.buyerId});
        })
        this.skuOwners = newOwners;
    }

    async writeSkus(){
        //Writes down the SKUs. First time.
        let items = await query(`SELECT * FROM datos_items WHERE ignorar = 0`);
        let active = [];
        let inactive = [];
        items.forEach(item =>{
            if (item.afntotalquantity > 0)
                active.push(item.sku);
            else
                inactive.push(item.sku);
        })
        active.forEach(item => {
            this.activeSKUs.push(new RepricerLogic(item));
        })
        inactive.forEach(item => {
            this.inactiveSKUs.push(new RepricerLogic(item))
        })
        console.log(`WriteDown cleared.`)
        for (let item of this.activeSKUs) {
            let value = await item.limitsAndCompetition();
            if (value != -1){
                value.active = true;
                value.date = new Date()
                this.addNewNotif(value);
            }
        }/*
        for (let item of this.inactiveSKUs){
            let value = await item.limitsAndCompetition();
            if (value != -1){
                value.active = true;
                value.date = new Date()
                this.addNewNotif(value);
            }
        }*/
        console.log('All set');
        return true;
    }

    async updateSKUs(){
        let items = await query(`SELECT * FROM datos_items WHERE ignorar = 0`);
        let active = [];
        let inactive = [];
        items.forEach(item =>{
            if (item.afntotalquantity > 0)
                active.push(item.sku);
            else
                inactive.push(item.sku);
        })
        inactive.forEach(inactiveItem=>{ //busca inactivos en el array de activos.
            let indexOfObject = this.activeSKUs.findIndex(obj => {
                return obj.sku === inactiveItem.sku
            })
            if (indexOfObject){//Si encuentra, lo saca, y agrega a inactivos.
               this.activeSKUs.splice(indexOfObject,1)
               this.inactiveSKUs.push(new RepricerLogic (inactiveItem.sku))
            }
        })
        active.forEach(activeItem => {//Busca en la lista de inactivos items activos.
            let indexOfObject = this.inactiveSKUs.findIndex(obj => {
                return obj.sku === activeItem.sku
            })
            if (indexOfObject){//Si encuentra, lo saca, y agrega a activos.
               this.inactiveSKUs.splice(indexOfObject,1)
               this.activeSKUs.push(new RepricerLogic (activeItem.sku))
            }
        })
        return true;
    }

    async runActive(activos){
        if (activos){
            this.activeSKUs.forEach(one =>{
                one.limitsAndCompetition().then(value =>{
                    this.addNewNotif({notif: value,active:true,sku:value.sku,date:new Date(),myOffer: one.myOffer});
                });            
            })
        }
        else
        {
            this.inactiveSKUs.forEach(one =>{
                one.limitsAndCompetition().then(value =>{
                    this.addNewNotif({notif: value,active:false,sku:value.sku,date:new Date(),myOffer: one.myOffer})
                })
            });
        }
    }
}


module.exports = Repricer;
---
| | | repricerClasses.js
//The infamous Repricer class. This should handle all the logic for the repricer. Should receive a bunch of data and
//suggest the best price. Eventually, change it.
//It should access the "repricer" table for decision making.

const { query } = require("../basicReq");
let sellingPartner = require(`../sellerApiReq`);

class RepricerLogic {
  constructor(_sku) {
    this.sku = _sku;
    this.cero;
    this.map;
    this.userDefinedPrice;
    this.percentageUp = false;
    this.percentageDown = false;
    this.priceUp = false;
    this.priceDown = false;
    this.repricerOff;
  }
  async setMeUp() {
    let cero = await this.getCero(this.sku);
    if (cero != false) {
      await this.getAllInfoFromDB();
      return true;
    } else {
      this.repricerOff = true;
      return false;
    }
  }

  async getCompetitors() {
    try {
      let res = await sellingPartner.callAPI({
        operation: "getListingOffers",
        endpoint: "productPricing",
        path: {
          SellerSKU: [this.sku],
        },
        query: {
          ItemCondition: "New",
          MarketplaceId: 'ATVPDKIKX0DER',
        },
      });
      /*console.log(`LOWEST PRICES: ${res.Summary?.LowestPrices?.length}`);
      res.Summary?.LowestPrices?.forEach((price) => {
        console.log(
          `Price: ${price.LandedPrice?.Amount} from an ${
            price.fulfillmentChannel == "Amazon"
              ? "FBA"
              : price.fulfillmentChannel == "Merchant"
              ? "FBM"
              : "Unknown"
          } seller`
        );
      });*/
      /*console.log(`BUYBOX PRICES: `);
      res.Summary?.BuyBoxPrices?.forEach((price) => {
        console.log(
          `Price: ${price.LandedPrice?.Amount} from an ${
            price.fulfillmentChannel == "Amazon"
              ? "FBA"
              : price.fulfillmentChannel == "Merchant"
              ? "FBM"
              : "Unknown"
          } seller`
        );
      });*/
      let competitors = [];
      res.Summary?.LowestPrices?.forEach((price) => {
        let aux = {
          price: price.LandedPrice.Amount,
          fba: price.fulfillmentChannel == "Amazon" ? true : price.fulfillmentChannel == "Merchant" ? false : "Unknown",
        };
        competitors.push(aux);
      });
      let holder;
      let buybox = res.Summary?.BuyBoxPrices[0]?.LandedPrice?.Amount;
      competitors.forEach(one =>{
        if (one.price == buybox){
            one.fba? holder = 'FBA': holder = false;
        }
      })
      let miOferta;
      res.Offers.forEach(offer => {
        if (offer.MyOffer)
          miOferta = offer.ListingPrice.Amount;
      });
      return { competitors: competitors, buybox: buybox,holder: holder,myOffer:miOferta};
      /*
        console.log(`SALES RANKINGS: `)
        res.Summary?.SalesRankings?.forEach(rank => {
            console.log(`ID: ${rank.ProductCategoryId}, Rank: ${rank.Rank}`);
        })*/
    } catch (err) {
        if (err.code == 'InvalidInput'){
            console.log(`Posiblemente el sku ${this.sku} ya no exista. Lo voy a ignorar`);
            await query(`UPDATE datos_items SET ignorar = 1 WHERE sku='${this.sku}'`);

        }
        return -1
    }
  }

  /*    async lastSales(){
        let res = await query(`SELECT * FROM datosRestock WHERE sku='${this.sku}'`)
        if (res[0]?.sold >= 0 && res[0]?.currentStock > 0){ 
            this.lastThirtyDaySales =  res[0]?.sold;
        }
        if (res[0]?.currentStock == 0){ 
            this.inStock = false;
        }
        return true;
    }
*/

  async getAllInfoFromDB() {
    let res = await query(`SELECT * FROM repricer WHERE sku = '${this.sku}'`);
    this.map = res[0]?.map;
    if (!this.map) this.map = false;
    this.userDefinedPrice = parseFloat(res[0]?.userDefinedPrice);
    if (!this.userDefinedPrice) this.userDefinedPrice = false;
    this.percentageUp = parseFloat(res[0]?.percentageUp);
    if (!this.percentageUp) this.percentageUp = false;
    this.percentageDown = parseFloat(res[0]?.percentageDown);
    if (!this.percentageDown) this.percentageDown = false;
    this.priceUp = parseFloat(res[0]?.priceUp);
    if (!this.priceUp) this.priceUp = false;
    this.priceDown = parseFloat(res[0]?.priceDown);
    if (!this.priceDown) this.priceDown = false;
    //this.lastSales();
  }

  async getCero() {
    /* 
        Intenta buscar un cero calculado. Si no lo encuentra, pide el calculo y recibe.
        Y si aun no recibe su info, apaga el repricer para no mandarse cagadas.
        */
    let cero = await query(
      `SELECT * FROM datos_costos WHERE sku='${this.sku}'`
    );
    cero = cero[0]?.cero;
    //console.log(await query(`SELECT * FROM datos_costos WHERE sku='${this.sku}'`))
    if (cero !== undefined) {
      this.cero = parseFloat(cero);
      return true;
    }
    return false;
  }

  /* =================================================================
    ESENCIA DE FUNCIONAMIENTO DEL SCRIPT.
    El MAP, es la ley. No se baja a menos que se apague. Se apaga solamente si se le pide. 
    Este script no da de alta items (aun) pero lo hara. La idea no es dar de alta, es calcular precios basados en la info que tenemos.
    Para la alta, se hara otro pedazo de soft.
    ORDEN DE PRIORIDADES: 
    MAP (es la primer orden del dia. Si el MAP prohibe bajar, no importa nada)
    USER DEFINED PRICE. Es el precio propuesto por el usuario. "Manual". NO HACE NADA. Solo MAP.
    Automatic repricer. Si userDef no esta definido, y el MAP le permite, juega a subir y bajar (no menos que el map).
    Referencias: Buybox (que te da amz), competition, (que sacamos), ventas (que nos determina si deberiamos bajar), precio/porc (que dice, onda, cuanto podemos sub/baj).
    ================================================================== */

  async suggestedLimits() {
    await this.setMeUp();
    let reason = "";
    function c(num) {
      //cleaner.
      return parseFloat(parseFloat(num).toFixed(2));
    }
    let minimumSoFar = 0;
    let maxSoFar = 0;
    if (!this.cero || this.cero == []) {
      reason += ` NO HAY CERO! Repricer off`;
      return {
        repricerOff: true,
        myOffer: undefined,
        reason: reason,
        sku: this.sku
      };
    }
    if (this.repricerOff) {
      return {
        repricerOff: true,
        myOffer: undefined,
        reason: ` Repricer is off. Please set up all the variables.`,
        sku: this.sku
      };
    }
    if (this.map !== false) {
      minimumSoFar = this.map;
      reason += ` Hay MAP! \n`;
    }
    if (this.userDefinedPrice) {
      //Si esta en manual, solo chequeo el MAP.
      return {
        repricerOff: false,
        myOffer: undefined,
        sku: this.sku,
        minimo:
          this.userDefinedPrice > minimumSoFar
            ? c(this.userDefinedPrice)
            : c(minimumSoFar),
        maximo:
          this.userDefinedPrice > minimumSoFar
            ? c(this.userDefinedPrice)
            : c(minimumSoFar),
        reason:
          reason +
          `Precio manual ${c(this.userDefinedPrice)} vs map ${c(this.map)}`,
        cero: c(this.cero),
      };
    } //Si no está seteado en Manual, vamos a ver que podemos hacer..

    if (this.cero > minimumSoFar) {
      //El cero es mayor que el MAP. Pongo el cero.
      minimumSoFar = this.cero;
      reason += ` El cero es mayor al MAP (si hay)\n`;
    }
    if (this.percentageUp && !this.priceUp) {
      //Si esta seteado solo por %
      maxSoFar = (this.cero * (this.percentageUp + 100)) / 100;
      reason += ` El maximo es porcentaje alto ${this.percentageUp}%`;
    } else if (!this.percentageUp && this.priceUp) {
      //Si esta seteado solo por $
      maxSoFar = this.cero + this.priceUp;
      reason += ` El maximo es Precio alto $${this.priceUp}`;
    } //Ambos estan definidos o mal definidos. Default es 40% arriba.
    else {
      reason += ` Error en maxSoFar, Se usa valor default 40%. Revisar.\n`;
      maxSoFar = this.cero * 1.4;
    }
    if (this.percentageDown && !this.priceDown) {
      //Si el map existe, y es MAYOR al percentageDown, MAP. Else, PERC.
      if (this.cero * this.percentageDown < this.map) {
        minimumSoFar = this.map;
        reason += ` El minimo es el MAP, contra bajo ${this.percentageDown}%\n`;
      } else {
        minimumSoFar = (this.cero * (this.percentageDown + 100)) / 100;
        reason += ` El minimo es el cero menos ${this.percentageDown}% down. `; //Esto deberia ser NEGATIVO! 
      }
    } else if (!this.percentageDown && this.priceDown) {
      //Si el map existe, y es MAYOR al priceDown, MAP. Else, PriceDown.
      if (this.cero - this.priceDown < this.map) {
        minimumSoFar = this.map;
        reason += ` El minimo es el map contra precio bajo ${this.priceDown}`;
      } else {
        minimumSoFar = this.cero - this.priceDown;
        reason += ` El precio es el cero menos $${this.priceDown}.`;
      }
    }
    return {
      repricerOff: false,
      myOffer: undefined,
      minimo: c(minimumSoFar),
      maximo: c(maxSoFar),
      reason: reason,
      cero: c(this.cero),
      sku: this.sku
    };
  }
  async limitsAndCompetition(){
    let limits = await this.suggestedLimits();
    let competition = await this.getCompetitors();
    if (competition == -1){
        //Error. ignore el item. Ahora, tengo que saltearme todo esto.
        return -1;
    }
    //console.log(competition,limits)
    if (limits.repricerOff){
        return {repricerOff: limits.repricerOff,reason:limits.reason,sku: this.sku,myOffer: competition.myOffer};
    }
    if (typeof competition.myOffer=='undefined'){
      competition.myOffer = '0';
      limits.reason+='No se mi oferta. Creo que estoy inactivo.'
    }
    if (competition.buybox == competition.myOffer){
      return {repricerOff: false, reason: limits.reason+='El buybox es el mismo que mi oferta!.',price:competition.buybox,sku: this.sku,myOffer: competition.myOffer}
    }

    //Si no salio aca, es porque anda. Ahora, veamos si el buybox esta entre limites. 
    if (limits.maximo>=competition.buybox && limits.minimo <= competition.buybox){
        //Esto significa que anda todo bien. Estoy dentro de limites. Puedo copiar buybox.
        return {repricerOff: false,reason:limits.reason+=` y el buybox ${competition.buybox} esta entre limites`,price:competition.buybox,sku:this.sku,myOffer: competition.myOffer}
    }
    else
    {
        if (limits.maximo>=competition.buybox){
            //el problema es el minimo.
            return {repricerOff: false, reason: limits.reason+=` el minimo de es mas alto que el buybox ${competition.buybox}.`,price: limits.minimo,sku:this.sku,myOffer: competition.myOffer}
        }
        else{
            //El problema es el maximo.
            return {repricerOff: false, reason: limits.reason+=` el maximo es mas bajo que el buybox ${competition.buybox} .`, price: limits.maximo,sku:this.sku,myOffer: competition.myOffer}
        }
    }
  }
}

module.exports = RepricerLogic;

//repricer();

let precio = new RepricerLogic('GITA0000877SL');
precio.limitsAndCompetition();
---
| refunds/
| | | refundHandler.js
// AIO refund handler. 

let sellingPartner  = require (`../sellerApiReq`);
const {query} = require('../basicReq');

const now = new Date();
let aWeekAgo = new Date(now.getFullYear(), now.getMonth(), now.getDate() - 7);
let rightNow = new Date();



async function crearReporteReturns()
{
    try {  
        let res = await sellingPartner.callAPI({
            operation:'createReport',
            endpoint:'reports',
            body:{
        reportType:'GET_FBA_FULFILLMENT_CUSTOMER_RETURNS_DATA',
        dataStartTime: aWeekAgo,
        dataEndTime: rightNow,
        marketplaceIds:['ATVPDKIKX0DER']
        }
    })
    console.log(`El report ID es ${res.reportId}`);
        return res;
        } catch(e){
          console.log(e);
        }
};

async function crearReporteReplacements(){
    try {  
        let res = await sellingPartner.callAPI({
            operation:'createReport',
            endpoint:'reports',
            body:{
        reportType:'GET_FBA_FULFILLMENT_CUSTOMER_SHIPMENT_REPLACEMENT_DATA',
        dataStartTime: aWeekAgo,
        dataEndTime: rightNow,
        marketplaceIds:['ATVPDKIKX0DER']
        }
    })
    console.log(`El report ID es ${res.reportId}`);
        return res;
        } catch(e){
          console.log(e);
        }
};

async function getReport(id){
    try {
        let report_document = await sellingPartner.callAPI({
      operation:'getReport',
      endpoint:'reports',
      path:{
        reportId: id // retrieve the reportDocumentId from a "getReport" operation (when processingStatus of report is "DONE")
      }
    });
    //log(report_document);
    return (report_document);
      } catch(e){
        console.log(e);
      }
};

async function getReportDocuments(report){
    try {
        let report_document = await sellingPartner.callAPI({
        operation:'getReportDocument',
        endpoint:'reports',
        path:{
        reportDocumentId: report.reportDocumentId // retrieve the reportDocumentId from a "getReport" operation (when processingStatus of report is "DONE")
          }
        });
            //log(report_document);
            return (report_document);
          } catch(e){
            console.log(e);
          }
};
    
async function downloadReport (finalfinal) {
    try {
        let report = await sellingPartner.download(finalfinal, {
        json:true,
    });
        //log(report);
        return report;
    } catch(e){
      console.log(e);
    }
};

async function prepareReport(tipo){
  let finalReport;
  let reportId;
  if (tipo == 'returns')
  reportId = await crearReporteReturns(); //Creating returns.
  else
  if (tipo == 'replacements')
  reportId = await crearReporteReplacements(); //Creating replacements.
  if (typeof reportId == 'undefined'){
    console.log(`Aca no esperamos ni aca eh.`)
    return 0;
  }
  let reportDocument = await getReport(reportId.reportId);
  let status = reportDocument.processingStatus;
  while ((status == 'IN_QUEUE') || (status == 'IN_PROGRESS')){
    console.log(`Patience, my young padawan. ${reportDocument.processingStatus}`)
    reportDocument = await getReport(reportId.reportId);
    status = reportDocument.processingStatus;
    if (status == 'CANCELLED' || status == 'FATAL'){
        console.log('exploto todo.');
      }
  }
  if (status == 'DONE'){
    let downloadUrl = await getReportDocuments(reportDocument);
    finalReport = await downloadReport(downloadUrl);
    return finalReport;
  }
  else
  {
    if (status == 'FATAL' || status == 'CANCELLED'){
      console.log(`Algo salio terriblemente mal. Reporte ${status}`);
      return 0;
    }
  } 
}

class unReturn {
  constructor(return_date,order_id,sku,asin,fnsku,product_name,quantity,fulfillment,disposition,reason,status,license,comments,comprador){
      this.return_date = return_date;
      this.order_id = order_id;
      this.sku = sku;
      this.asin = asin;
      this.fnsku = fnsku;
      this.product_name = product_name.replace(/[&\/\\#,+()$~%.'":*?<>{}]/g, "");
      this.quantity= quantity;
      this.fulfillment = fulfillment.replace(/[&\/\\#,+()$~%.'":*?<>{}]/g, "");
      this.disposition = disposition.replace(/[&\/\\#,+()$~%.'":*?<>{}]/g, "");
      this.reason = reason.replace(/[&\/\\#,+()$~%.'":*?<>{}]/g, "");
      this.status = status.replace(/[&\/\\#,+()$~%.'":*?<>{}]/g, "");
      this.license = license.replace(/[&\/\\#,+()$~%.'":*?<>{}]/g, "");
      this.comments = comments.replace(/[&\/\\#,+()$~%.'":*?<>{}]/g, "");
      this.comprador = comprador;
  }
};

async function itemizador(datos,comp){
    let return_date = datos['return-date'];
    let order_id = datos['order-id'];
    let sku = datos['sku'];
    let asin = datos.asin;
    let fnsku = datos['fnsku'];
    let product_name = datos['product-name'];
    let quantity = datos['quantity'];
    let fulfillment = datos['fulfillment-center-id'];
    let disposition = datos['detailed-disposition'];
    let reason = datos['reason'];
    let status = datos['status'];
    let license = datos['license-plate-number'];
    let comments = datos['customer-comments'];
    let comprador = comp;
    let producto = new unReturn (return_date,order_id,sku,asin,fnsku,product_name,quantity,fulfillment,disposition,reason,status,license,comments,comprador);  
    console.log(producto);
    return producto;
};

async function getComprador(item){
  console.log(`Llamando a getComprador con argumento ${item}`)
    let res = await query(`SELECT * FROM datos_pos WHERE sku = '${item}' AND active = 1 LIMIT 1`);
    //console.log(res);
    if (res = []){
      return 0;
    }
    let comprador = res[0].buyer_id;
    console.log(`El comprador es: ${comprador}`);
    return comprador;
};

async function updateReturned(id){
    await query(`UPDATE reporte_prueba SET refunded = 1 WHERE order_id = '${id}'`);
}

async function updateReplaced(reps){
  reps.map(async(replacement)  =>{await query(`UPDATE reporte_prueba SET replaced = 1 WHERE order_id = '${replacement['order-id']}'`)});
}

async function escribirReturns(datos){
  console.log('Arranco a actualizar...')
        for (let i = 0; i < datos.length; i++) {
          let comp = await getComprador(datos[i].sku)
          let producto = await itemizador(datos[i],comp);
          if (producto.buyer_id == 0)
          console.log(`Ignorando ${producto.order_id} por falta de comprador`)
          else
          await createRow(producto);
          await updateReturned(producto.order_id);
        }
};

async function createRow(item){
  console.log(`Agregando refund de ${item.sku}`);
    await query (`INSERT INTO datos_refunds (id_comprador,return_date,order_id,sku,asin,fnsku,product_name,quantity,fulfillment,disposition,reason,status,license,comments,fee_commission,fee_refund_commission,fba_return_unit,costo_unidad,amz_fees,final,procesado) VALUES ('${item.comprador}','${item.return_date}','${item.order_id}','${item.sku}','${item.asin}','${item.fnsku}','${item.product_name}','${item.quantity}', '${item.fulfillment}','${item.disposition}','${item.reason}','${item.status}','${item.license}','${item.comments}','0','0','0','0','0','0','0')`);
    console.log(`Contenido de ${item.sku} agregado.`);
};

async function refundHandler(){
    //This actually does everything. First, returns, then replacements. 
    let returns = await prepareReport('returns');
    let replacements = await prepareReport('replacements');
    if (returns == 0)
    console.log('Returns not working properly');
    else
    await escribirReturns(returns);
    if (replacements == 0)
    console.log('Replacements not working properly');
    //else
    //await updateReplaced(replacements);

}

module.exports = {refundHandler}
---
| | sellerApiReq.js
require('dotenv').config({path: `.env.${process.env.NODE_ENV}`})

const SellingPartnerAPI = require('amazon-sp-api');

let sellingPartner = new SellingPartnerAPI({
    region:'na',
    refresh_token:process.env.AmzToken 
});

module.exports = sellingPartner;
---
| shipments/
| | | shipmentAdvisor.js
//Shipment Advisor. This should let me know which shipments are Working, Shipped, Receiving, missing units, etc. 

const {query} = require('../basicReq');

async function select (){
    console.log( await query(`SELECT * FROM usuarios`));
}

module.exports = {select}

/*




UNDER DEVELOPMENT



*/
---
| sourcing/
| | telegramBot.js
//requests for mysql and SP-API, promises, telegram bot. This

const {query} = require('./basicReq');
var md5 = require('md5');
const Repricer = require('./prices/repricer')
const {procesarListas} = require ('./tools/procesadorDeListasyVentas')

// We need to include payments functionality.
const Payment = require ('./finances/payments/payments');
const {feedbackReport} = require('../src/tools/feedback');


const TelegramBot = require('node-telegram-bot-api');
if (typeof process.env.teleToken !== 'undefined') {
  const bot = new TelegramBot(process.env.teleToken, {polling: true});

class AnmaTelegramBot {constructor (){
  this.loggedUsers = []; //users logueados.
  this.botoneraLoggedIn = [["Ganancias","Stock",'Restock'],["/logout","/nuevoPago","obtener ceros"]]; //Si estas logueado.
  this.botoneraLogin;  [["/login"]]; //Si no estas logueado, logueate
  this.testUser = ''; //Para testear un user pre login. 
  this.testPassword = ''; //Para testear un pw pre login.
  this.testChatId; //ChatID del que testea.
  this.notificationSentToday; //Si ya mande mis mensajes.
  this.liveMessageLog = []; //Log de mensajes. {chatid: '',text: ''}
  this.buscarUsersLogueados(); //Empecemos el bot, incluyendo los que ya estaban.
  this.formHandlerId = 0;
  this.formHandlerCurrentMessage = 0;
  this.tempPago = {id: undefined,type: undefined,amount: undefined,description: undefined,supplierId: undefined,invoiceId: undefined,netTerms: undefined,paymentDate: undefined,dueDate: undefined,poNumber: undefined};
}

async buscarUsersLogueados(){ //Veamos si habia gente logueada.
  try{
    let users = await query(`SELECT * FROM usuarios WHERE telegramChatId IS NOT NULL`);
  users.forEach(user => {
    let newUser =  {user: user.id, chatid: user.telegramChatId,isAdmin: user.es_admin};
    console.log(newUser);
    this.internalLogin(newUser);
  })
  }
  catch(e){
    console.warn (`Error en buscarUsersLogueados, `,e)
  }  
}

async internalLogin(info){ //Login interno. Solo agrega los users que no estan ya creados (evita dups.)
  try{
    if (!this.loggedUsers.includes(info)) // 
    this.loggedUsers.push(info);
  }
  catch(e){
    console.warn (`Error en internalLogin, `,e)
  }
}

async login(){//Login comun.
if (typeof this.testUser == 'undefined' || typeof this.testPassword == 'undefined' || this.testUser == '' || this.testPassword == '') {
  this.testUser = ''; this.testPassword = ''; //Reboot variables justin case.
  return -1; //login failed.
} // if we're here, we're good to go. 
try {
  let users = []; //Traigamos los usuarios con ese nombre.
  users = await query(`SELECT * FROM usuarios WHERE user = '${this.testUser}'`);
  if (users.length == 0) {
    return 0; //no such user.
  }
  if (users.length == 1){
    if (users[0].password == md5(this.testPassword))
    { //login succesfull. Ahora hagamos un objetito.
      let newUser = {user: users[0].id, chatid: this.testChatId,isAdmin: users[0].es_admin}; 
      console.log(newUser);
      //Reiniciemos las variables, ya las usamos.
      this.testUser = this.testPassword = this.testChatId = '';
      if (!this.loggedUsers.includes(newUser)) // Si no esta ya logueado, entonces lo agregamos
      {
        this.loggedUsers.push(newUser);
        bot.sendMessage(newUser.chatid,`Acceso correcto! Bienvenido/a ${users[0].nombre}`);
        bot.activeKeyboard
      }
      else
      {
        //Already logged in? Why? en fin..
        bot.sendMessage(newUser.chatid,`Por favor, quien lo manda a loguearse cuando ya esta logueado? En serio me pone a prueba asi?`);
      }
    }
  }
}
catch(e){
  console.warn (`Error en login, `,e)
}
}

async logout(chatid){
  try{
    this.loggedUsers = this.loggedUsers.filter(user => user.chatid != chatid);
    query (`UPDATE usuarios SET telegramChatId = NULL WHERE telegramChatId = '${chatid}'`);
    console.log(this.loggedUsers);
  } 
  catch(e){
    console.warn (`Error en logout, `,e)
  }
  
}

async logEveryoneOut(){
  try{
    query (`UPDATE usuarios SET telegramChatId = NULL`);
  } 
  catch(e){
    console.warn (`Error en logEveryoneOut, `,e)
  }
}

findUser(chatid){
  //Corroborar si el usuario está logueado.
  return (this.loggedUsers.find(user => user.chatid == chatid))!= undefined;
  }

async formHandler(msg){
  this.liveMessageLog.push(msg);

  /*----------------------------------------------------------------
  Form handler recibe un mensaje, que puede 
  A) Ser un inicializador (como x ej. Nuevo pago.)
  B) Un mensaje post-inizialicación (Como el proveedor al que asignar el pago)
  C) Un mensaje innecesario.

  En caso que sea C, retorna FALSE, y permite el acceso a mensajes comunes. 

  En caso que sea A), enciende una de las sub-funciones de Form, como por ej: Iniciar Pago, o Login, enviando la info necesaria para cada cosa. Al finalizar de recibir y validar la info, retorna una confirmación al usuario y deja de recibir msjs hasta el proximo inicializador. 
  
  INICIALIZADORES! 
  1 == NUEVO PAGO.
  2 == NUEVA PO.
  3 == LOGIN 
  4 == no se. 
----------------------------------------------------------------*/

  if (this.formHandlerId == 0){ 
    //Esto significa que no hay ningun form funcionando. Entonces, preguntamos si es uno de los inicializadores.
    if (msg.text.toString()== "/nuevoPago"){
      this.formHandlerId =1; //INICIA FORM PAGO.
      this.formHandlerCurrentMessage = await this.nuevoPago(msg); //Avisa a pagos que arranque, y se guarda a si mismo.
      return true;
    }
    else
    return false; //Ningun form corriendo, proceda a pie nomas con msjs comunes.
  }
  else {
    //Esto significa que hay algun form corriendo. 
    console.log(`${msg.text.toString()}`)
    if(msg.text.toString() == 'CANCELAR'){ //HAY QUE CANCELAR TODO! 
      if (this.formHandlerId == 1){
        this.nuevoPago('',0);
      }
      bot.sendMessage(msg.chat.id,'Proceso cancelado.');
      this.formHandlerId = 0;
      this.formHandlerCurrentMessage = 0;
      return false;
    }
    else
    { //Hay uno corriendo, y no es para cancelar. Ahora, mandemos al que va.
      if (this.formHandlerId == 1){
        //Pagos. 
        this.formHandlerCurrentMessage = await this.nuevoPago(msg,this.formHandlerCurrentMessage);
        console.log(`Current Message: ${this.formHandlerCurrentMessage}`)
        //console.log(`${this.formHandlerCurrentMessage} es el mensaje actual`);
        if (this.formHandlerCurrentMessage == 666){
          this.formHandlerId = 0;
          //ACA TENGO QUE PONER LA FUNCION DE CREAR PAGO.
          console.table(this.tempPago);
          let res = await this.pagar(this.tempPago);
          if (res != -1){
            bot.sendMessage(msg.chat.id,'Pago añadido correctamente.')
          }
          else {
            bot.sendMessage(msg.chat.id,'Error capturado. Avise a su desarrollador de confianza.')
          }
          this.nuevoPago('',0); //Reinicio pago.
        }
      }
    }
  }
}

async nuevoPago(msg,order){
  if (msg == '' && order == 0)
  {
    this.tempPago == {id: undefined,type: undefined,amount: undefined,description: undefined,supplierId: undefined,invoiceId: undefined,netTerms: undefined,paymentDate: undefined,dueDate: undefined,poNumber: undefined};
    return 0;
  }
  if (msg.text.toString()=='/nuevoPago'){
    //Tengo que pedir el ID, por mensaje. 
    bot.sendMessage(msg.chat.id,'Dando de alta nuevo pago. INGRESE EL ID del pago en caso que sea una actualizacion, o el nro 0 si es un pago nuevo.');
    bot.sendMessage(msg.chat.id,'Si en algun momento desea cancelar la operacion, escriba CANCELAR con mayus.')
    return 1;
  }
  else
  switch (order){
    case 1:{ 
      //1 es id. Recibir ID y pedir Type
      if (parseInt(msg.text.toString()) === 0){
        this.tempPago.id == undefined;
      }
      else {
        this.tempPago.id = parseInt(msg.text.toString());
      }
      bot.sendMessage(msg.chat.id,'Por favor ingrese el tipo de pago.',{
        "reply_markup": {
            "keyboard": [['Pago de PO'],['Gastos']]
            }
          });
          return 2;
    }
    case 2: {
      //type. Recibir type y pedir amount
      if (msg.text.toString() == 'Pago de PO'){
        this.tempPago.type = 'purchaseOrder';
        bot.sendMessage(msg.chat.id,'Ok, necesito el monto (usar solo . para decimales, no usar coma ni separar miles)',{
          "reply_markup": {
              "keyboard": this.botoneraLoggedIn
              }
            })
        return 3;
      }
      else if (msg.text.toString() == 'Gastos'){
        this.tempPago.type = 'expenses';
        bot.sendMessage(msg.chat.id,'Ok, necesito el monto (usar solo . para decimales, no usar coma ni separar miles ni simbolo $)',{
          "reply_markup": {
              "keyboard": this.botoneraLoggedIn
              }
            })
            return 3;
        
      }
      else //Reject and retry.
      bot.sendMessage(msg.chat.id,'Tipo invalido. Por favor use los provistos, no invente. REINTENTE');
      return 2;
    }
    case 3: {
      if (Number.isNaN(parseFloat(msg.text.toString()))){
        bot.sendMessage(msg.chat.id,'Monto invalido. Intente bien esta vez, no me haga programar al pedo. REINTENTE');
        return 3;
      }
      else
      {
        this.tempPago.amount = parseFloat(msg.text.toString());
        bot.sendMessage(msg.chat.id,'Ingrese descripcion del pago. Aca va lo que pinte, o NADA.');
        return 4;
      }
    }
    case 4: {
      this.tempPago.description = msg.text.toString();
      bot.sendMessage(msg.chat.id,'Ingrese supplier Id. Si no lo sabe, pregunte a Max antes de responder. No haga cagadas.');
      return 5;
    }
    case 5: {
      //suplierId y pedir invoiceId
      if (Number.isNaN(parseInt(msg.text.toString()))){
        bot.sendMessage(msg.chat.id,'Para que hablo. PREGUNTAR A MAX SI NO SE SABE. Va un num!! REINTENTE');
        return 5;
      }else{
        this.tempPago.supplierId = parseInt(msg.text.toString());
      bot.sendMessage(msg.chat.id,'Ingrese el numero de Invoice.');
      return 6;
      }
    }
    case 6: {
      //invoiceId y pedir NetTerms
      this.tempPago.invoiceId = msg.text.toString();
      bot.sendMessage(msg.chat.id,'Ingrese net Terms (Cantidad de dias de NET del prov. ES UN NUMERO ENTERO. Si no sabe, pregunte.');
      return 7;
    }
    case 7: {
      //netTerms y pedirPaymentDate
      if (Number.isNaN(parseInt(msg.text.toString()))){
        bot.sendMessage(msg.chat.id,'Ingrese net Terms (Cantidad de dias de NET del prov. ES UN NUMERO ENTERO. No funciono la vez anterior. Por dios.');
        return 7;
      }
      else
      {
        this.tempPago.netTerms = parseInt(msg.text.toString());
        bot.sendMessage(msg.chat.id,'Ingrese dia de pago. (fecha tipo USA (MM-DD-AAAA) o \'HOY\'');
        return 8;
      }
    }
    case 8: {
      //paymentDate y pedir DueDate
      if (msg.text.toString() == 'HOY'){
        this.tempPago.paymentDate = new Date ().toISOString();
      }
      else
      {
        this.tempPago.paymentDate = new Date (msg.text.toString()).toISOString();
      }
      bot.sendMessage(msg.chat.id,'Ingrese Due Date. Cuando habia que pagarlo. Mismo formato que antes, o \'HOY\'')
      return 9;
    }
    case 9: {
      //dueDate y pedir Purchase Order
      if (msg.text.toString() == 'HOY'){
        this.tempPago.dueDate = new Date ().toISOString();
      }
      else
      {
        this.tempPago.dueDate = new Date (msg.text.toString()).toISOString();
      }
      bot.sendMessage(msg.chat.id,'Ingrese numero de PO. NUMERO.')
      return 10;
    }
    case 10: {
      //poNumber y cerrar la request.
      if (Number.isNaN(parseInt(msg.text.toString()))){
        bot.sendMessage(msg.chat.id,'Eso no parece un numero...');
        return 10;
      }
      else {
        this.tempPago.poNumber = parseInt(msg.text.toString());
      }
      bot.sendMessage(msg.chat.id,'Ok, pago inicializado. Iniciando carga...',{
        "reply_markup": {
            "keyboard": this.botoneraLoggedIn
            }
          });
      return 666;
    }
  }
}

async pagar(pago){
  console.log('Pagando...')
  return await Payment.telePayment(pago);
}

async getRestock(chatid){
  if (typeof chatid != 'undefined'){ //Someone asked. 
    //necesito sacar el user, no el chat id.
    let whoAsked = this.loggedUsers.find(user => user.chatid == chatid);
    let notifs = [];
    if (whoAsked == undefined){
      return 0;
    }
    if(whoAsked.isAdmin)
      notifs = await query(`SELECT * from datosRestock`);
    else
      notifs = await query(`SELECT * from datosRestock WHERE comprador = ${whoAsked.user}`);
    console.table(notifs);
    return notifs;
  }
}

async getStock (chatid){
  //Obtener Inventario en Stock.
  //necesito sacar el user, no el chat id.
  try{
    let whoAsked = this.loggedUsers.find(user => user.chatid == chatid);
      if (typeof whoAsked !== 'undefined'){ 
      if (!whoAsked.isAdmin){
        let enStock = await query(`SELECT * FROM botazonStock WHERE id = '${whoAsked.user}'`);
        if (typeof enStock[0] == 'undefined')
        bot.sendMessage(chatid,`No se encontro el stock o no tiene logica.`)
        else
        bot.sendMessage(chatid,`Tiene $${enStock[0].amount} asignado en stock a la venta.`);
      }
      else
      {
        let enStock = await query(`SELECT * FROM botazonStock`);
        enStock.forEach(line => {
          bot.sendMessage(chatid,`USER: ${line.id} Tiene $${line.amount} asignado en stock a la venta.`);  
        })
      }
      } else {
        console.log("No hay un usuario asi.")
      }
      
  }
  catch(err){
    console.log(`Error en getStock`,err)
  }
  
}

async sendNotifications(chatid){
  try {
    let restockOrdenado = [];
    let stockEnExceso = '';
    let stockIdeal = '';
    let stockBajo = '';
    let stockAgotado = '';
if (typeof chatid != 'undefined'){
  //This means it's non-generic. Someone asked.
  let restock = await this.getRestock(chatid);
  if (restock != undefined)
  restock.forEach(line => {
    if (line.daysInStock > 60)
    stockEnExceso+=(`STOCK EN EXCESO: El item ${line.sku} tiene aprox: ${line.daysInStock} dias en stock! \n`);
    else
    if (line.daysInStock > 25)
    stockIdeal+=(`STOCK IDEAL: El item ${line.sku} tiene aprox: ${line.daysInStock} dias en stock! \n`);
    else
    if (line.daysInStock > 10)
    stockBajo+=(`STOCK BAJO: El item ${line.sku} tiene aprox: ${line.daysInStock} dias en stock! \n`);
    else
    if (line.daysInStock == 0)
    stockAgotado+=(`STOCK AGOTADO!: El item ${line.sku} NO TIENE MAS STOCK! \n`);
  })
  if (stockEnExceso !== ''){
    restockOrdenado.push(stockEnExceso);
  }
  if (stockIdeal !== ''){
    restockOrdenado.push(stockIdeal);
  }
  if (stockBajo !== ''){
    restockOrdenado.push(stockBajo);
  }
  if (stockAgotado !== ''){
    restockOrdenado.push(stockAgotado);
  }
  //console.table(restockOrdenado)
  if (restockOrdenado.length > 0){
    for (let i = 0; i < restockOrdenado.length; i++){
      bot.sendMessage(chatid,restockOrdenado[i]);
    }
  }
}
}
catch (e){
  console.log(`Error en sendNotifications: `,e)
  }
//if chat id is defined, send specific notifications, else generic. //NO MORE GENERIC ! Only per request, per user logged.

}

async enviarCeros(chatid){

  if (typeof chatid != 'undefined'){ //Someone asked. 
    //necesito sacar el user, no el chat id.
    let whoAsked = this.loggedUsers.find(user => user.chatid == chatid);
    let ceros = [];
    let proveedores = [];
    if (whoAsked == undefined){
      return 0;
    }
    if(whoAsked.isAdmin){
      ceros = await query(`SELECT * from datos_costos`);
      proveedores = await query (`SELECT * from datos_proveedores`);
      //console.table(proveedores)
    }
    else
    {
      ceros = await query(`SELECT * from datos_costos WHERE buyerId = ${whoAsked.user}`);
      proveedores = await query (`SELECT * from datos_proveedores WHERE id_comprador = ${whoAsked.user}`)
    }
    let notifs = [];
    console.table(ceros)
    ceros.forEach(line =>{
      let provDelItem = proveedores.find(prov => prov.id == line.supplierId);
      console.table(provDelItem)
      if (provDelItem !== undefined)
      notifs.push(`Prov: ${provDelItem.nombre.toUpperCase()}. SKU: ${line.sku}. Ultimo costo: $${parseFloat(line.costo).toFixed(2)}. Cero: ${parseFloat(line.cero).toFixed(2)}.`);
    })
    notifs.sort();
    let bigmsg='';
    notifs.forEach(notif => {
      bigmsg += notif + '\n';
      if (bigmsg.length > 3500){
        bot.sendMessage(chatid, bigmsg);
        bigmsg = '';
      }
  })
    bot.sendMessage(chatid,bigmsg,{
      "reply_markup": {
          "keyboard": this.botoneraLoggedIn
          }
        })
    }
}

async messageHandler(msg){
if (await this.formHandler(msg) == false){ //DEVUELVE FALSO SI NO ES UN MENSAJE IMPORTANTE!

if (msg.text.toString() == '/logout'){
  try{
    this.logout(msg.chat.id);
  bot.sendMessage(msg.chat.id,'Se borraron los registros de Login de su chat, si es que habia. Amargo.',{
    "reply_markup": {
        "keyboard": this.botoneraLogin
        }
      });
  }
  catch(e){
    console.warn (`Error en logout messageHandler, `,e)
  }
}

if (msg.text.toString().startsWith('USER:')){
  let user = msg.text.toString().split(':')[1];
  console.log(msg.chat.id);
  this.testUser = user
  this.testChatId = msg.chat.id;
  bot.sendMessage(msg.chat.id,'Ok, y la contraseña ahora, recorda: PW:ejemplo')
};

if (msg.text.toString().startsWith('PW:')){
  let password = msg.text.toString().split(':')[1];
  this.testChatId = msg.chat.id;
  this.testPassword = password;
  this.login();
};

//Si está logueado, entonces...
if (this.findUser(msg.chat.id)){
if (msg.text.toString().toLowerCase().indexOf('english') === 0){
  bot.sendMessage(msg.chat.id, "OH SORRY THE ARROGANT WANTS THE BOT IN ENGLISH. Well fuck you no tengo ganas de programar dos idiomas, conformate con español jajajaja",{
    "reply_markup": {
        "keyboard": this.botoneraLoggedIn
        }
      });
} else

if (msg.text.toString().toLowerCase().indexOf("español") === 0) {
  bot.sendMessage(msg.chat.id,"Idioma español. Igual no te iba a dejar poner ingles.",{
    "reply_markup": {
        "keyboard": this.botoneraLoggedIn
        }
      });
} else

if (msg.text.toString().toLowerCase().indexOf("procesar listas") === 0){
  bot.sendMessage(msg.chat.id,'Oki doki! Procesando lo que hay...');
  console.log(`oki`)
  procesarListas();
} else
  
if (msg.text.toString().toLowerCase().indexOf("ganancias") === 0) {
  bot.sendMessage(msg.chat.id,"Aca van a ir las ganancias",{
    "reply_markup": {
        "keyboard": this.botoneraLoggedIn
        }
      });
} else

if (msg.text.toString().toLowerCase().indexOf("stock") === 0) {
  this.getStock(msg.chat.id,{
    "reply_markup": {
        "keyboard": this.botoneraLoggedIn
        }
      });
}
else
if (msg.text.toString().toLowerCase().indexOf("restock") === 0) {
  this.sendNotifications(msg.chat.id,{
    "reply_markup": {
        "keyboard": this.botoneraLoggedIn
        }
      });
}
else 
if (msg.text.toString().toLowerCase().indexOf("obtener ceros") === 0){ 
  this.enviarCeros(msg.chat.id);
}
}
else
{
  console.log(msg.chat.id,'No esta autorizado, porque',this.findUser(msg.chat.id));
  bot.sendMessage(msg.chat.id,'No se encuentra autorizado a dicha consulta. Por favor, /login',{
    "reply_markup": {
        "keyboard": this.botoneraLogin
        }
      })  
}
};
}
}

let anmaTeleBot = new AnmaTelegramBot();

//Si necesita ayuda para el login.
bot.onText(/\/login/,(msg) => {
  console.log(msg.text.toString())
  bot.sendMessage(msg.chat.id, "Ingrese Usuario DE ESTA MANERA: USER:ejemplo y en otro mensaje, PW:ejemplo");
})

bot.onText(/\/start/, (msg) => {
  let activeKeyboard = [];
  if (anmaTeleBot.findUser(msg.chat.id)){
    //user already logged in.
    activeKeyboard = anmaTeleBot.botoneraLoggedIn;
  }
  else
  {
    activeKeyboard = anmaTeleBot.botoneraLogin;
    //user needs to log in. 
  }

  bot.sendMessage(msg.chat.id, "Bienvenido al bot de Anma", {
  "reply_markup": {
      "keyboard": activeKeyboard
      }
    });  
});

async function feedbackHandler(){
  let res = await feedbackReport();
  if (res){
      bot.sendMessage(202477440,'Hay un feedback NEGATIVO! Al ataque!');
  }
}
module.exports = {feedbackHandler};
/*
const repricer = new Repricer();
repricer.setup();

setInterval(() => {
    let notifs =  repricer.returnNotifs(true);
    if (notifs?.length > 0){
      console.log(`Holis`)
      notifs.forEach(one =>{
        let msg = `Repricer ${one.repricerOff?'ON':'OFF'}. Item: ${one.active?'Activo':'Inactivo'}, \n Razonamiento: ${one.reason}, Precio: ${one.price}, SKU: ${one.sku}, nuestra oferta ${one.myOffer?one.myOffer:'NO ANDA?'}`
        bot.sendMessage(202477440,msg);
      })
    }
},1000 * 60 * 5)
*/

bot.on("polling_error", (msg) => console.log(msg));

bot.on('message', (msg) => {anmaTeleBot.messageHandler(msg)});
}

//module.exports = bot
---
| | test.js

---
| tools/
| | | calcularVentas.js
const {scrap} = require('./scrapper')

 /*
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
 * Esto deberia recibir una categoria "cruda" y devolver ventas. * 
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
 */

 /*
baby_product
beauty
biss
grocery
health_and_beauty
home_improvement
kitchen
office_product
sports

 */

/*
				unknown_binding
				mass_market
				paperback
				hardcover
				school
				library
				cassette
				audioCD
				VHStape
				audio_video
				misc_supplies
				software
				spiral_bound
				cd_rom
				map
				poster
				leather_bound
				accessory
				game_cartridge
				ring_bound
				dvd
				t_shirt
				hat
				microfiche
				board_book
				game
				roughcut
				unbound
				turtleback
				vas
				journal
				flap
				pop-up
				lp_record
				perfect
				mini_disc
				dcc
				consumer_electronics- - - 
				toy- - - 
				gift
				puppet
				game_blocks
				game_computer
				game_video
				game_board
				housewares- - - 
				workbook
				nintendo64
				jewelry- - - 
				stationery
				battery
				miscellaneous
				diskette
				3_5_inch_disk
				3_5_and_5_25_inch_disk
				5_25_inch_disk
				theatrical_release
				license
				volume_license
				multiple_license
				lawn_and_garden- - - 
				digital
				tools
				bundle
				wireless_phone_accessory
				wireless_plan
				wireless_phone_SIMM
				paperback_bunko
				pod_generic
				pod_paperback
				pod_hardback
				wireless_collateral
				tankobon_hardcover
				tankobon_softcover
				magnetic_media
				comic
				mook
				jp_oversized_book
				e-points
				digital_audio_tape
				audio_reel_tape
				baby_product
				film
				slide
				transparency
				microfilm
				card_book
				wall_chart
				audio_download
				rag_book
				dvd_audio
				pc
				prepaid_phone_card
				health_and_beauty - - - 
				target_apparel- - - 
				target_home- - - 
				target_jewelry- - - 
				target_outdoor_sport- - - 
				target_gift
				target_ce
				target_kitchen- - - 
				target_gift_card
				target_luggage
				target_media
				target_beauty- - - 
				target_toys- - - 
				target_hardware
				target_food- - - 
				target_pets- - - 
				target_sports
				cadillac_binding
				bargain_book
				textbook
				laser_disc
				calendar
				pamphlet
				sheet_music
				cards
				consumer_magazine
				plastic_comb
				camera
				game_puzzle
				playstation
				home_improvement
				kitchen
				office_product
				watch
*/

const categories = [
    {
        amazonCategory:'baby_product',
        toolkitCategory:'Baby'
    },
    {
        amazonCategory:'beauty',
        toolkitCategory:'Beauty & Personal Care'
    },
    {
        amazonCategory:'grocery',
        toolkitCategory:'Grocery & Gourmet Food'
    },
    {
        amazonCategory:'health_and_beauty',
        toolkitCategory:'Helath & Household'
    },
    {
        amazonCategory:'home_improvement',
        toolkitCategory:'Tools & Home Improvement'
    },
    {
        amazonCategory:'kitchen',
        toolkitCategory:'Kitchen & Dining'
    },
    {
        amazonCategory:'office_product',
        toolkitCategory:'Office Products'
    },
    {
        amazonCategory:'sports',
        toolkitCategory:'Sports & Outdoors'
    }

]

function translator(category){
    const res = categories.find(one => one.amazonCategory == category);
    return res?res.toolkitCategory:'Not Found';
}

async function estimadorDeVentas(category,rank){
    const traducida = translator(category);
    if (traducida === 'Not Found')
        return -1;
    return await scrap(traducida.toolkitCategory,rank);
}
module.exports = {estimadorDeVentas};
---
| | | feedback.js
/*

Receives every feedback from all 3 marketplaces (USA, CA and MX) that isn't 4 - 5 stars. Saves it into Feedback.


*/

//let {query} = require('./../basicReq');
let sellingPartner  = require (`../sellerApiReq`);

async function createFeedbackReport(){
    try {
        let res = await sellingPartner.callAPI({
          operation:'createReport',
          endpoint:'reports',
          body:{
        reportType:'GET_SELLER_FEEDBACK_DATA',
        marketplaceIds:['ATVPDKIKX0DER','A2EUQ1WTGCTBG2','A1AM78C64UM0Y8'],
        dataStartTime: new Date (new Date().getFullYear(),new Date ().getMonth()-1,1),
        dataEndTime: new Date () 
        }
    })
    console.log(`El report ID es ${res.reportId}`);
        return res;
      } catch(e){
        console.log(e);
      }
}

async function getReport(id){
    try {
        let report_document = await sellingPartner.callAPI({
      operation:'getReport',
      endpoint:'reports',
      path:{
        reportId: id // retrieve the reportDocumentId from a "getReport" operation (when processingStatus of report is "DONE")
      }
    });
    //log(report_document);
    return (report_document);
      } catch(e){
        console.log(e);
      }
};

async function getReportDocuments(report){
    try {
        let reportDocument = await sellingPartner.callAPI({
          operation:'getReportDocument',
          endpoint:'reports',
          path:{
            reportDocumentId: report.reportDocumentId // retrieve the reportDocumentId from a "getReport" operation (when processingStatus of report is "DONE")
          }
    });
    //console.log(report_document);
        return reportDocument;
        } catch(e){
        console.log(e);
    }
};
    
async function downloadReport (report) {
    try {
        let res = await sellingPartner.download(report, {
            json:true,
        });
        return res;
    } catch(e){
    console.log(e);
    }
};

async function feedbackReport(){
    let reportId = await createFeedbackReport();
    reportId = await getReport(reportId.reportId);
    let status = reportId.processingStatus;
    while (status == 'IN_QUEUE' || status == 'IN_PROGRESS'){
        console.log(`Patience, my young padawan. ${reportId.processingStatus}.`);
        reportId = await getReport(reportId.reportId);
        status = reportId.processingStatus;
        if (status == 'CANCELLED' || status == 'FATAL'){
            console.log('Exploto todo');
        }
    }
    if (status == 'DONE'){
        let downloadUrl = await getReportDocuments(reportId);
        reportId = await downloadReport(downloadUrl);
        return true;
    }
    else
    {
      if (status == 'FATAL'){
        console.log(`Algo salio terriblemente mal. Reporte ${status}`);
      } else if (status == 'CANCELLED'){
        console.log(`Esto es una loteria. Puede estar vacio o andar mal... ${status}`);
        return false;
     
      }
    }

}

module.exports = {feedbackReport};
---
| | | procesadorDeListas.js
//Bienvenido a mi nuevo procesador de listas. 

//Plan: Encontrar una lista de UPCs / VENDEDORES, despues copiar todos los items, y procesarlos. 

//HOW TO: 
//Recibo una DB con x cantidad de items. (top 20, 5 veces por seg. y anotar resultados en una response table.)
//Agarro todos los items, y los paso por getMyFeesEstimate, con SL encendido en caso de que price < 9.99 y dims sean menores a N. 
//Luego, anoto todo en la response. SL prendido si es. Intentar guardar marcas!!!!

let sellingPartner  = require (`../sellerApiReq`);
const {query} = require('../basicReq');
//const {scrap} = require('../tools/scrapper')


async function traerItems() {
    let e = await query(`SELECT * FROM datos_listas WHERE processed = 0`);
    if (e?.length > 0 || typeof e?.lenght != 'undefined') 
    return e;
    else
    return 0;
};
 
  //ESTA FUNCION PROCESA UPCs, devuelve ASINES.
  async function upeces (list,nextToken){
    if (nextToken){
        try {
            let res = await sellingPartner.callAPI({
              operation:'searchCatalogItems',
              endpoint:'catalogItems',
              query:{
                pageToken: nextToken,
                pageSize: 20,
                marketplaceIds: 'ATVPDKIKX0DER',
                keywords: list,
                includedData: ['identifiers','summaries'],
            }
                    });
    
                return res;
              } catch(e){
                console.log(e);
              }
    }
    else
    try {
        let res = await sellingPartner.callAPI({
          operation:'searchCatalogItems',
          endpoint:'catalogItems',
          query:{
            Identifiers: list,
            IdentifiersType: 'UPC',
            marketplaceIds: 'ATVPDKIKX0DER',
            keywords: list,
            includedData: ['identifiers','summaries'],
            pageSize: 20, 
        }
                });
            return res;
          } catch(e){
            console.log(e);
          }
  }

async function prices (items,posi){
    let listita = [];
    if (items.length > posi + 20){
        //si la longitud de la lista es MAYOR a la posicion de la lista mas 20, entonces hay mas de 20 para subir. thus, subo los 20, sino, hasta los que haya.
        for (let j = 0; j < 20; j++){
            listita.push(items[posi+j].asin);
        }
    }
        else
        {
            //hay menos de 20 restantes... entonces, proceso los que quedan
            for (let j = 0; j <items.length - posi; j++){
                listita.push(items[posi+j].asin);
            }
        }
    try {
        let res = await sellingPartner.callAPI({
          operation:'getCompetitivePricing',
          endpoint:'productPricing',
          query:{
            Asins: listita,
            ItemType: 'Asin',
            MarketplaceId: 'ATVPDKIKX0DER',}
                });
            return res;
          } catch(e){
            console.log(e);
          }
  }


async function calculadora(item){
    //La calculadora pregunta si es SL.
    //Ok, bueno, determinado eso, rellenamos con info. Si el PV es 0, devuelvo 0 sin probar.
    if ((typeof item.sellingPrice == 'undefined') || (item.sellingPrice == 0)){
        return 0;
    }
    try {
        let res = await sellingPartner.callAPI({
            operation:'getMyFeesEstimateForASIN',
            endpoint:'productFees',
            body:{
                FeesEstimateRequest: {
                    MarketplaceId: 'ATVPDKIKX0DER',
                    IsAmazonFulfilled: true,
                    PriceToEstimateFees:{
                    ListingPrice:{
                        Amount: item.sellingPrice,
                        CurrencyCode: 'USD',
                    },
                    },
                    Identifier: item.asin,
                    OptionalFulfillmentProgram: item.program,
                    }
                },
                    
            path: {
                    Asin: item.asin
                    }
                    }
    );
        let fee = res?.FeesEstimateResult?.FeesEstimate?.TotalFeesEstimate?.Amount;
        return fee;
    }
    catch (err) {
        return 0;
    }
    
}

async function superCalculadora(it){
    const res = await Promise.all(it.map(item => calculadora(item)));
    console.log(res);
    return res;
};

let testUPCResult = [];

class item { constructor (upc, reference, cost,idLista){
    this.upc = upc;
    this.reference = reference;
    this.cost = cost;
    this.idLista = idLista;
}

}
class proceso {
    constructor (Asin){
        this.idLista;
        this.asin = Asin;
        this.upc;
        this.identifier;
        this.netFees; 
        this.sellingPrice; 
        this.cost;
        this.reference;
        this.program; 
        this.title;
        this.brand;
        this.rank; 
        this.category; 
        this.profit; 
    }   
}

function segundoAsignador(itemRes,oldItem){
    let asin = itemRes.asin;
    let resp = new proceso (asin);
    resp.identifier = JSON.stringify(itemRes.identifiers[0].identifiers);
    resp.upc = oldItem.upc;
    resp.title = itemRes.summaries[0].itemName;
    resp.brand = itemRes.summaries[0].brandName;
    resp.cost = oldItem.cost;
    resp.reference = oldItem.reference;
    resp.idLista = oldItem.idLista;
    return resp;
}

function primerAsignador (itemList){
    let res = [];
    for (let i = 0; i < itemList.length; i++) {
        if (!itemList[i].upc == ''){
            let pushi = new item(itemList[i].upc,itemList[i].reference,itemList[i].cost,itemList[i].idLista);
            res.push(pushi);
        }
    }
    return res;
    }

function tercerAsignador(li,pr){
    //Recibo precios y lista, saco nueva lista. 
    for (let i=0; i<li.length; i++){
        for (let j=0; j<pr.length; j++){
            if (li[i].asin == pr[j].ASIN){
                //Asignar a la lista, info de PR. Si tiene precio y si tiene rank. 
                if (typeof pr[j].Product !== 'undefined'){
                    if (typeof pr[j].Product.CompetitivePricing.CompetitivePrices[0] !== 'undefined')
                li[i].sellingPrice = pr[j].Product.CompetitivePricing.CompetitivePrices[0].Price.LandedPrice.Amount;
                if (pr[j].Product.SalesRankings.length){
                    li[i].category = pr[j].Product.SalesRankings[0].ProductCategoryId.slice(0,-19);
                    li[i].rank = pr[j].Product.SalesRankings[0].Rank;
                }
                
                }
                break;
            }
        }
    }
    return li;
}

async function procesarListas (){

    //Agarrar todos los UPCs y eso de un SQL. 
    let test1 = await traerItems();
    let listaNueva = primerAsignador(test1);
    let ciclos = 0; //CONTADOR DE CICLOS. 
    while (ciclos < listaNueva.length / 20)
    {
        let listaUpcs = [];
        for (let i = 0; (i < 20) && (i + 20 * ciclos < listaNueva.length); i++){
            let ii = i + 20 * ciclos;
            listaUpcs.push(listaNueva[ii].upc);
        }
        let res = await upeces(listaUpcs);
        for (let i = 0; i <res.items.length; i++){
            //Aca tengo que ver cual era el que mande... doy vuelta la lista n veces, y no corto aun si encontre...
            for (let j = 0; j<listaNueva.length;j++){
                let stri = JSON.stringify(res.items[i].identifiers[0].identifiers);
                if (stri.includes(listaNueva[j].upc)){
                    testUPCResult.push(segundoAsignador(res.items[i],listaNueva[j]));
                    break;
                }
                else
                {
                    if (j == listaNueva.length -1){
                        console.log('ya vali verga.');
                    }
                }
            }
        }
        if (typeof res.pagination.nextToken !== 'undefined'){
            //Significa que hay mas paginas. 
            //console.log(res);
            let nextToken = res.pagination.nextToken; //Guardo el primer token
            while (typeof nextToken !== 'undefined' ){ //Mientras siga habiendo token nuevo
                let res2 = await upeces(listaUpcs,nextToken); //Envio el token nuevo a pedir lista
                //console.log(res2);
                for (let i = 0; i <res2.items.length; i++) //Aca tengo que ver cual era el que mande... doy vuelta la lista n veces, y corto si encontre...
                for (let j = 0; j <listaNueva.length; j++){
                    let stri = JSON.stringify(res2.items[i].identifiers[0].identifiers);
                    if (stri.includes(listaNueva[j].upc)){
                        testUPCResult.push(segundoAsignador(res2.items[i],listaNueva[j]));
                        break;
                    }
                    else
                    {
                        if (j == listaNueva.length -1){
                            console.log('ya vali verga.');
                        }
                    }
                }
                if (typeof res2.pagination.nextToken !== 'undefined'){
                    nextToken = res2.pagination.nextToken ;
                }
                else{
                    nextToken = undefined;
                    //log('Sublistas procesadas')
                }
             }
        }
        ciclos++;
        console.log(`Obteniendo asines: ${ciclos * 20} de ${listaNueva.length} `)
    }
    //log(testUPCResult);
    //ya tenemos lista de UPC y ASIN con costo, ref, brand, etc. Necesitamos PV.
    let listaPrecios = [];
    for (let i = 0; i < testUPCResult.length; i+=20){
        let precios = await prices(testUPCResult,i);
        for (let j = 0; j<precios.length; j++){
            listaPrecios.push(precios[j]);
        }
        console.log(`Obteniendo precios de venta: ${listaPrecios.length} of ${testUPCResult.length}`);
    }
    //log(listaPrecios);
    testUPCResult = tercerAsignador(testUPCResult,listaPrecios);
    for (u = 0; u < testUPCResult.length; u++){
        //console.log(`${testUPCResult[u].asin} en posicion ${u}`);
    }
    let tercerContador = 0;
    for (let i = 0; i < testUPCResult.length; i=tercerContador){
            let calculo = [];
            let savedPositions = [];
            for (let j = 0; (calculo.length < 10) && (i+j < testUPCResult.length);j++){
                //Si tiene PV, entonces...
                if ((typeof testUPCResult[i+j].sellingPrice != 'undefined') || (testUPCResult[i+j].sellingPrice == 0))
                {
                if (testUPCResult[i+j].sellingPrice <= 10)
                {
                    testUPCResult[i+j].program = 'FBA_SNL';
                    calculo.push(testUPCResult[i+j]);
                    savedPositions.push(i+j);
                    //console.log(`${i+j}: ${testUPCResult[i+j].asin} agregado, SL`);
                    tercerContador++;
                }
                else
                {
                    testUPCResult[i+j].program = 'FBA_CORE';
                    calculo.push(testUPCResult[i+j]);
                    savedPositions.push(i+j);
                    //console.log(`${i+j}: ${testUPCResult[i+j].asin} agregado, CORE`);
                    tercerContador++;
                }
            }
            else{
                console.log(`${testUPCResult[i+j].asin} no tiene PV. Voy ${i+j}`);
                tercerContador++;
            }
            
            }
            const fees = await superCalculadora(calculo);
            for (let i=0; i<fees.length; i++){
                if (!fees[i] == 0)
                {
                    testUPCResult[savedPositions[i]].netFees = fees[i];
                    testUPCResult[savedPositions[i]].profit = testUPCResult[savedPositions[i]].sellingPrice - testUPCResult[savedPositions[i]].cost - testUPCResult[savedPositions[i]].netFees; 
                }  
            }
        }
    //LIMPIO LA LISTA con .replace(/[&\/\\#,+()$~%.'":*?<>{}]/g, "");
    for (let i = 0; i < testUPCResult.length; i++){
        let a = testUPCResult[i];
        if (typeof a.identifier != 'undefined')
        testUPCResult[i].identifier = a.identifier.replace(/[&\/\\#,+()$~%.'":*?<>{}]/g, "");
        if (typeof a.reference != 'undefined')
        testUPCResult[i].reference = a.reference.replace(/[&\/\\#,+()$~%.'":*?<>{}]/g, "");
        if (typeof a.title != 'undefined')
        testUPCResult[i].title = a.title.replace(/[&\/\\#,+()$~%.'":*?<>{}]/g, "");
        if (typeof a.brand != 'undefined')
        testUPCResult[i].brand = a.brand.replace(/[&\/\\#,+()$~%.'":*?<>{}]/g, "");
    }

    //Tengo que escribir todo ahora. 
    for (let i = 0; i < testUPCResult.length; i++){
        let a = testUPCResult[i];
        //console.log(a);
        await query (`INSERT INTO datos_listas_procesadas (idLista,reference,upc,cost,identifier,netFees,sellingPrice,program,title,brand,rank,category,profit,asin,processed) VALUES ('${a.idLista}','${a.reference}','${a.upc}','${a.cost}','${a.identifier}','${a.netFees}','${a.sellingPrice}','${a.program}','${a.title}','${a.brand}','${a.rank}','${a.category}','${a.profit}','${a.asin}','${a.processed}')`);
    }
    await query (`UPDATE datos_listas SET processed = '1' WHERE processed = '0' `);
    console.log(`all set.`);
}

module.exports = {procesarListas};

---
| | | procesadorDeListasyVentas.js
//Bienvenido a mi nuevo procesador de listas. 

//Plan: Encontrar una lista de UPCs / VENDEDORES, despues copiar todos los items, y procesarlos. 

//HOW TO: 
//Recibo una DB con x cantidad de items. (top 20, 5 veces por seg. y anotar resultados en una response table.)
//Agarro todos los items, y los paso por getMyFeesEstimate, con SL encendido en caso de que price < 9.99 y dims sean menores a N. 
//Luego, anoto todo en la response. SL prendido si es. Intentar guardar marcas!!!!

let sellingPartner  = require (`../sellerApiReq`);
const {query} = require('../basicReq');
let {estimadorDeVentas} = require('./calcularVentas')


async function traerItems() {
    let e = await query(`SELECT * FROM datos_listas WHERE processed = 0`);
    if (e?.length > 0 || typeof e?.lenght != 'undefined') 
    return e;
    else
    return 0;
};
 
  //ESTA FUNCION PROCESA UPCs, devuelve ASINES.
  async function upeces (list,nextToken=undefined){
        try {
            let res = await sellingPartner.callAPI({
              operation:'searchCatalogItems',
              endpoint:'catalogItems',
              query:{
                pageToken: nextToken,
                pageSize: 20,
                marketplaceIds: 'ATVPDKIKX0DER',
                keywords: list,
                includedData: ['identifiers','summaries'],
            }
                    });
    
                return res;
              } catch(e){
                console.log(e);
              }
    }

async function prices (items,posi){
    let listita = [];
    if (items.length > posi + 20){
        //si la longitud de la lista es MAYOR a la posicion de la lista mas 20, entonces hay mas de 20 para subir. thus, subo los 20, sino, hasta los que haya.
        for (let j = 0; j < 20; j++){
            listita.push(items[posi+j].asin);
        }
    }
        else
        {
            //hay menos de 20 restantes... entonces, proceso los que quedan
            for (let j = 0; j <items.length - posi; j++){
                listita.push(items[posi+j].asin);
            }
        }
    try {
        let res = await sellingPartner.callAPI({
          operation:'getCompetitivePricing',
          endpoint:'productPricing',
          query:{
            Asins: listita,
            ItemType: 'Asin',
            MarketplaceId: 'ATVPDKIKX0DER',}
                });
            return res;
          } catch(e){
            console.log(e);
          }
  }


async function calculadora(item){
    //La calculadora pregunta si es SL.
    //Ok, bueno, determinado eso, rellenamos con info. Si el PV es 0, devuelvo 0 sin probar.
    if ((typeof item.sellingPrice == 'undefined') || (item.sellingPrice == 0)){
        return 0;
    }
    try {
        let res = await sellingPartner.callAPI({
            operation:'getMyFeesEstimateForASIN',
            endpoint:'productFees',
            body:{
                FeesEstimateRequest: {
                    MarketplaceId: 'ATVPDKIKX0DER',
                    IsAmazonFulfilled: true,
                    PriceToEstimateFees:{
                    ListingPrice:{
                        Amount: item.sellingPrice,
                        CurrencyCode: 'USD',
                    },
                    },
                    Identifier: item.asin,
                    OptionalFulfillmentProgram: item.program,
                    }
                },
                    
            path: {
                    Asin: item.asin
                    }
                    }
    );
        let fee = res?.FeesEstimateResult?.FeesEstimate?.TotalFeesEstimate?.Amount;
        return fee;
    }
    catch (err) {
        return 0;
    }
    
}

async function superCalculadora(it){
    const res = await Promise.all(it.map(item => calculadora(item)));
    console.log(res);
    return res;
};

let testUPCResult = [];

class item { constructor (upc, reference, cost,idLista){
    this.upc = upc;
    this.reference = reference;
    this.cost = cost;
    this.idLista = idLista;
}

}
class proceso {
    constructor (Asin){
        this.idLista;
        this.asin = Asin;
        this.upc;
        this.identifier;
        this.netFees; 
        this.sellingPrice; 
        this.cost;
        this.reference;
        this.program; 
        this.title;
        this.brand;
        this.rank; 
        this.category; 
        this.profit; 
    }   
}

function segundoAsignador(itemRes,oldItem){
    let asin = itemRes.asin;
    let resp = new proceso (asin);
    resp.identifier = JSON.stringify(itemRes.identifiers[0].identifiers);
    resp.upc = oldItem.upc;
    resp.title = itemRes.summaries[0].itemName;
    resp.brand = itemRes.summaries[0].brandName;
    resp.cost = oldItem.cost;
    resp.reference = oldItem.reference;
    resp.idLista = oldItem.idLista;
    return resp;
}

function primerAsignador (itemList){
    let res = [];
    for (let i = 0; i < itemList.length; i++) {
        if (!itemList[i].upc == ''){
            let pushi = new item(itemList[i].upc,itemList[i].reference,itemList[i].cost,itemList[i].idLista);
            res.push(pushi);
        }
    }
    return res;
    }

function tercerAsignador(li,pr){
    //Recibo precios y lista, saco nueva lista. 
    for (let i=0; i<li.length; i++){
        for (let j=0; j<pr.length; j++){
            if (li[i].asin == pr[j].ASIN){
                //Asignar a la lista, info de PR. Si tiene precio y si tiene rank. 
                if (typeof pr[j].Product !== 'undefined'){
                    if (typeof pr[j].Product.CompetitivePricing.CompetitivePrices[0] !== 'undefined')
                li[i].sellingPrice = pr[j].Product.CompetitivePricing.CompetitivePrices[0].Price.LandedPrice.Amount;
                if (pr[j].Product.SalesRankings.length){
                    li[i].category = pr[j].Product.SalesRankings[0].ProductCategoryId.slice(0,-19);
                    li[i].rank = pr[j].Product.SalesRankings[0].Rank;
                    estimadorDeVentas(li[i].category,li[i].rank).then((value) =>{
                        li[i].sales = value;
                    }
                    )}
                
                }
                break;
            }
        }
    }
    return li;
}

async function procesarListas (){

    //Agarrar todos los UPCs y eso de un SQL. 
    console.log('Procesando LISTASSSSS')
    let test1 = await traerItems();
    let listaNueva = primerAsignador(test1);
    let ciclos = 0; //CONTADOR DE CICLOS. 
    while (ciclos < listaNueva.length / 20)
    {
        let listaUpcs = [];
        for (let i = 0; (i < 20) && (i + 20 * ciclos < listaNueva.length); i++){
            let ii = i + 20 * ciclos;
            listaUpcs.push(listaNueva[ii].upc);
        }
        let res = await upeces(listaUpcs);
        for (let i = 0; i <res.items.length; i++){
            //Aca tengo que ver cual era el que mande... doy vuelta la lista n veces, y no corto aun si encontre...
            for (let j = 0; j<listaNueva.length;j++){
                let stri = JSON.stringify(res.items[i].identifiers[0].identifiers);
                if (stri.includes(listaNueva[j].upc)){
                    testUPCResult.push(segundoAsignador(res.items[i],listaNueva[j]));
                    break;
                }
                else
                {
                    if (j == listaNueva.length -1){
                        console.log('ya vali verga.');
                    }
                }
            }
        }
        if (typeof res.pagination.nextToken !== 'undefined'){
            //Significa que hay mas paginas. 
            //console.log(res);
            let nextToken = res.pagination.nextToken; //Guardo el primer token
            while (typeof nextToken !== 'undefined' ){ //Mientras siga habiendo token nuevo
                let res2 = await upeces(listaUpcs,nextToken); //Envio el token nuevo a pedir lista
                //console.log(res2);
                for (let i = 0; i <res2.items.length; i++) //Aca tengo que ver cual era el que mande... doy vuelta la lista n veces, y corto si encontre...
                for (let j = 0; j <listaNueva.length; j++){
                    let stri = JSON.stringify(res2.items[i].identifiers[0].identifiers);
                    if (stri.includes(listaNueva[j].upc)){
                        testUPCResult.push(segundoAsignador(res2.items[i],listaNueva[j]));
                        break;
                    }
                    else
                    {
                        if (j == listaNueva.length -1){
                            console.log('ya vali verga.');
                        }
                    }
                }
                if (typeof res2.pagination.nextToken !== 'undefined'){
                    nextToken = res2.pagination.nextToken ;
                }
                else{
                    nextToken = undefined;
                    //log('Sublistas procesadas')
                }
             }
        }
        ciclos++;
        console.log(`Obteniendo asines: ${ciclos * 20} de ${listaNueva.length} `)
    }
    //log(testUPCResult);
    //ya tenemos lista de UPC y ASIN con costo, ref, brand, etc. Necesitamos PV.
    let listaPrecios = [];
    for (let i = 0; i < testUPCResult.length; i+=20){
        let precios = await prices(testUPCResult,i);
        for (let j = 0; j<precios.length; j++){
            listaPrecios.push(precios[j]);
        }
        console.log(`Obteniendo precios de venta: ${listaPrecios.length} of ${testUPCResult.length}`);
    }
    //log(listaPrecios);
    testUPCResult = tercerAsignador(testUPCResult,listaPrecios);
    for (u = 0; u < testUPCResult.length; u++){
        //console.log(`${testUPCResult[u].asin} en posicion ${u}`);
    }
    let tercerContador = 0;
    for (let i = 0; i < testUPCResult.length; i=tercerContador){
            let calculo = [];
            let savedPositions = [];
            for (let j = 0; (calculo.length < 10) && (i+j < testUPCResult.length);j++){
                //Si tiene PV, entonces...
                if ((typeof testUPCResult[i+j].sellingPrice != 'undefined') || (testUPCResult[i+j].sellingPrice == 0))
                {
                if (testUPCResult[i+j].sellingPrice <= 10)
                {
                    testUPCResult[i+j].program = 'FBA_SNL';
                    calculo.push(testUPCResult[i+j]);
                    savedPositions.push(i+j);
                    //console.log(`${i+j}: ${testUPCResult[i+j].asin} agregado, SL`);
                    tercerContador++;
                }
                else
                {
                    testUPCResult[i+j].program = 'FBA_CORE';
                    calculo.push(testUPCResult[i+j]);
                    savedPositions.push(i+j);
                    //console.log(`${i+j}: ${testUPCResult[i+j].asin} agregado, CORE`);
                    tercerContador++;
                }
            }
            else{
                console.log(`${testUPCResult[i+j].asin} no tiene PV. Voy ${i+j}`);
                tercerContador++;
            }
            
            }
            const fees = await superCalculadora(calculo);
            for (let i=0; i<fees.length; i++){
                if (!fees[i] == 0)
                {
                    testUPCResult[savedPositions[i]].netFees = fees[i];
                    testUPCResult[savedPositions[i]].profit = testUPCResult[savedPositions[i]].sellingPrice - testUPCResult[savedPositions[i]].cost - testUPCResult[savedPositions[i]].netFees; 
                }  
            }
        }
    //LIMPIO LA LISTA con .replace(/[&\/\\#,+()$~%.'":*?<>{}]/g, "");
    for (let i = 0; i < testUPCResult.length; i++){
        let a = testUPCResult[i];
        if (typeof a.identifier != 'undefined')
        testUPCResult[i].identifier = a.identifier.replace(/[&\/\\#,+()$~%.'":*?<>{}]/g, "");
        if (typeof a.reference != 'undefined')
        testUPCResult[i].reference = a.reference.replace(/[&\/\\#,+()$~%.'":*?<>{}]/g, "");
        if (typeof a.title != 'undefined')
        testUPCResult[i].title = a.title.replace(/[&\/\\#,+()$~%.'":*?<>{}]/g, "");
        if (typeof a.brand != 'undefined')
        testUPCResult[i].brand = a.brand.replace(/[&\/\\#,+()$~%.'":*?<>{}]/g, "");
    }

    //Tengo que escribir todo ahora. 
    for (let i = 0; i < testUPCResult.length; i++){
        let a = testUPCResult[i];
        //console.log(a);
        await query (`INSERT INTO datos_listas_procesadas (idLista,reference,upc,cost,identifier,netFees,sellingPrice,program,title,brand,rank,category,profit,asin,sales,processed) VALUES ('${a.idLista}','${a.reference}','${a.upc}','${a.cost}','${a.identifier}','${a.netFees}','${a.sellingPrice}','${a.program}','${a.title}','${a.brand}','${a.rank}','${a.category}','${a.profit}','${a.asin}','${a.sales}','${a.processed}')`);
    }
    await query (`UPDATE datos_listas SET processed = '1' WHERE processed = '0' `);
    console.log(`all set.`);
};

module.exports = {procesarListas};
---
| | | scrapper.js
const puppeteer = require('puppeteer');
require('events').EventEmitter.defaultMaxListeners = 50;

async function autoScroll(page) {
    await page.evaluate(async () => {
        await new Promise((resolve, reject) => {
            var totalHeight = 0;
            var distance = 100;
            var timer = setInterval(() => {
                var scrollHeight = document.body.scrollHeight;
                window.scrollBy(0, distance);
                totalHeight += distance;

                if (totalHeight >= scrollHeight) {
                    clearInterval(timer);
                    resolve();
                }
            }, 100);
        });
    });
}
const sleep = (s) => new Promise((resolve) => setTimeout(resolve, 1000 * s));

async function scrap(category , number) {
    const browser = await puppeteer.launch({
        headless: true,
        defaultViewport: false,
        userDataDirl: "./tmp"
    });
    const obj = {
        cat: "",
        days: 0,
        i: 0,
    }
    obj.cat = category;
    obj.days = number;
    const page = await browser.newPage();
    if (page === undefined)
    {
        console.error("failed in create a new tab");
        return(375732)
    }
    await page.goto("https://fbatoolkit.com/");
    if (page.goto == null)
    {
        console.error("failed in opening website");
        return (404);

    }
    await autoScroll(page);
    const delaySelector = await page.waitForSelector(".chart-container:last-of-type");
    if (delaySelector == null)
    {
        console.error("failed to load selector");
        return (-1);
    }
    var index = await page.evaluate((obj) => {
        var data = document.querySelectorAll('.chart-container');
        console.log('Revisando')
        if (!data)
            return null;
        var category;
        for (let i = 1; i < data.length; i++) {
            var cmp = data[i].innerText.split("\n")[1];
            cmp = cmp.toLowerCase();
            cmp =  cmp.replace(/\s+/g, '')
            var inp = obj.cat;
            inp = inp.toLowerCase();
            inp =  inp.replace(/\s+/g, '')
            if (cmp === inp)
            {
                category = data[i].querySelector(".chart").innerText.split("\n").shift(0);
                var input = data[i].querySelector("input").value = obj.days;
                const SubmitBtn = data[i].querySelector(".estimator-submit").click();
                return({
                    category : category,
                    index : i - 1,
                })
            }
        }
       return (404);
    }, obj)
    if (!index)
    {
        console.error("error in evaluator method");
        return;
    }
    if(index == 404){
        await browser.close();
        console.error("try to input correct arguments");
        return;
    }
    await sleep(3);
    var data = await page.$$('.chart-container > .estimator-container');
    if (!data)
    {
        await browser.close();
        console.error("there's no container in this webpage");
        return ;
    }
    let result = await page.evaluate(el => el.innerText.split("\n")[1].split(' (')[0].split(' ').pop(-1), data[index.index])
    if (!result)
    {
        await browser.close();
        return null;

    }
    //console.log("this is the result " + result);
    await browser.close();
    return result;
};

module.exports = {scrap}
/*
scrap("Office Products", 13000).then(value => {
    console.log(value)
});*/
---
| | | smallAndLight.js
//smallAndLight.js

let sellingPartner  = require (`../sellerApiReq`);
const {query} = require ('../../src/basicReq');


async function selectAllItems(){
    let res = await query(`SELECT * FROM datos_items`);
    let retorno = [];
    for (let i = 0; i < res.length; i++) {
        retorno.push(res[i].sku);
    }
    return retorno;
}

async function areElegible(u){
    if (u.length > 0 || typeof u != 'undefined') {
        let retorno = [];
        for (let i = 0; i < u.length; i++) {
            let res = await llamarElegible(u[i])
            if (res)
            {
                retorno.push(u[i]);
            }
        }
        console.log(retorno)
        return retorno;
    }
    else
    return 0;
}

async function areEnrolled(u){
    let retorno = [];
    for (let i = 0;i<u.length; i++) {
        let j = await getEnrollment(u[i]);
        if (j === false){
            console.log(`${u[i]} deberia ser Small and Light!`);
        }
        
    }
}

async function getEnrollment(u){
    try {
      let res = await sellingPartner.callAPI({
        operation:'getSmallAndLightEnrollmentBySellerSKU',
        endpoint:'fbaSmallAndLight',
        path: {sellerSKU: u},
        query:{marketplaceIds: 'ATVPDKIKX0DER'}
                });
          if (res.status == 'ENROLLED')
          return true;
          else
          return false;   
        } catch(e){
        console.log(e);
        }
    }

async function llamarElegible(u){
    try {
        let res = await sellingPartner.callAPI({
          operation:'getSmallAndLightEligibilityBySellerSKU',
          endpoint:'fbaSmallAndLight',
          path: {sellerSKU: u},
          query:{marketplaceIds: 'ATVPDKIKX0DER'}
                  });

            if (res.status == 'ELIGIBLE')
            {
                return true;
            }  
            else{
                console.log(`${u} NO!`)
                return false;
            }
               
          } catch(e){
            console.log(`SKU: ${u}, ${e}`);
            return false;
          }
      }

async function smallAndLightTool(){
    let selected = await selectAllItems();
    //log(selected);
    let elegibility = await areElegible(selected);
    if (elegibility == 0){
        return 0;
    }
    else{
        await areEnrolled(elegibility);
    }
    
}
module.exports = {smallAndLightTool};
---
views/
